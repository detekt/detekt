buildscript {
	repositories {
		mavenCentral()
		mavenLocal()
		maven { url "http://dl.bintray.com/jetbrains/spek" }
		maven { url "http://dl.bintray.com/arturbosch/code-analysis" }
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
		classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"
	}
}

plugins {
	id "io.gitlab.arturbosch.detekt" version "1.0.0.M10"
	id "com.jfrog.bintray" version "1.7.3"
	id 'com.github.ben-manes.versions' version '0.13.0'
	id "com.github.johnrengelman.shadow" version "1.2.3"
//		id "com.github.hierynomus.license" version "0.13.1"
}

allprojects {

	group 'io.gitlab.arturbosch.detekt'
	version "$detektVersion"

	repositories {
		mavenCentral()
		mavenLocal()
		maven { url "http://dl.bintray.com/jetbrains/spek" }
		maven { url "http://dl.bintray.com/arturbosch/code-analysis" }
	}

	apply plugin: 'org.junit.platform.gradle.plugin'
	apply plugin: 'kotlin'
	apply plugin: 'maven'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'
	apply plugin: 'com.github.ben-manes.versions'
//	apply plugin: 'com.github.hierynomus.license'

	def projectName = it.name
	if (projectName == "detekt-cli" || projectName == "detekt-migration"
			|| projectName == "detekt-formatting") {
		apply plugin: 'application'
		apply plugin: 'com.github.johnrengelman.shadow'
	}

	junitPlatform {
		filters {
			engines {
				include 'spek', "junit-jupiter"
			}
		}
	}

	uploadArchives {
		repositories {
			mavenDeployer {
				repository(url: uri('../repo'))
			}
		}
	}

	bintray {
		user = System.getenv("BINTRAY_USER") ?: ""
		key = System.getenv("BINTRAY_API_KEY") ?: ""
		publications = ["DetektPublication"]

		pkg {
			repo = 'code-analysis'
			name = 'detekt'
			userOrg = 'arturbosch'
			licenses = ['Apache-2.0']
			vcsUrl = "https://github.com/arturbosch/detekt"

			version {
				name = project.version
				released = new Date()
			}
		}
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar, dependsOn: javadoc) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}

	artifacts {
		archives sourcesJar
		archives javadocJar
	}

	def pomConfig = {
		licenses {
			license {
				name "The Apache Software License, Version 2.0"
				url "http://www.apache.org/licenses/LICENSE-2.0.txt"
				distribution "repo"
			}
		}
		developers {
			developer {
				id "Artur Bosch"
				name "Artur Bosch"
				email "arturbosch@gmx.de"
			}
		}

		scm {
			url "https://github.com/arturbosch/detekt"
		}
	}

	publishing {
		publications {
			DetektPublication(MavenPublication) {
				from components.java
				artifact sourcesJar
				artifact javadocJar
				groupId project.group
				artifactId project.name
				version project.version
				pom.withXml {
					def root = asNode()
					root.appendNode('description', 'Static code analysis for Kotlin')
					root.appendNode('name', 'detekt')
					root.appendNode('url', 'https://github.com/arturbosch/detekt')
					root.children().last() + pomConfig
				}
			}
		}
	}

	configurations {
		kotlinCompile
		kotlinTest
		junitPlatform
	}

	dependencies {
		kotlinCompile "org.jetbrains.kotlin:kotlin-compiler:$kotlinVersion"
		kotlinCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
		kotlinTest "org.junit.jupiter:junit-jupiter-api:$junitEngineVersion"
		kotlinTest "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
		kotlinTest "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
		kotlinTest "org.assertj:assertj-core:$assertjVersion"
		kotlinTest "org.jetbrains.spek:spek-api:$spekVersion"
		kotlinTest "org.jetbrains.spek:spek-subject-extension:$spekVersion"
		kotlinTest "org.junit.jupiter:junit-jupiter-engine:$junitEngineVersion"
		junitPlatform "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
		junitPlatform "org.junit.platform:junit-platform-console:$junitPlatformVersion"
		junitPlatform "org.jetbrains.spek:spek-junit-platform-engine:$spekVersion"
	}

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
	}
}

detekt {
	config = "$project.projectDir/default-detekt-config.yml"
	filters = '.*/test/.*'
	debug = true
}

repositories {
	maven { url "http://dl.bintray.com/arturbosch/code-analysis" }
}
