"use strict";(self.webpackChunk_detekt_website=self.webpackChunk_detekt_website||[]).push([[4129],{86242:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>h,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>f});const s=JSON.parse('{"id":"gettingstarted/cli","title":"Run detekt using Command Line Interface","description":"Install the cli","source":"@site/versioned_docs/version-2.0.0-alpha.0/gettingstarted/cli.mdx","sourceDirName":"gettingstarted","slug":"/gettingstarted/cli","permalink":"/docs/gettingstarted/cli","draft":false,"unlisted":false,"editUrl":"https://github.com/detekt/detekt/edit/main/website/versioned_docs/version-2.0.0-alpha.0/gettingstarted/cli.mdx","tags":[],"version":"2.0.0-alpha.0","sidebarPosition":1,"frontMatter":{"title":"Run detekt using Command Line Interface","keywords":["cli"],"sidebar":null,"permalink":"cli.html","folder":"gettingstarted","summary":null,"sidebar_position":1},"sidebar":"defaultSidebar","previous":{"title":"Compatibility Table","permalink":"/docs/introduction/compatibility"},"next":{"title":"Run detekt using the Detekt Gradle Plugin","permalink":"/docs/gettingstarted/gradle"}}');var i=t(74848),a=t(28453);function o(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Usage: detekt [options] Options to pass to the Kotlin compiler.\n  Options:\n    --all-rules\n      Activates all available (even unstable) rules.\n      Default: false\n    --analysis-mode\n      Analysis mode used by detekt. 'full' analysis mode is comprehensive but \n      requires the correct compiler options to be provided. 'light' analysis \n      cannot utilise compiler information and some rules cannot be run in this \n      mode. \n      Default: light\n      Possible Values: [full, light]\n    --api-version\n      Kotlin API version used by the code under analysis. Some rules use this \n      information to provide more specific rule violation messages.\n    --auto-correct, -ac\n      Allow rules to auto correct code if they support it. The default rule \n      sets do NOT support auto correcting and won't change any line in the \n      users code base. However custom rules can be written to support auto \n      correcting. The additional 'formatting' rule set, added with \n      '--plugins', does support it and needs this flag.\n      Default: false\n    --base-path, -bp\n      Specifies a directory as the base path.Currently it impacts all file \n      paths in the formatted reports. File paths in console output are not \n      affected and remain as absolute paths.\n      Default: /Users/ncor/oss/detekt/detekt-generator\n    --baseline, -b\n      If a baseline xml file is passed in, only new findings not in the \n      baseline are printed in the console.\n    --build-upon-default-config\n      Preconfigures detekt with a bunch of rules and some opinionated defaults \n      for you. Allows additional provided configurations to override the \n      defaults. \n      Default: false\n    --classpath, -cp\n      Paths where to find user class files and depending jar files. Used for \n      type resolution.\n    --config, -c\n      Path to the config file (path/to/config.yml). Multiple configuration \n      files can be specified with ',' or ';' as separator.\n      Default: []\n    --config-resource, -cr\n      Path to the config resource on detekt's classpath (path/to/config.yml).\n      Default: []\n    --create-baseline, -cb\n      Treats current analysis findings as a smell baseline for future detekt \n      runs. \n      Default: false\n    --debug\n      Prints extra information about configurations and extensions.\n      Default: false\n    --disable-default-rulesets, -dd\n      Disables default rule sets.\n      Default: false\n    --excludes, -ex\n      Globbing patterns describing paths to exclude from the analysis.\n    --fail-on-severity\n      Specifies the minimum severity that causes the build to fail. When the \n      value is set to 'Never' detekt will not fail regardless of the number of \n      issues and their severities.\n      Default: Error\n      Possible Values: [Error, Warning, Info, Never]\n    --generate-config, -gc\n      Export default config to the provided path.\n    --help, -h\n      Shows the usage.\n    --includes, -in\n      Globbing patterns describing paths to include in the analysis. Useful in \n      combination with 'excludes' patterns.\n    --input, -i\n      Input paths to analyze. Multiple paths are separated by comma. If not \n      specified the current working directory is used.\n      Default: [/Users/ncor/oss/detekt/detekt-generator]\n    --jdk-home\n      Use a custom JDK home directory to include into the classpath\n    --jvm-target\n      Target version of the generated JVM bytecode that was generated during \n      compilation and is now being used for type resolution\n      Default: 1.8\n      Possible Values: [1.6, 1.8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\n    --language-version\n      Compatibility mode for Kotlin language version X.Y, reports errors for \n      all language features that came out later\n      Possible Values: [1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3]\n    --parallel\n      Enables parallel compilation and analysis of source files. Do some \n      benchmarks first before enabling this flag. Heuristics show performance \n      benefits starting from 2000 lines of Kotlin code.\n      Default: false\n    --plugins, -p\n      Extra paths to plugin jars separated by ',' or ';'.\n      Default: []\n    --report, -r\n      Generates a report for given 'report-id' and stores it on given 'path'. \n      Entry should consist of: [report-id:path]. Available 'report-id' values: \n      'xml', 'html', 'md', 'sarif'. These can also be used in combination with \n      each other e.g. '-r html:reports/detekt.html -r xml:reports/detekt.xml'\n      Default: []\n    --version\n      Prints the detekt CLI version.\n      Default: false\n\n"})})}function r(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}function l(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Usage: java -jar detekt-generator-2.0.0-alpha.0-all.jar [options]\n  Options:\n    --generate-custom-rule-config, -gcrc\n      Generate custom rules configuration files. The files will be\n      placed under 'resources' folder of each rule respectively\n      (e.g. 'custom-rule/src/main/resources/config/config.yml').\n    --input, -i\n      Input paths to rules to analyze. Multiple paths are separated by comma.\n"})})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}const c={title:"Run detekt using Command Line Interface",keywords:["cli"],sidebar:null,permalink:"cli.html",folder:"gettingstarted",summary:null,sidebar_position:1},h=void 0,u={},f=[{value:"Install the cli",id:"install-the-cli",level:2},{value:"MacOS, with Homebrew:",id:"macos-with-homebrew",level:3},{value:"Windows, with Scoop:",id:"windows-with-scoop",level:3},{value:"Unix-like OS, with SDKMAN!:",id:"unix-like-os-with-sdkman",level:3},{value:"Any OS:",id:"any-os",level:3},{value:"NixOS:",id:"nixos",level:3},{value:"Use the cli",id:"use-the-cli",level:2},{value:"Use the cli to generate configuration for custom rules",id:"use-the-cli-to-generate-configuration-for-custom-rules",level:2}];function p(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",sup:"sup",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"install-the-cli",children:"Install the cli"}),"\n",(0,i.jsx)(n.p,{children:"There are different ways to install the Command Line Interface (CLI):"}),"\n",(0,i.jsxs)(n.h3,{id:"macos-with-homebrew",children:["MacOS, with ",(0,i.jsx)(n.a,{href:"https://brew.sh/",children:"Homebrew"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"brew install detekt\ndetekt [options]\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"windows-with-scoop",children:["Windows, with ",(0,i.jsx)(n.a,{href:"https://scoop.sh/",children:"Scoop"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"scoop install detekt\ndetekt [options]\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"unix-like-os-with-sdkman",children:["Unix-like OS, with ",(0,i.jsx)(n.a,{href:"https://sdkman.io/",children:"SDKMAN!"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"sdk install detekt\n"})}),"\n",(0,i.jsx)(n.h3,{id:"any-os",children:"Any OS:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"curl -sSLO https://github.com/detekt/detekt/releases/download/v2.0.0-alpha.0/detekt-cli-2.0.0-alpha.0.zip\nunzip detekt-cli-2.0.0-alpha.0.zip\n./detekt-cli-2.0.0-alpha.0/bin/detekt-cli --help\n"})}),"\n",(0,i.jsx)(n.h3,{id:"nixos",children:"NixOS:"}),"\n",(0,i.jsxs)(n.p,{children:["As a prerequisite, you have to add the unstable channel via ",(0,i.jsx)(n.code,{children:"nix-channel"})," and then execute the following command."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"nix-shell -I nixpkgs=channel:nixpkgs-unstable -p detekt\n"})}),"\n",(0,i.jsx)(n.h2,{id:"use-the-cli",children:"Use the cli"}),"\n",(0,i.jsx)(n.p,{children:"detekt will exit with one of the following exit codes:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Exit code"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"0"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.em,{children:"detekt"})," ran normally and no issues",(0,i.jsx)(n.sup,{children:(0,i.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})," were found."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"1"}),(0,i.jsx)(n.td,{children:"An unexpected error occurred."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"2"}),(0,i.jsxs)(n.td,{children:["At least one issue",(0,i.jsx)(n.sup,{children:(0,i.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})," was found."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"3"}),(0,i.jsx)(n.td,{children:"Invalid detekt configuration file detected."})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The following parameters are shown when ",(0,i.jsx)(n.code,{children:"--help"})," is entered."]}),"\n",(0,i.jsx)(r,{}),"\n",(0,i.jsx)(n.h2,{id:"use-the-cli-to-generate-configuration-for-custom-rules",children:"Use the cli to generate configuration for custom rules"}),"\n",(0,i.jsx)(d,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"java -jar detekt-generator-2.0.0-alpha.0-all.jar -gcrc -i /path/to/rule1, /path/to/rule2\n"})}),"\n","\n",(0,i.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,i.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{id:"user-content-fn-1",children:["\n",(0,i.jsxs)(n.p,{children:["All found issues that have a severity of or above the ",(0,i.jsx)(n.code,{children:"--fail-on-severity"})," argument are considered. ",(0,i.jsx)(n.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})," ",(0,i.jsxs)(n.a,{href:"#user-content-fnref-1-2","data-footnote-backref":"","aria-label":"Back to reference 1-2",className:"data-footnote-backref",children:["\u21a9",(0,i.jsx)(n.sup,{children:"2"})]})]}),"\n"]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var s=t(96540);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);