"use strict";(self.webpackChunk_detekt_website=self.webpackChunk_detekt_website||[]).push([[8130],{77735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2020/09/27/additional-diff-config-task","metadata":{"permalink":"/blog/2020/09/27/additional-diff-config-task","editUrl":"https://github.com/detekt/detekt/edit/main/website/blog/2020-09-27-additional-diff-config-task.md","source":"@site/blog/2020-09-27-additional-diff-config-task.md","title":"Recipe: diff your detekt config with the default one","description":"detekt\'s ./gradlew detektGenerateConfig task copies the default configuration file to the location","date":"2020-09-27T00:00:00.000Z","tags":[{"inline":true,"label":"guides","permalink":"/blog/tags/guides"}],"readingTime":0.88,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Recipe: diff your detekt config with the default one","published":true,"permalink":"howto-diff-config.html","summary":"This guide shows how to create an additional Gradle task which generates the default detekt config.","tags":["guides"]},"unlisted":false,"nextItem":{"title":"Howto: make detekt silent","permalink":"/blog/2019/08/14/custom-console-reports"}},"content":"detekt\'s `./gradlew detektGenerateConfig` task copies the default configuration file to the location\\nspecified by the `config` property.\\n\\n\x3c!-- truncate --\x3e\\n\\n```kt\\ndetekt {\\n  ...\\n  config = files(...)\\n  ...\\n}\\n```\\n\\nWhen the file on this location already exists, your configuration won\'t be overwritten, and the task is a noop.\\n\\nWhen we release a new version, some users like to generate the default one to compare changed properties.\\nThis can be done by running the detekt cli with the `--generate-config --config [/new/location]` flags.\\nWhen already using Gradle, we can write a custom task and share this procedure with the team:\\n\\n```kt\\nimport io.gitlab.arturbosch.detekt.DetektGenerateConfigTask\\n\\nval createDetektConfigForDiff by tasks.registering(DetektGenerateConfigTask::class) {\\n    description = \\"Generate newest default detekt config\\"\\n    config.setFrom(layout.buildDirectory.file(\\"detekt-diff.yaml\\"))\\n\\n    doFirst {\\n      // optionally delete the old config diff file first \\n    }\\n}\\n```\\n\\nThe last step involves calling your favorite diff tool (e.g. `diff detekt-diff.yaml my_config.yaml`) or using an online service like `http://incaseofstairs.com/jsdiff/`.\\n\\nLikewise we can diff the default config of detekt version X with the default config of detekt version X-1. This will tell us which properties are new in version X."},{"id":"/2019/08/14/custom-console-reports","metadata":{"permalink":"/blog/2019/08/14/custom-console-reports","editUrl":"https://github.com/detekt/detekt/edit/main/website/blog/2019-08-14-custom-console-reports.md","source":"@site/blog/2019-08-14-custom-console-reports.md","title":"Howto: make detekt silent","description":"detekt\'s reporting mechanism relies on implementations of ConsoleReport\'s.","date":"2019-08-14T00:00:00.000Z","tags":[{"inline":true,"label":"guides","permalink":"/blog/tags/guides"}],"readingTime":1.07,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Howto: make detekt silent","published":true,"summary":"This guide shows how to silence detekt and write a custom report format.","tags":["guides"]},"unlisted":false,"prevItem":{"title":"Recipe: diff your detekt config with the default one","permalink":"/blog/2020/09/27/additional-diff-config-task"},"nextItem":{"title":"Calling it One Zero","permalink":"/blog/2019/08/04/calling-it-one-zero"}},"content":"detekt\'s reporting mechanism relies on implementations of [ConsoleReport](https://detekt.dev/kdoc/detekt-api/io.gitlab.arturbosch.detekt.api/-console-report/index.html)\'s.\\nThe cli module and therefore the Gradle plugin implement a bunch of this reports.\\n\\n\x3c!-- truncate --\x3e\\n\\nA typical detekt report will look like following:\\n\\n![report](/img/blog/howto-silent-run/typical_console_report.png)\\n\\nThere are many different parts which might or might not interest you.\\nIf one part is not important to you, it can be excluded in the yaml configuration file.\\nA __silent__ configuration would exclude all possible processors and reports:\\n```yaml\\nprocessors:\\n  active: true\\n  exclude:\\n    - \'DetektProgressListener\'\\n    - \'FunctionCountProcessor\'\\n    - \'PropertyCountProcessor\'\\n    - \'ClassCountProcessor\'\\n    - \'PackageCountProcessor\'\\n    - \'KtFileCountProcessor\'\\n\\nconsole-reports:\\n  active: true\\n  exclude:\\n    - \'ProjectStatisticsReport\'\\n    - \'ComplexityReport\'\\n    - \'NotificationReport\'\\n    - \'FindingsReport\'\\n    - \'BuildFailureReport\'\\n```  \\n\\nRunning with this config won\'t produce any console messages: \\n\\n![report](/img/blog/howto-silent-run/silent_run.png)\\n\\nJust verify that the `./report.txt` is not empty ;).\\n\\nWe might find detekt\'s `FindingsReport` too verbose and just want to print one message line per finding.\\nThis can be achieved by implementing a custom `ConsoleReport`.\\n\\n```kotlin\\nclass SingleLineFindingsReport : ConsoleReport() {\\n\\n    override fun render(detektion: Detektion): String? =\\n        detektion.findings.values\\n            .flatten()\\n            .joinToString(\\"\\\\n\\") { \\"${it.id} - ${it.message} - ${it.entity.location.file}\\" }\\n}\\n```\\n\\nCombined with our silent configuration only messages are printed when findings are actually found:\\n\\n![report](/img/blog/howto-silent-run/compact_report.png)\\n\\nSee the [extension](/docs/introduction/extensions) documention on how to let detekt know about your custom report."},{"id":"/2019/08/04/calling-it-one-zero","metadata":{"permalink":"/blog/2019/08/04/calling-it-one-zero","editUrl":"https://github.com/detekt/detekt/edit/main/website/blog/2019-08-04-calling-it-one-zero.md","source":"@site/blog/2019-08-04-calling-it-one-zero.md","title":"Calling it One Zero","description":"Today we are announcing the 1.0 release of detekt, a static code analysis tool for Kotlin.","date":"2019-08-04T00:00:00.000Z","tags":[{"inline":true,"label":"news","permalink":"/blog/tags/news"}],"readingTime":2.65,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Calling it One Zero","published":true,"permalink":"calling-it-one-zero.html","summary":"So we finally made it. One zero.","tags":["news"]},"unlisted":false,"prevItem":{"title":"Howto: make detekt silent","permalink":"/blog/2019/08/14/custom-console-reports"},"nextItem":{"title":"Howto: using snapshot releases of detekt","permalink":"/blog/2019/06/29/using-detekt-snapshots"}},"content":"Today we are announcing the **1.0** release of detekt, a static code analysis tool for Kotlin.\\nIt operates on the abstract syntax tree provided by the Kotlin compiler and finds common\\nprogramming flaws like unused or too complex constructs. Think of it as *pmd* or *checkstyle* but for Kotlin.\\n\\n\x3c!-- truncate --\x3e\\n\\n**1.0** offers the following features:\\n\\n- Code smell analysis for your Kotlin projects\\n- Complexity reports based on lines of code, cyclomatic complexity and amount of code smells\\n- Highly configurable rule sets\\n- Suppression of findings with Kotlin\'s `@Suppress` and Java\'s `@SuppressWarnings` annotations\\n- Specification of quality gates which will break your build \\n- Code Smell baseline for legacy projects\\n- [Gradle plugin](/docs/gettingstarted/gradle) for code analysis via Gradle builds\\n- Gradle tasks to use local `IntelliJ` distribution for formatting and inspecting Kotlin code\\n- [SonarQube integration](https://github.com/arturbosch/sonar-kotlin)\\n- Extensibility by enabling incorporation of personal rule sets, `FileProcessListener\'s` and `OutputReport\'s`\\n- [IntelliJ integration](https://github.com/detekt/detekt-intellij-plugin)\\n- Unofficial [Maven plugin](https://github.com/Ozsie/detekt-maven-plugin) by [Ozsie](https://github.com/Ozsie)\\n\\nHere are some metrics describing detekt\'s lifespan so far:\\n\\n![lifespan](/img/blog/one-zero/1-lifespan.png)\\n\\ndetekt is almost **3** years old already!  \\nAs GitHub tells us the project is pretty active.  \\nYou may argue that in 2018 it was more active looking at the number of commits, however that year \\nwe also changed our merge strategy from merge-with-rebase to squash-and-merge.\\nThat said, it is much harder to achieve these high commit numbers now ;).\\n\\n![numbers](/img/blog/one-zero/2-numbers.png)\\n\\nThere are **2516** commits, **52** releases on GitHub and a total **93** contributors at the time of writing.\\n**20** out of the 93 authors contributed once or more in the last three months.\\n\\n![numbers](/img/blog/one-zero/3-bintray-absolute.png)\\n\\n**~780k** downloads in the last **30 days** is a pretty high number... three months ago it was around **500k**.\\nWeekends clearly stand out. That\'s when the CI has to rest ;).\\n\\nThis does however not mean one download equals one user. There are like eight detekt modules each with a jar and pom which needs to be downloaded.\\nAs most of the downloads are bound to be CI, it is hard to calculate the actual number of detekt users.\\n\\n![numbers](/img/blog/one-zero/4-bintray-percent.png)\\n\\nWhat I also noticed is the high number of \\"early adopters\\" in the Kotlin world (or just detekt).\\n- RC09 was released in Sep 2018\\n- RC10 was released in Nov 2018\\n- RC11 was released in Nov 2018\\n- RC12 was released in Dec 2018\\n- RC14 was released in Feb 2019\\n- RC15 was released in Jun 2019\\n- RC16 was released in Jun 2019\\n\\n**65%** of users are on a version published in 2019. But we clearly lost some users in the older versions due to breaking changes in RC13 and RC15.\\nWe are excited to see how many users will jump on the 1.x.x release train and how these numbers will look like.\\n\\nLast but not least here is a worldmap of where detekt users are coming from.\\n\\n![numbers](/img/blog/one-zero/5-bintray-world.png)\\n\\nReferences:\\n- https://bintray.com/arturbosch/code-analysis/detekt#statistics\\n- https://github.com/detekt/detekt/graphs/contributors"},{"id":"/2019/06/29/using-detekt-snapshots","metadata":{"permalink":"/blog/2019/06/29/using-detekt-snapshots","editUrl":"https://github.com/detekt/detekt/edit/main/website/blog/2019-06-29-using-detekt-snapshots.md","source":"@site/blog/2019-06-29-using-detekt-snapshots.md","title":"Howto: using snapshot releases of detekt","description":"detekt uses bintray for releases and artifactory for snapshots.","date":"2019-06-29T00:00:00.000Z","tags":[{"inline":true,"label":"guides","permalink":"/blog/tags/guides"}],"readingTime":0.86,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Howto: using snapshot releases of detekt","published":true,"permalink":"howto-snapshots.html","summary":"Use snapshot releases to test future detekt changes as soon as possible.","tags":["guides"]},"unlisted":false,"prevItem":{"title":"Calling it One Zero","permalink":"/blog/2019/08/04/calling-it-one-zero"},"nextItem":{"title":"Howto: migrating from the *test-pattern*","permalink":"/blog/2019/06/08/migrating-the-test-pattern"}},"content":"detekt uses [bintray](https://bintray.com/arturbosch/code-analysis/detekt) for releases and [artifactory](https://oss.jfrog.org/artifactory/webapp/#/artifacts/browse/tree/General/oss-snapshot-local/io/gitlab/arturbosch/detekt/detekt-cli/) for snapshots.\\n\\n\x3c!-- truncate --\x3e\\n\\nTo configure snapshot usage in your gradle plugin apply the following changes to your build file:\\n\\n```kotlin\\n\\ndetekt {\\n    // if a new release of detekt stays binary compatible with a previous\\n    // release, just change the \'toolVersion\'\\n    toolVersion = \\"1.0.0-RC16-20190629.171442-3\\"\\n    config = files(\\"$projectDir/detekt/config.yml\\")\\n    baseline = file(\\"$projectDir/baseline.xml\\")\\n\\n    reports {\\n        html {\\n            enabled = true\\n            destination = file(\\"$rootDir/detekt.html\\")\\n        }\\n    }\\n}\\n\\n// this changes may be necessary if detekt\'s core modules like \'cli, core, api or rules\'\\n// change in a way that is not binary compatible to older releases\\ndependencies {\\n    // use the detekt configuration for only official detekt modules\\n    detekt \\"io.gitlab.arturbosch.detekt:detekt-cli:1.0.0-RC16-20190629.171442-3\\"\\n    detekt \\"io.gitlab.arturbosch.detekt:detekt-core:1.0.0-RC16-20190629.171442-3\\"\\n    detekt \\"io.gitlab.arturbosch.detekt:detekt-api:1.0.0-RC16-20190629.171442-3\\"\\n    ...\\n    // use detektPlugins for detekt plugins - custom or official like the formatting one\\n    detektPlugins \\"io.gitlab.arturbosch.detekt:detekt-formatting:1.0.0-RC16-20190629.171442-3\\"\\n}\\n```"},{"id":"/2019/06/08/migrating-the-test-pattern","metadata":{"permalink":"/blog/2019/06/08/migrating-the-test-pattern","editUrl":"https://github.com/detekt/detekt/edit/main/website/blog/2019-06-08-migrating-the-test-pattern.md","source":"@site/blog/2019-06-08-migrating-the-test-pattern.md","title":"Howto: migrating from the *test-pattern*","description":"Starting with RC15 the test-pattern is obsolete. This post shows how to leverage rule path excludes to achieve the same functionality.","date":"2019-06-08T00:00:00.000Z","tags":[{"inline":true,"label":"guides","permalink":"/blog/tags/guides"}],"readingTime":1.38,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Howto: migrating from the *test-pattern*","published":true,"permalink":"howto-migratetestpattern.html","summary":"Starting with RC15 the test-pattern is obsolete. This post shows how to leverage rule path excludes to achieve the same functionality.","tags":["guides"]},"unlisted":false,"prevItem":{"title":"Howto: using snapshot releases of detekt","permalink":"/blog/2019/06/29/using-detekt-snapshots"},"nextItem":{"title":"Howto: build upon the default yaml config file","permalink":"/blog/2019/03/03/build-upon-the-default-config"}},"content":"Starting with RC15 the test-pattern is obsolete. This post shows how to leverage rule path excludes to achieve the same functionality.\\n\\n\x3c!-- truncate --\x3e\\n\\nWith version < RC15 the configuration file allowed to specify\\nwhich paths should be mapped to test files so detekt would not run\\nspecific rule sets and rules on these test files:\\n\\n```yaml\\ntest-pattern: # Configure exclusions for test sources\\n  active: true\\n  patterns: # Test file regexes\\n    - \'.*/test/.*\'\\n    - \'.*Test.kt\'\\n    - \'.*Spec.kt\'\\n  exclude-rule-sets:\\n    - \'comments\'\\n  exclude-rules:\\n    - \'NamingRules\'\\n    - \'WildcardImport\'\\n    - \'MagicNumber\'\\n    - \'MaxLineLength\'\\n    - \'LateinitUsage\'\\n    - \'StringLiteralDuplication\'\\n    - \'SpreadOperator\'\\n    - \'TooManyFunctions\'\\n```\\n\\nThis was an okay approach as we nowadays separate production code and test code.\\nHowever more different kinds of source files can be identified.\\nFor example generated and library code.\\n\\nWith the new approach of offering path patterns on the rule and rule set level the user has much more freedom\\nin defining which rule should run on which path.\\n\\nIf we do not care about documented test classes because we write our test code\\nin a *documenting way*, we could simply exclude the `comments` rule set for following patterns:\\n```\\ncomments:\\n  ...\\n  excludes: \\"**/*Test.kt, **/*Spec.kt\\"\\n```\\n\\nIf we for example do not care about `MagicNumber`\'s in test code, we can\\nexclude our test files for this rule:\\n```\\nstyle:\\n  ...\\n  MagicNumber:\\n    excludes: \\"**/*Test.kt, **/*Spec.kt\\"\\n```\\n\\nMake sure to use globing patterns here as detekt does not support regular expressions anymore.\\nThis change was done to make use of the `java.nio.file` library when handling os-specific paths.\\n\\nIf you were using the default detekt configuration with the default test-pattern,\\nyou will not notice any changes when upgrading to >= RC15.\\nAll *exclude-rules* and *exclude-rule-sets* will now make use of `excludes: \\"**/test/**,**/*Test.kt,**/*Spec.kt\\"`."},{"id":"/2019/03/03/build-upon-the-default-config","metadata":{"permalink":"/blog/2019/03/03/build-upon-the-default-config","editUrl":"https://github.com/detekt/detekt/edit/main/website/blog/2019-03-03-build-upon-the-default-config.md","source":"@site/blog/2019-03-03-build-upon-the-default-config.md","title":"Howto: build upon the default yaml config file","description":"A common use case of detekt users was to build upon the default config file and use a second config file to override","date":"2019-03-03T00:00:00.000Z","tags":[{"inline":true,"label":"guides","permalink":"/blog/tags/guides"}],"readingTime":0.65,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Howto: build upon the default yaml config file","published":true,"permalink":"howto-buildupondefaultconfig.html","summary":"Use the new feature to rely on the opinionated default yaml configuration file.","tags":["guides"]},"unlisted":false,"prevItem":{"title":"Howto: migrating from the *test-pattern*","permalink":"/blog/2019/06/08/migrating-the-test-pattern"},"nextItem":{"title":"Howto: configure detekt for gradle root project","permalink":"/blog/2019/03/03/configure-detekt-on-root-project"}},"content":"A common use case of _detekt_ users was to build upon the default config file and use a second config file to override\\nsome defaults.\\n\\n\x3c!-- truncate --\x3e\\n\\nSpeaking in _Gradle_ terms, this could look like following:\\n```gradle\\ndetekt {\\n    ...\\n    config = files(\\n            project.rootDir.resolve(\\"config/default-detekt-config.yml\\"),\\n            project.rootDir.resolve(\\"config/our.yml\\")\\n    )\\n    baseline = project.rootDir.resolve(\\"config/baseline.xml\\")\\n    ...\\n}\\n```\\n\\nStarting from RC13, two new commandline flags got introduced:\\n- `--fail-fast`\\n- and `--build-upon-default-config`\\n- (`buildUponDefaultConfig` and `failFast` properties for gradle setup)\\n\\nBoth options allow us to use the distributed `default-detekt-config.yml` as the backup configuration when\\nno rule configuration is found in the specified configuration (`--config` or `config = ...`).  \\nThis allows us to simplify our detekt setup without copy-pasting a huge config file:\\n```gradle\\ndetekt {\\n    ...\\n    buildUponDefaultConfig = true\\n    config = files(project.rootDir.resolve(\\"config/our.yml\\"))\\n    baseline = project.rootDir.resolve(\\"config/baseline.xml\\")\\n    ...\\n}\\n```"},{"id":"/2019/03/03/configure-detekt-on-root-project","metadata":{"permalink":"/blog/2019/03/03/configure-detekt-on-root-project","editUrl":"https://github.com/detekt/detekt/edit/main/website/blog/2019-03-03-configure-detekt-on-root-project.md","source":"@site/blog/2019-03-03-configure-detekt-on-root-project.md","title":"Howto: configure detekt for gradle root project","description":"When configuring detekt for your Gradle based project, you basically have two options:","date":"2019-03-03T00:00:00.000Z","tags":[{"inline":true,"label":"guides","permalink":"/blog/tags/guides"}],"readingTime":1.09,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Howto: configure detekt for gradle root project","published":true,"permalink":"howto-buildupondefaultconfig.html","summary":"Configure a new task based on _detekt_ to analyze the whole project on one run.","tags":["guides"]},"unlisted":false,"prevItem":{"title":"Howto: build upon the default yaml config file","permalink":"/blog/2019/03/03/build-upon-the-default-config"},"nextItem":{"title":"Website Online","permalink":"/blog/2018/02/11/website-online"}},"content":"When configuring _detekt_ for your _Gradle_ based project, you basically have two options:\\n- for each sub module a new gradle task should be created\\n- or one __uber__-task analyzes your whole project\\n\\n\x3c!-- truncate --\x3e\\n\\nFor the first option, please see how [detekt](https://github.com/detekt/detekt) itself creates a task for each module:\\n```gradle\\nsubprojecs {\\n...\\n    detekt {\\n        debug = true\\n        toolVersion = usedDetektVersion\\n        buildUponDefaultConfig = true\\n        config = files(project.rootDir.resolve(\\"reports/failfast.yml\\"))\\n        baseline = project.rootDir.resolve(\\"reports/baseline.xml\\")\\n    \\n        reports {\\n            xml.enabled = true\\n            html.enabled = true\\n        }\\n    }\\n}\\n```\\n\\nSometimes it makes sense to add an additional _detekt_ task which runs over the whole project and produces one big report. \\nSuch a setup could look like the following in its simplest form:\\n```gradle\\nplugins {\\n    id \\"io.gitlab.arturbosch.detekt\\" version \\"1.0.0-RC14\\"\\n}\\n\\nrepositories {\\n    jcenter()\\n}\\n\\ndetekt {\\n    source = files(rootProject.rootDir)\\n    buildUponDefaultConfig = true\\n}\\n```\\nMake sure to specify the `input` parameter or no sources are found and _detekt_ won\'t run!\\n\\nIf you need more fine grained _detekt_ tasks, you could register more tasks using the _Detekt_ task as the base task.\\nUsing the _Kotlin-Dsl_ it could look like this:\\n```gradle\\nval detektAll by tasks.registering(Detekt::class) {\\n    description = \\"Runs over whole code base without the starting overhead for each module.\\"\\n    parallel = true\\n    buildUponDefaultConfig = true\\n    setSource(files(projectDir))\\n    config = files(project.rootDir.resolve(\\"reports/failfast.yml\\"))\\n    include(\\"**/*.kt\\")\\n    include(\\"**/*.kts\\")\\n    exclude(\\"resources/\\")\\n    exclude(\\"build/\\")\\n    baseline.set(project.rootDir.resolve(\\"reports/baseline.xml\\"))\\n    reports {\\n        xml.enabled = false\\n        html.enabled = false\\n    }\\n}\\n```"},{"id":"/2018/02/11/website-online","metadata":{"permalink":"/blog/2018/02/11/website-online","editUrl":"https://github.com/detekt/detekt/edit/main/website/blog/2018-02-11-website-online.md","source":"@site/blog/2018-02-11-website-online.md","title":"Website Online","description":"As of today the website was launched!","date":"2018-02-11T00:00:00.000Z","tags":[{"inline":true,"label":"news","permalink":"/blog/tags/news"}],"readingTime":0.04,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Website Online","published":true,"permalink":"website-online.html","summary":"Documentation website launched together with RC7.","tags":["news"]},"unlisted":false,"prevItem":{"title":"Howto: configure detekt for gradle root project","permalink":"/blog/2019/03/03/configure-detekt-on-root-project"}},"content":"As of today the website was launched!\\n\\n\x3c!-- truncate --\x3e"}]}}')}}]);