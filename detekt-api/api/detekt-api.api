public abstract interface annotation class io/gitlab/arturbosch/detekt/api/ActiveByDefault : java/lang/annotation/Annotation {
	public abstract fun since ()Ljava/lang/String;
}

public final class io/gitlab/arturbosch/detekt/api/AnnotationExcluder {
	public fun <init> (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/util/List;Lorg/jetbrains/kotlin/resolve/BindingContext;)V
	public final fun shouldExclude (Ljava/util/List;)Z
}

public class io/gitlab/arturbosch/detekt/api/CodeSmell : io/gitlab/arturbosch/detekt/api/Finding {
	public fun <init> (Lio/gitlab/arturbosch/detekt/api/Entity;Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Lio/gitlab/arturbosch/detekt/api/Entity;Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCharPosition ()Lio/gitlab/arturbosch/detekt/api/TextLocation;
	public final fun getEntity ()Lio/gitlab/arturbosch/detekt/api/Entity;
	public fun getFile ()Ljava/lang/String;
	public fun getLocation ()Lio/gitlab/arturbosch/detekt/api/Location;
	public final fun getMessage ()Ljava/lang/String;
	public final fun getReferences ()Ljava/util/List;
	public fun getSignature ()Ljava/lang/String;
	public fun getStartPosition ()Lio/gitlab/arturbosch/detekt/api/SourceLocation;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/gitlab/arturbosch/detekt/api/Compactable {
	public abstract fun compact ()Ljava/lang/String;
	public abstract fun compactWithSignature ()Ljava/lang/String;
}

public final class io/gitlab/arturbosch/detekt/api/Compactable$DefaultImpls {
	public static fun compactWithSignature (Lio/gitlab/arturbosch/detekt/api/Compactable;)Ljava/lang/String;
}

public final class io/gitlab/arturbosch/detekt/api/CompilerResources {
	public fun <init> (Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowValueFactory;)V
	public final fun getDataFlowValueFactory ()Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowValueFactory;
	public final fun getLanguageVersionSettings ()Lorg/jetbrains/kotlin/config/LanguageVersionSettings;
}

public abstract interface class io/gitlab/arturbosch/detekt/api/Config {
	public static final field ACTIVE_KEY Ljava/lang/String;
	public static final field AUTO_CORRECT_KEY Ljava/lang/String;
	public static final field CONFIG_SEPARATOR Ljava/lang/String;
	public static final field Companion Lio/gitlab/arturbosch/detekt/api/Config$Companion;
	public static final field EXCLUDES_KEY Ljava/lang/String;
	public static final field INCLUDES_KEY Ljava/lang/String;
	public static final field SEVERITY_KEY Ljava/lang/String;
	public abstract fun getParent ()Lio/gitlab/arturbosch/detekt/api/Config;
	public abstract fun getParentPath ()Ljava/lang/String;
	public abstract fun subConfig (Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Config;
	public abstract fun subConfigKeys ()Ljava/util/Set;
	public abstract fun valueOrDefault (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun valueOrNull (Ljava/lang/String;)Ljava/lang/Object;
}

public final class io/gitlab/arturbosch/detekt/api/Config$Companion {
	public static final field ACTIVE_KEY Ljava/lang/String;
	public static final field AUTO_CORRECT_KEY Ljava/lang/String;
	public static final field CONFIG_SEPARATOR Ljava/lang/String;
	public static final field EXCLUDES_KEY Ljava/lang/String;
	public static final field INCLUDES_KEY Ljava/lang/String;
	public static final field SEVERITY_KEY Ljava/lang/String;
	public final fun getEmpty ()Lio/gitlab/arturbosch/detekt/api/Config;
}

public final class io/gitlab/arturbosch/detekt/api/Config$DefaultImpls {
	public static fun valueOrDefault (Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class io/gitlab/arturbosch/detekt/api/Config$InvalidConfigurationError : java/lang/RuntimeException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/gitlab/arturbosch/detekt/api/ConfigPropertyKt {
	public static final fun config (Ljava/lang/Object;)Lkotlin/properties/ReadOnlyProperty;
	public static final fun config (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/properties/ReadOnlyProperty;
	public static final fun configWithAndroidVariants (Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/properties/ReadOnlyProperty;
	public static final fun configWithAndroidVariants (Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/properties/ReadOnlyProperty;
	public static final fun configWithFallback (Lkotlin/reflect/KProperty0;Ljava/lang/Object;)Lkotlin/properties/ReadOnlyProperty;
	public static final fun configWithFallback (Lkotlin/reflect/KProperty0;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/properties/ReadOnlyProperty;
}

public abstract interface class io/gitlab/arturbosch/detekt/api/ConfigValidator : io/gitlab/arturbosch/detekt/api/Extension {
	public abstract fun validate (Lio/gitlab/arturbosch/detekt/api/Config;)Ljava/util/Collection;
}

public final class io/gitlab/arturbosch/detekt/api/ConfigValidator$DefaultImpls {
	public static fun getPriority (Lio/gitlab/arturbosch/detekt/api/ConfigValidator;)I
	public static fun init (Lio/gitlab/arturbosch/detekt/api/ConfigValidator;Lio/gitlab/arturbosch/detekt/api/Config;)V
	public static fun init (Lio/gitlab/arturbosch/detekt/api/ConfigValidator;Lio/gitlab/arturbosch/detekt/api/SetupContext;)V
}

public abstract interface annotation class io/gitlab/arturbosch/detekt/api/Configuration : java/lang/annotation/Annotation {
	public abstract fun description ()Ljava/lang/String;
}

public abstract class io/gitlab/arturbosch/detekt/api/ConsoleReport : io/gitlab/arturbosch/detekt/api/Extension {
	public fun <init> ()V
	public fun getPriority ()I
	public fun init (Lio/gitlab/arturbosch/detekt/api/Config;)V
	public fun init (Lio/gitlab/arturbosch/detekt/api/SetupContext;)V
	public abstract fun render (Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/lang/String;
}

public class io/gitlab/arturbosch/detekt/api/CorrectableCodeSmell : io/gitlab/arturbosch/detekt/api/CodeSmell {
	public fun <init> (Lio/gitlab/arturbosch/detekt/api/Entity;Ljava/lang/String;Ljava/util/List;Z)V
	public synthetic fun <init> (Lio/gitlab/arturbosch/detekt/api/Entity;Ljava/lang/String;Ljava/util/List;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAutoCorrectEnabled ()Z
	public fun toString ()Ljava/lang/String;
}

public class io/gitlab/arturbosch/detekt/api/DetektVisitor : org/jetbrains/kotlin/psi/KtTreeVisitorVoid {
	public fun <init> ()V
}

public abstract interface class io/gitlab/arturbosch/detekt/api/Detektion : org/jetbrains/kotlin/com/intellij/openapi/util/UserDataHolder {
	public abstract fun add (Lio/gitlab/arturbosch/detekt/api/Notification;)V
	public abstract fun add (Lio/gitlab/arturbosch/detekt/api/ProjectMetric;)V
	public abstract fun getFindings ()Ljava/util/Map;
	public abstract fun getMetrics ()Ljava/util/Collection;
	public abstract fun getNotifications ()Ljava/util/Collection;
}

public final class io/gitlab/arturbosch/detekt/api/Entity : io/gitlab/arturbosch/detekt/api/Compactable {
	public static final field Companion Lio/gitlab/arturbosch/detekt/api/Entity$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lio/gitlab/arturbosch/detekt/api/Location;Lorg/jetbrains/kotlin/psi/KtElement;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lio/gitlab/arturbosch/detekt/api/Location;Lorg/jetbrains/kotlin/psi/KtElement;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compact ()Ljava/lang/String;
	public fun compactWithSignature ()Ljava/lang/String;
	public final fun getKtElement ()Lorg/jetbrains/kotlin/psi/KtElement;
	public final fun getLocation ()Lio/gitlab/arturbosch/detekt/api/Location;
	public final fun getName ()Ljava/lang/String;
	public final fun getSignature ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/gitlab/arturbosch/detekt/api/Entity$Companion {
	public final fun atName (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Lio/gitlab/arturbosch/detekt/api/Entity;
	public final fun atPackageOrFirstDecl (Lorg/jetbrains/kotlin/psi/KtFile;)Lio/gitlab/arturbosch/detekt/api/Entity;
	public final fun from (Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;I)Lio/gitlab/arturbosch/detekt/api/Entity;
	public final fun from (Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lio/gitlab/arturbosch/detekt/api/Location;)Lio/gitlab/arturbosch/detekt/api/Entity;
	public static synthetic fun from$default (Lio/gitlab/arturbosch/detekt/api/Entity$Companion;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;IILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/api/Entity;
}

public abstract interface class io/gitlab/arturbosch/detekt/api/Extension {
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun getPriority ()I
	public abstract fun init (Lio/gitlab/arturbosch/detekt/api/Config;)V
	public abstract fun init (Lio/gitlab/arturbosch/detekt/api/SetupContext;)V
}

public final class io/gitlab/arturbosch/detekt/api/Extension$DefaultImpls {
	public static fun getPriority (Lio/gitlab/arturbosch/detekt/api/Extension;)I
	public static fun init (Lio/gitlab/arturbosch/detekt/api/Extension;Lio/gitlab/arturbosch/detekt/api/Config;)V
	public static fun init (Lio/gitlab/arturbosch/detekt/api/Extension;Lio/gitlab/arturbosch/detekt/api/SetupContext;)V
}

public abstract interface class io/gitlab/arturbosch/detekt/api/FileProcessListener : io/gitlab/arturbosch/detekt/api/Extension {
	public abstract fun onFinish (Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Detektion;Lorg/jetbrains/kotlin/resolve/BindingContext;)V
	public abstract fun onProcess (Lorg/jetbrains/kotlin/psi/KtFile;Lorg/jetbrains/kotlin/resolve/BindingContext;)V
	public abstract fun onProcessComplete (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/util/Map;Lorg/jetbrains/kotlin/resolve/BindingContext;)V
	public abstract fun onStart (Ljava/util/List;Lorg/jetbrains/kotlin/resolve/BindingContext;)V
}

public final class io/gitlab/arturbosch/detekt/api/FileProcessListener$DefaultImpls {
	public static fun getPriority (Lio/gitlab/arturbosch/detekt/api/FileProcessListener;)I
	public static fun init (Lio/gitlab/arturbosch/detekt/api/FileProcessListener;Lio/gitlab/arturbosch/detekt/api/Config;)V
	public static fun init (Lio/gitlab/arturbosch/detekt/api/FileProcessListener;Lio/gitlab/arturbosch/detekt/api/SetupContext;)V
	public static fun onFinish (Lio/gitlab/arturbosch/detekt/api/FileProcessListener;Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Detektion;Lorg/jetbrains/kotlin/resolve/BindingContext;)V
	public static fun onProcess (Lio/gitlab/arturbosch/detekt/api/FileProcessListener;Lorg/jetbrains/kotlin/psi/KtFile;Lorg/jetbrains/kotlin/resolve/BindingContext;)V
	public static fun onProcessComplete (Lio/gitlab/arturbosch/detekt/api/FileProcessListener;Lorg/jetbrains/kotlin/psi/KtFile;Ljava/util/Map;Lorg/jetbrains/kotlin/resolve/BindingContext;)V
	public static fun onStart (Lio/gitlab/arturbosch/detekt/api/FileProcessListener;Ljava/util/List;Lorg/jetbrains/kotlin/resolve/BindingContext;)V
}

public abstract interface class io/gitlab/arturbosch/detekt/api/Finding : io/gitlab/arturbosch/detekt/api/HasEntity {
	public abstract fun getMessage ()Ljava/lang/String;
	public abstract fun getReferences ()Ljava/util/List;
}

public final class io/gitlab/arturbosch/detekt/api/Finding$DefaultImpls {
	public static fun getCharPosition (Lio/gitlab/arturbosch/detekt/api/Finding;)Lio/gitlab/arturbosch/detekt/api/TextLocation;
	public static fun getFile (Lio/gitlab/arturbosch/detekt/api/Finding;)Ljava/lang/String;
	public static fun getLocation (Lio/gitlab/arturbosch/detekt/api/Finding;)Lio/gitlab/arturbosch/detekt/api/Location;
	public static fun getSignature (Lio/gitlab/arturbosch/detekt/api/Finding;)Ljava/lang/String;
	public static fun getStartPosition (Lio/gitlab/arturbosch/detekt/api/Finding;)Lio/gitlab/arturbosch/detekt/api/SourceLocation;
}

public abstract interface class io/gitlab/arturbosch/detekt/api/Finding2 : io/gitlab/arturbosch/detekt/api/HasEntity {
	public abstract fun getAutoCorrectEnabled ()Z
	public abstract fun getIssue ()Lio/gitlab/arturbosch/detekt/api/Issue;
	public abstract fun getMessage ()Ljava/lang/String;
	public abstract fun getReferences ()Ljava/util/List;
	public abstract fun getSeverity ()Lio/gitlab/arturbosch/detekt/api/Severity;
}

public final class io/gitlab/arturbosch/detekt/api/Finding2$DefaultImpls {
	public static fun getCharPosition (Lio/gitlab/arturbosch/detekt/api/Finding2;)Lio/gitlab/arturbosch/detekt/api/TextLocation;
	public static fun getFile (Lio/gitlab/arturbosch/detekt/api/Finding2;)Ljava/lang/String;
	public static fun getLocation (Lio/gitlab/arturbosch/detekt/api/Finding2;)Lio/gitlab/arturbosch/detekt/api/Location;
	public static fun getSignature (Lio/gitlab/arturbosch/detekt/api/Finding2;)Ljava/lang/String;
	public static fun getStartPosition (Lio/gitlab/arturbosch/detekt/api/Finding2;)Lio/gitlab/arturbosch/detekt/api/SourceLocation;
}

public abstract interface class io/gitlab/arturbosch/detekt/api/HasEntity {
	public abstract fun getCharPosition ()Lio/gitlab/arturbosch/detekt/api/TextLocation;
	public abstract fun getEntity ()Lio/gitlab/arturbosch/detekt/api/Entity;
	public abstract fun getFile ()Ljava/lang/String;
	public abstract fun getLocation ()Lio/gitlab/arturbosch/detekt/api/Location;
	public abstract fun getSignature ()Ljava/lang/String;
	public abstract fun getStartPosition ()Lio/gitlab/arturbosch/detekt/api/SourceLocation;
}

public final class io/gitlab/arturbosch/detekt/api/HasEntity$DefaultImpls {
	public static fun getCharPosition (Lio/gitlab/arturbosch/detekt/api/HasEntity;)Lio/gitlab/arturbosch/detekt/api/TextLocation;
	public static fun getFile (Lio/gitlab/arturbosch/detekt/api/HasEntity;)Ljava/lang/String;
	public static fun getLocation (Lio/gitlab/arturbosch/detekt/api/HasEntity;)Lio/gitlab/arturbosch/detekt/api/Location;
	public static fun getSignature (Lio/gitlab/arturbosch/detekt/api/HasEntity;)Ljava/lang/String;
	public static fun getStartPosition (Lio/gitlab/arturbosch/detekt/api/HasEntity;)Lio/gitlab/arturbosch/detekt/api/SourceLocation;
}

public final class io/gitlab/arturbosch/detekt/api/Issue {
	public fun <init> (Lio/gitlab/arturbosch/detekt/api/Rule$Id;Ljava/lang/String;)V
	public final fun getDescription ()Ljava/lang/String;
	public final fun getId ()Lio/gitlab/arturbosch/detekt/api/Rule$Id;
	public fun toString ()Ljava/lang/String;
}

public final class io/gitlab/arturbosch/detekt/api/Location : io/gitlab/arturbosch/detekt/api/Compactable {
	public static final field Companion Lio/gitlab/arturbosch/detekt/api/Location$Companion;
	public fun <init> (Lio/gitlab/arturbosch/detekt/api/SourceLocation;Lio/gitlab/arturbosch/detekt/api/SourceLocation;Lio/gitlab/arturbosch/detekt/api/TextLocation;Lio/github/detekt/psi/FilePath;)V
	public synthetic fun <init> (Lio/gitlab/arturbosch/detekt/api/SourceLocation;Lio/gitlab/arturbosch/detekt/api/SourceLocation;Lio/gitlab/arturbosch/detekt/api/TextLocation;Lio/github/detekt/psi/FilePath;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compact ()Ljava/lang/String;
	public fun compactWithSignature ()Ljava/lang/String;
	public final fun getEndSource ()Lio/gitlab/arturbosch/detekt/api/SourceLocation;
	public final fun getFilePath ()Lio/github/detekt/psi/FilePath;
	public final fun getSource ()Lio/gitlab/arturbosch/detekt/api/SourceLocation;
	public final fun getText ()Lio/gitlab/arturbosch/detekt/api/TextLocation;
	public fun toString ()Ljava/lang/String;
}

public final class io/gitlab/arturbosch/detekt/api/Location$Companion {
	public final fun from (Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;I)Lio/gitlab/arturbosch/detekt/api/Location;
	public static synthetic fun from$default (Lio/gitlab/arturbosch/detekt/api/Location$Companion;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;IILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/api/Location;
	public final fun startLineAndColumn (Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;I)Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;
	public static synthetic fun startLineAndColumn$default (Lio/gitlab/arturbosch/detekt/api/Location$Companion;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;IILjava/lang/Object;)Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;
}

public abstract interface class io/gitlab/arturbosch/detekt/api/Notification {
	public abstract fun getLevel ()Lio/gitlab/arturbosch/detekt/api/Notification$Level;
	public abstract fun getMessage ()Ljava/lang/String;
	public abstract fun isError ()Z
}

public final class io/gitlab/arturbosch/detekt/api/Notification$DefaultImpls {
	public static fun isError (Lio/gitlab/arturbosch/detekt/api/Notification;)Z
}

public final class io/gitlab/arturbosch/detekt/api/Notification$Level : java/lang/Enum {
	public static final field Error Lio/gitlab/arturbosch/detekt/api/Notification$Level;
	public static final field Info Lio/gitlab/arturbosch/detekt/api/Notification$Level;
	public static final field Warning Lio/gitlab/arturbosch/detekt/api/Notification$Level;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Notification$Level;
	public static fun values ()[Lio/gitlab/arturbosch/detekt/api/Notification$Level;
}

public abstract class io/gitlab/arturbosch/detekt/api/OutputReport : io/gitlab/arturbosch/detekt/api/Extension {
	public fun <init> ()V
	public abstract fun getEnding ()Ljava/lang/String;
	public fun getPriority ()I
	public fun init (Lio/gitlab/arturbosch/detekt/api/Config;)V
	public fun init (Lio/gitlab/arturbosch/detekt/api/SetupContext;)V
	public abstract fun render (Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/lang/String;
	public final fun write (Ljava/nio/file/Path;Lio/gitlab/arturbosch/detekt/api/Detektion;)V
}

public class io/gitlab/arturbosch/detekt/api/ProjectMetric {
	public fun <init> (Ljava/lang/String;IIZI)V
	public synthetic fun <init> (Ljava/lang/String;IIZIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getConversionFactor ()I
	public final fun getPriority ()I
	public final fun getType ()Ljava/lang/String;
	public final fun getValue ()I
	public final fun isDouble ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/gitlab/arturbosch/detekt/api/PropertiesAware {
	public abstract fun getProperties ()Ljava/util/Map;
	public abstract fun register (Ljava/lang/String;Ljava/lang/Object;)V
}

public abstract interface class io/gitlab/arturbosch/detekt/api/ReportingExtension : io/gitlab/arturbosch/detekt/api/Extension {
	public abstract fun onFinalResult (Lio/gitlab/arturbosch/detekt/api/Detektion;)V
	public abstract fun onRawResult (Lio/gitlab/arturbosch/detekt/api/Detektion;)V
	public abstract fun transformFindings (Ljava/util/Map;)Ljava/util/Map;
}

public final class io/gitlab/arturbosch/detekt/api/ReportingExtension$DefaultImpls {
	public static fun getPriority (Lio/gitlab/arturbosch/detekt/api/ReportingExtension;)I
	public static fun init (Lio/gitlab/arturbosch/detekt/api/ReportingExtension;Lio/gitlab/arturbosch/detekt/api/Config;)V
	public static fun init (Lio/gitlab/arturbosch/detekt/api/ReportingExtension;Lio/gitlab/arturbosch/detekt/api/SetupContext;)V
	public static fun onFinalResult (Lio/gitlab/arturbosch/detekt/api/ReportingExtension;Lio/gitlab/arturbosch/detekt/api/Detektion;)V
	public static fun onRawResult (Lio/gitlab/arturbosch/detekt/api/ReportingExtension;Lio/gitlab/arturbosch/detekt/api/Detektion;)V
	public static fun transformFindings (Lio/gitlab/arturbosch/detekt/api/ReportingExtension;Ljava/util/Map;)Ljava/util/Map;
}

public abstract interface annotation class io/gitlab/arturbosch/detekt/api/RequiresTypeResolution : java/lang/annotation/Annotation {
}

public class io/gitlab/arturbosch/detekt/api/Rule : io/gitlab/arturbosch/detekt/api/DetektVisitor {
	public fun <init> (Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;)V
	public final fun getAliases ()Ljava/util/Set;
	public final fun getAutoCorrect ()Z
	public final fun getBindingContext ()Lorg/jetbrains/kotlin/resolve/BindingContext;
	public final fun getCompilerResources ()Lio/gitlab/arturbosch/detekt/api/CompilerResources;
	public final fun getConfig ()Lio/gitlab/arturbosch/detekt/api/Config;
	public fun getDefaultRuleIdAliases ()Ljava/util/Set;
	public final fun getDescription ()Ljava/lang/String;
	protected fun postVisit (Lorg/jetbrains/kotlin/psi/KtFile;)V
	protected fun preVisit (Lorg/jetbrains/kotlin/psi/KtFile;)V
	public final fun report (Lio/gitlab/arturbosch/detekt/api/Finding;)V
	public final fun setBindingContext (Lorg/jetbrains/kotlin/resolve/BindingContext;)V
	public final fun setCompilerResources (Lio/gitlab/arturbosch/detekt/api/CompilerResources;)V
	public fun visit (Lorg/jetbrains/kotlin/psi/KtFile;)V
	public final fun visitFile (Lorg/jetbrains/kotlin/psi/KtFile;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/api/CompilerResources;)Ljava/util/List;
	public static synthetic fun visitFile$default (Lio/gitlab/arturbosch/detekt/api/Rule;Lorg/jetbrains/kotlin/psi/KtFile;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/api/CompilerResources;ILjava/lang/Object;)Ljava/util/List;
}

public final class io/gitlab/arturbosch/detekt/api/Rule$Id {
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/gitlab/arturbosch/detekt/api/RuleKt {
	public static final fun getRuleId (Lio/gitlab/arturbosch/detekt/api/Rule;)Lio/gitlab/arturbosch/detekt/api/Rule$Id;
}

public final class io/gitlab/arturbosch/detekt/api/RuleSet {
	public static final field Companion Lio/gitlab/arturbosch/detekt/api/RuleSet$Companion;
	public fun <init> (Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;Ljava/util/Map;)V
	public final fun getId ()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;
	public final fun getRules ()Ljava/util/Map;
}

public final class io/gitlab/arturbosch/detekt/api/RuleSet$Companion {
	public final fun invoke (Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;Ljava/util/List;)Lio/gitlab/arturbosch/detekt/api/RuleSet;
}

public final class io/gitlab/arturbosch/detekt/api/RuleSet$Id {
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/gitlab/arturbosch/detekt/api/RuleSetProvider {
	public abstract fun getRuleSetId ()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;
	public abstract fun instance ()Lio/gitlab/arturbosch/detekt/api/RuleSet;
}

public abstract interface class io/gitlab/arturbosch/detekt/api/SetupContext : io/gitlab/arturbosch/detekt/api/PropertiesAware {
	public abstract fun getConfig ()Lio/gitlab/arturbosch/detekt/api/Config;
	public abstract fun getConfigUris ()Ljava/util/Collection;
	public abstract fun getErrorChannel ()Ljava/lang/Appendable;
	public abstract fun getOutputChannel ()Ljava/lang/Appendable;
}

public final class io/gitlab/arturbosch/detekt/api/Severity : java/lang/Enum {
	public static final field Error Lio/gitlab/arturbosch/detekt/api/Severity;
	public static final field Info Lio/gitlab/arturbosch/detekt/api/Severity;
	public static final field Warning Lio/gitlab/arturbosch/detekt/api/Severity;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Severity;
	public static fun values ()[Lio/gitlab/arturbosch/detekt/api/Severity;
}

public final class io/gitlab/arturbosch/detekt/api/SourceLocation {
	public fun <init> (II)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getColumn ()I
	public final fun getLine ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/gitlab/arturbosch/detekt/api/SplitPatternKt {
	public static final fun simplePatternToRegex (Ljava/lang/String;)Lkotlin/text/Regex;
}

public final class io/gitlab/arturbosch/detekt/api/TextLocation {
	public fun <init> (II)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEnd ()I
	public final fun getStart ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/gitlab/arturbosch/detekt/api/ValueWithReason {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getReason ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/gitlab/arturbosch/detekt/api/ValuesWithReason : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class io/gitlab/arturbosch/detekt/api/ValuesWithReasonKt {
	public static final fun valuesWithReason (Ljava/util/List;)Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;
	public static final fun valuesWithReason ([Lkotlin/Pair;)Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;
}

