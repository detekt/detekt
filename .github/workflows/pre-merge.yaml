name: Pre Merge Checks

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  gradle:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        jdk: [8, 11, 14]
    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    env:
      # We compile the test snippets only on Java 8.
      COMPILE_TEST_SNIPPETS: ${{ matrix.os == 'ubuntu-latest' && matrix.jdk == 8 }}
      JDK_VERSION:  ${{ matrix.jdk }}
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

      # Let's cleanup the gradle cache folders to make sure
      # we don't accidentally cache stale files.
    - name: Cleanup Gradle Folders
      shell: bash
      run: |
        rm -rf ~/.gradle/caches/ && \
        rm -rf ~/.gradle/wrapper/


    - name: Cache Gradle Folders
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches/
          ~/.gradle/wrapper/
        key: cache-gradle-${{ matrix.os }}-${{ matrix.jdk }}-${{ hashFiles('detekt-bom/build.gradle.kts') }}
        restore-keys: |
          cache-gradle-${{ matrix.os }}-${{ matrix.jdk }}-
          cache-gradle-${{ matrix.os }}-
          cache-gradle-


    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.jdk }}


    - name: Build detekt (UNIX)
      run: ./gradlew build shadowJar -PwarningsAsErrors=true -Pcompile-test-snippets=$COMPILE_TEST_SNIPPETS
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
    - name: Run detekt-cli --help (UNIX)
      run: java -jar ./detekt-cli/build/libs/detekt-cli-*-all.jar --help
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
    - name: Run detekt-cli with argsfile (UNIX)
      run: java -jar ./detekt-cli/build/libs/detekt-cli-*-all.jar @./config/detekt/argsfile_unix
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'


    - name: Build detekt (WIN)
      run: ./gradlew build installShadowDist -PwarningsAsErrors=true -Pcompile-test-snippets=%COMPILE_TEST_SNIPPETS%
      if: matrix.os == 'windows-latest'
    - name: Run detekt-cli --help (WIN)
      run: detekt-cli\build\install\detekt-cli-shadow\bin\detekt-cli --help
      if: matrix.os == 'windows-latest'
    - name: Run detekt-cli with argsfile (WIN)
      run: detekt-cli\build\install\detekt-cli-shadow\bin\detekt-cli @config\detekt\argsfile_windows
      if: matrix.os == 'windows-latest'


    - name: Verify Generator Output
      run: ./gradlew verifyGeneratorOutput
