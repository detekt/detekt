[{"name":"class FindingAssert(val actual: Finding?) : AbstractAssert<FindingAssert, Finding> ","description":"io.gitlab.arturbosch.detekt.test.FindingAssert","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-finding-assert/index.html","searchKeys":["FindingAssert","class FindingAssert(val actual: Finding?) : AbstractAssert<FindingAssert, Finding> ","io.gitlab.arturbosch.detekt.test.FindingAssert"]},{"name":"class FindingsAssert(actual: List<Finding>) : AbstractListAssert<FindingsAssert, List<Finding>, Finding, FindingAssert> ","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/index.html","searchKeys":["FindingsAssert","class FindingsAssert(actual: List<Finding>) : AbstractListAssert<FindingsAssert, List<Finding>, Finding, FindingAssert> ","io.gitlab.arturbosch.detekt.test.FindingsAssert"]},{"name":"class TestConfig(val parent: Config?, pairs: Pair<String, Any>) : Config","description":"io.gitlab.arturbosch.detekt.test.TestConfig","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/index.html","searchKeys":["TestConfig","class TestConfig(val parent: Config?, pairs: Pair<String, Any>) : Config","io.gitlab.arturbosch.detekt.test.TestConfig"]},{"name":"constructor(actual: Finding?)","description":"io.gitlab.arturbosch.detekt.test.FindingAssert.FindingAssert","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-finding-assert/-finding-assert.html","searchKeys":["FindingAssert","constructor(actual: Finding?)","io.gitlab.arturbosch.detekt.test.FindingAssert.FindingAssert"]},{"name":"constructor(actual: List<Finding>)","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.FindingsAssert","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/-findings-assert.html","searchKeys":["FindingsAssert","constructor(actual: List<Finding>)","io.gitlab.arturbosch.detekt.test.FindingsAssert.FindingsAssert"]},{"name":"constructor(parent: Config?, vararg pairs: Pair<String, Any>)","description":"io.gitlab.arturbosch.detekt.test.TestConfig.TestConfig","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/-test-config.html","searchKeys":["TestConfig","constructor(parent: Config?, vararg pairs: Pair<String, Any>)","io.gitlab.arturbosch.detekt.test.TestConfig.TestConfig"]},{"name":"constructor(vararg pairs: Pair<String, Any>)","description":"io.gitlab.arturbosch.detekt.test.TestConfig.TestConfig","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/-test-config.html","searchKeys":["TestConfig","constructor(vararg pairs: Pair<String, Any>)","io.gitlab.arturbosch.detekt.test.TestConfig.TestConfig"]},{"name":"fun FakeCompilerResources(mode: ExplicitApiMode = ExplicitApiMode.DISABLED): CompilerResources","description":"io.gitlab.arturbosch.detekt.test.FakeCompilerResources","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-fake-compiler-resources.html","searchKeys":["FakeCompilerResources","fun FakeCompilerResources(mode: ExplicitApiMode = ExplicitApiMode.DISABLED): CompilerResources","io.gitlab.arturbosch.detekt.test.FakeCompilerResources"]},{"name":"fun KotlinCoreEnvironment.createBindingContext(files: List<KtFile>): BindingContext","description":"io.gitlab.arturbosch.detekt.test.createBindingContext","location":"detekt-test/io.gitlab.arturbosch.detekt.test/create-binding-context.html","searchKeys":["createBindingContext","fun KotlinCoreEnvironment.createBindingContext(files: List<KtFile>): BindingContext","io.gitlab.arturbosch.detekt.test.createBindingContext"]},{"name":"fun Rule.compileAndLint(content: String, compilerResources: CompilerResources = FakeCompilerResources()): List<Finding>","description":"io.gitlab.arturbosch.detekt.test.compileAndLint","location":"detekt-test/io.gitlab.arturbosch.detekt.test/compile-and-lint.html","searchKeys":["compileAndLint","fun Rule.compileAndLint(content: String, compilerResources: CompilerResources = FakeCompilerResources()): List<Finding>","io.gitlab.arturbosch.detekt.test.compileAndLint"]},{"name":"fun Rule.compileAndLintWithContext(environment: KotlinCoreEnvironment, content: String, compilerResources: CompilerResources = CompilerResources(\n        environment.configuration.languageVersionSettings,\n        DataFlowValueFactoryImpl(environment.configuration.languageVersionSettings)\n    )): List<Finding>","description":"io.gitlab.arturbosch.detekt.test.compileAndLintWithContext","location":"detekt-test/io.gitlab.arturbosch.detekt.test/compile-and-lint-with-context.html","searchKeys":["compileAndLintWithContext","fun Rule.compileAndLintWithContext(environment: KotlinCoreEnvironment, content: String, compilerResources: CompilerResources = CompilerResources(\n        environment.configuration.languageVersionSettings,\n        DataFlowValueFactoryImpl(environment.configuration.languageVersionSettings)\n    )): List<Finding>","io.gitlab.arturbosch.detekt.test.compileAndLintWithContext"]},{"name":"fun Rule.lint(content: String, compilerResources: CompilerResources = FakeCompilerResources()): List<Finding>","description":"io.gitlab.arturbosch.detekt.test.lint","location":"detekt-test/io.gitlab.arturbosch.detekt.test/lint.html","searchKeys":["lint","fun Rule.lint(content: String, compilerResources: CompilerResources = FakeCompilerResources()): List<Finding>","io.gitlab.arturbosch.detekt.test.lint"]},{"name":"fun Rule.lint(ktFile: KtFile, compilerResources: CompilerResources = FakeCompilerResources()): List<Finding>","description":"io.gitlab.arturbosch.detekt.test.lint","location":"detekt-test/io.gitlab.arturbosch.detekt.test/lint.html","searchKeys":["lint","fun Rule.lint(ktFile: KtFile, compilerResources: CompilerResources = FakeCompilerResources()): List<Finding>","io.gitlab.arturbosch.detekt.test.lint"]},{"name":"fun Rule.lintWithContext(environment: KotlinCoreEnvironment, content: String, vararg additionalContents: String, compilerResources: CompilerResources = CompilerResources(\n        environment.configuration.languageVersionSettings,\n        DataFlowValueFactoryImpl(environment.configuration.languageVersionSettings)\n    )): List<Finding>","description":"io.gitlab.arturbosch.detekt.test.lintWithContext","location":"detekt-test/io.gitlab.arturbosch.detekt.test/lint-with-context.html","searchKeys":["lintWithContext","fun Rule.lintWithContext(environment: KotlinCoreEnvironment, content: String, vararg additionalContents: String, compilerResources: CompilerResources = CompilerResources(\n        environment.configuration.languageVersionSettings,\n        DataFlowValueFactoryImpl(environment.configuration.languageVersionSettings)\n    )): List<Finding>","io.gitlab.arturbosch.detekt.test.lintWithContext"]},{"name":"fun ValueWithReason.toConfig(): Map<String, String?>","description":"io.gitlab.arturbosch.detekt.test.toConfig","location":"detekt-test/io.gitlab.arturbosch.detekt.test/to-config.html","searchKeys":["toConfig","fun ValueWithReason.toConfig(): Map<String, String?>","io.gitlab.arturbosch.detekt.test.toConfig"]},{"name":"fun assertThat(finding: Finding): FindingAssert","description":"io.gitlab.arturbosch.detekt.test.assertThat","location":"detekt-test/io.gitlab.arturbosch.detekt.test/assert-that.html","searchKeys":["assertThat","fun assertThat(finding: Finding): FindingAssert","io.gitlab.arturbosch.detekt.test.assertThat"]},{"name":"fun assertThat(findings: List<Finding>): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.assertThat","location":"detekt-test/io.gitlab.arturbosch.detekt.test/assert-that.html","searchKeys":["assertThat","fun assertThat(findings: List<Finding>): FindingsAssert","io.gitlab.arturbosch.detekt.test.assertThat"]},{"name":"fun hasEndSourceLocation(line: Int, column: Int): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasEndSourceLocation","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-end-source-location.html","searchKeys":["hasEndSourceLocation","fun hasEndSourceLocation(line: Int, column: Int): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasEndSourceLocation"]},{"name":"fun hasEndSourceLocations(vararg expected: SourceLocation): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasEndSourceLocations","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-end-source-locations.html","searchKeys":["hasEndSourceLocations","fun hasEndSourceLocations(vararg expected: SourceLocation): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasEndSourceLocations"]},{"name":"fun hasMessage(expectedMessage: String): FindingAssert","description":"io.gitlab.arturbosch.detekt.test.FindingAssert.hasMessage","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-finding-assert/has-message.html","searchKeys":["hasMessage","fun hasMessage(expectedMessage: String): FindingAssert","io.gitlab.arturbosch.detekt.test.FindingAssert.hasMessage"]},{"name":"fun hasSourceLocation(line: Int, column: Int): FindingAssert","description":"io.gitlab.arturbosch.detekt.test.FindingAssert.hasSourceLocation","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-finding-assert/has-source-location.html","searchKeys":["hasSourceLocation","fun hasSourceLocation(line: Int, column: Int): FindingAssert","io.gitlab.arturbosch.detekt.test.FindingAssert.hasSourceLocation"]},{"name":"fun hasStartSourceLocation(line: Int, column: Int): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasStartSourceLocation","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-start-source-location.html","searchKeys":["hasStartSourceLocation","fun hasStartSourceLocation(line: Int, column: Int): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasStartSourceLocation"]},{"name":"fun hasStartSourceLocations(vararg expected: SourceLocation): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasStartSourceLocations","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-start-source-locations.html","searchKeys":["hasStartSourceLocations","fun hasStartSourceLocations(vararg expected: SourceLocation): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasStartSourceLocations"]},{"name":"fun hasTextLocations(vararg expected: Pair<Int, Int>): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasTextLocations","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-text-locations.html","searchKeys":["hasTextLocations","fun hasTextLocations(vararg expected: Pair<Int, Int>): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasTextLocations"]},{"name":"fun hasTextLocations(vararg expected: String): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasTextLocations","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-text-locations.html","searchKeys":["hasTextLocations","fun hasTextLocations(vararg expected: String): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasTextLocations"]},{"name":"fun yamlConfig(name: String): Config","description":"io.gitlab.arturbosch.detekt.test.yamlConfig","location":"detekt-test/io.gitlab.arturbosch.detekt.test/yaml-config.html","searchKeys":["yamlConfig","fun yamlConfig(name: String): Config","io.gitlab.arturbosch.detekt.test.yamlConfig"]},{"name":"fun yamlConfigFromContent(content: String): Config","description":"io.gitlab.arturbosch.detekt.test.yamlConfigFromContent","location":"detekt-test/io.gitlab.arturbosch.detekt.test/yaml-config-from-content.html","searchKeys":["yamlConfigFromContent","fun yamlConfigFromContent(content: String): Config","io.gitlab.arturbosch.detekt.test.yamlConfigFromContent"]},{"name":"open override fun <T : Any> valueOrDefault(key: String, default: T): T","description":"io.gitlab.arturbosch.detekt.test.TestConfig.valueOrDefault","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/value-or-default.html","searchKeys":["valueOrDefault","open override fun <T : Any> valueOrDefault(key: String, default: T): T","io.gitlab.arturbosch.detekt.test.TestConfig.valueOrDefault"]},{"name":"open override fun <T : Any> valueOrNull(key: String): T?","description":"io.gitlab.arturbosch.detekt.test.TestConfig.valueOrNull","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/value-or-null.html","searchKeys":["valueOrNull","open override fun <T : Any> valueOrNull(key: String): T?","io.gitlab.arturbosch.detekt.test.TestConfig.valueOrNull"]},{"name":"open override fun subConfig(key: String): TestConfig","description":"io.gitlab.arturbosch.detekt.test.TestConfig.subConfig","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/sub-config.html","searchKeys":["subConfig","open override fun subConfig(key: String): TestConfig","io.gitlab.arturbosch.detekt.test.TestConfig.subConfig"]},{"name":"open override fun subConfigKeys(): Set<String>","description":"io.gitlab.arturbosch.detekt.test.TestConfig.subConfigKeys","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/sub-config-keys.html","searchKeys":["subConfigKeys","open override fun subConfigKeys(): Set<String>","io.gitlab.arturbosch.detekt.test.TestConfig.subConfigKeys"]},{"name":"open override val parent: Config?","description":"io.gitlab.arturbosch.detekt.test.TestConfig.parent","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/parent.html","searchKeys":["parent","open override val parent: Config?","io.gitlab.arturbosch.detekt.test.TestConfig.parent"]},{"name":"open override val parentPath: String? = null","description":"io.gitlab.arturbosch.detekt.test.TestConfig.parentPath","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/parent-path.html","searchKeys":["parentPath","open override val parentPath: String? = null","io.gitlab.arturbosch.detekt.test.TestConfig.parentPath"]},{"name":"val Finding.location: Location","description":"io.gitlab.arturbosch.detekt.test.location","location":"detekt-test/io.gitlab.arturbosch.detekt.test/location.html","searchKeys":["location","val Finding.location: Location","io.gitlab.arturbosch.detekt.test.location"]},{"name":"val actual: Finding?","description":"io.gitlab.arturbosch.detekt.test.FindingAssert.actual","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-finding-assert/actual.html","searchKeys":["actual","val actual: Finding?","io.gitlab.arturbosch.detekt.test.FindingAssert.actual"]},{"name":"Error","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.Error","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/-error/index.html","searchKeys":["Error","Error","io.gitlab.arturbosch.detekt.api.Notification.Level.Error"]},{"name":"Error","description":"io.gitlab.arturbosch.detekt.api.Severity.Error","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/-error/index.html","searchKeys":["Error","Error","io.gitlab.arturbosch.detekt.api.Severity.Error"]},{"name":"Info","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.Info","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/-info/index.html","searchKeys":["Info","Info","io.gitlab.arturbosch.detekt.api.Notification.Level.Info"]},{"name":"Info","description":"io.gitlab.arturbosch.detekt.api.Severity.Info","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/-info/index.html","searchKeys":["Info","Info","io.gitlab.arturbosch.detekt.api.Severity.Info"]},{"name":"Warning","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.Warning","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/-warning/index.html","searchKeys":["Warning","Warning","io.gitlab.arturbosch.detekt.api.Notification.Level.Warning"]},{"name":"Warning","description":"io.gitlab.arturbosch.detekt.api.Severity.Warning","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/-warning/index.html","searchKeys":["Warning","Warning","io.gitlab.arturbosch.detekt.api.Severity.Warning"]},{"name":"abstract class OutputReport : Extension","description":"io.gitlab.arturbosch.detekt.api.OutputReport","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-output-report/index.html","searchKeys":["OutputReport","abstract class OutputReport : Extension","io.gitlab.arturbosch.detekt.api.OutputReport"]},{"name":"abstract fun <T : Any> valueOrNull(key: String): T?","description":"io.gitlab.arturbosch.detekt.api.Config.valueOrNull","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/value-or-null.html","searchKeys":["valueOrNull","abstract fun <T : Any> valueOrNull(key: String): T?","io.gitlab.arturbosch.detekt.api.Config.valueOrNull"]},{"name":"abstract fun add(notification: Notification)","description":"io.gitlab.arturbosch.detekt.api.Detektion.add","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/add.html","searchKeys":["add","abstract fun add(notification: Notification)","io.gitlab.arturbosch.detekt.api.Detektion.add"]},{"name":"abstract fun add(projectMetric: ProjectMetric)","description":"io.gitlab.arturbosch.detekt.api.Detektion.add","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/add.html","searchKeys":["add","abstract fun add(projectMetric: ProjectMetric)","io.gitlab.arturbosch.detekt.api.Detektion.add"]},{"name":"abstract fun instance(): RuleSet","description":"io.gitlab.arturbosch.detekt.api.RuleSetProvider.instance","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set-provider/instance.html","searchKeys":["instance","abstract fun instance(): RuleSet","io.gitlab.arturbosch.detekt.api.RuleSetProvider.instance"]},{"name":"abstract fun register(key: String, value: Any)","description":"io.gitlab.arturbosch.detekt.api.PropertiesAware.register","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-properties-aware/register.html","searchKeys":["register","abstract fun register(key: String, value: Any)","io.gitlab.arturbosch.detekt.api.PropertiesAware.register"]},{"name":"abstract fun render(detektion: Detektion): String?","description":"io.gitlab.arturbosch.detekt.api.ConsoleReport.render","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-console-report/render.html","searchKeys":["render","abstract fun render(detektion: Detektion): String?","io.gitlab.arturbosch.detekt.api.ConsoleReport.render"]},{"name":"abstract fun render(detektion: Detektion): String?","description":"io.gitlab.arturbosch.detekt.api.OutputReport.render","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-output-report/render.html","searchKeys":["render","abstract fun render(detektion: Detektion): String?","io.gitlab.arturbosch.detekt.api.OutputReport.render"]},{"name":"abstract fun subConfig(key: String): Config","description":"io.gitlab.arturbosch.detekt.api.Config.subConfig","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/sub-config.html","searchKeys":["subConfig","abstract fun subConfig(key: String): Config","io.gitlab.arturbosch.detekt.api.Config.subConfig"]},{"name":"abstract fun subConfigKeys(): Set<String>","description":"io.gitlab.arturbosch.detekt.api.Config.subConfigKeys","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/sub-config-keys.html","searchKeys":["subConfigKeys","abstract fun subConfigKeys(): Set<String>","io.gitlab.arturbosch.detekt.api.Config.subConfigKeys"]},{"name":"abstract fun validate(config: Config): Collection<Notification>","description":"io.gitlab.arturbosch.detekt.api.ConfigValidator.validate","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-validator/validate.html","searchKeys":["validate","abstract fun validate(config: Config): Collection<Notification>","io.gitlab.arturbosch.detekt.api.ConfigValidator.validate"]},{"name":"abstract val basePath: Path","description":"io.gitlab.arturbosch.detekt.api.SetupContext.basePath","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-setup-context/base-path.html","searchKeys":["basePath","abstract val basePath: Path","io.gitlab.arturbosch.detekt.api.SetupContext.basePath"]},{"name":"abstract val config: Config","description":"io.gitlab.arturbosch.detekt.api.SetupContext.config","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-setup-context/config.html","searchKeys":["config","abstract val config: Config","io.gitlab.arturbosch.detekt.api.SetupContext.config"]},{"name":"abstract val configUris: Collection<URI>","description":"io.gitlab.arturbosch.detekt.api.SetupContext.configUris","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-setup-context/config-uris.html","searchKeys":["configUris","abstract val configUris: Collection<URI>","io.gitlab.arturbosch.detekt.api.SetupContext.configUris"]},{"name":"abstract val ending: String","description":"io.gitlab.arturbosch.detekt.api.OutputReport.ending","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-output-report/ending.html","searchKeys":["ending","abstract val ending: String","io.gitlab.arturbosch.detekt.api.OutputReport.ending"]},{"name":"abstract val entity: Entity","description":"io.gitlab.arturbosch.detekt.api.Finding.entity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/entity.html","searchKeys":["entity","abstract val entity: Entity","io.gitlab.arturbosch.detekt.api.Finding.entity"]},{"name":"abstract val errorChannel: Appendable","description":"io.gitlab.arturbosch.detekt.api.SetupContext.errorChannel","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-setup-context/error-channel.html","searchKeys":["errorChannel","abstract val errorChannel: Appendable","io.gitlab.arturbosch.detekt.api.SetupContext.errorChannel"]},{"name":"abstract val id: String","description":"io.gitlab.arturbosch.detekt.api.Extension.id","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-extension/id.html","searchKeys":["id","abstract val id: String","io.gitlab.arturbosch.detekt.api.Extension.id"]},{"name":"abstract val issues: List<Issue>","description":"io.gitlab.arturbosch.detekt.api.Detektion.issues","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/issues.html","searchKeys":["issues","abstract val issues: List<Issue>","io.gitlab.arturbosch.detekt.api.Detektion.issues"]},{"name":"abstract val level: Notification.Level","description":"io.gitlab.arturbosch.detekt.api.Notification.level","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/level.html","searchKeys":["level","abstract val level: Notification.Level","io.gitlab.arturbosch.detekt.api.Notification.level"]},{"name":"abstract val message: String","description":"io.gitlab.arturbosch.detekt.api.Finding.message","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/message.html","searchKeys":["message","abstract val message: String","io.gitlab.arturbosch.detekt.api.Finding.message"]},{"name":"abstract val message: String","description":"io.gitlab.arturbosch.detekt.api.Notification.message","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/message.html","searchKeys":["message","abstract val message: String","io.gitlab.arturbosch.detekt.api.Notification.message"]},{"name":"abstract val metrics: Collection<ProjectMetric>","description":"io.gitlab.arturbosch.detekt.api.Detektion.metrics","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/metrics.html","searchKeys":["metrics","abstract val metrics: Collection<ProjectMetric>","io.gitlab.arturbosch.detekt.api.Detektion.metrics"]},{"name":"abstract val notifications: Collection<Notification>","description":"io.gitlab.arturbosch.detekt.api.Detektion.notifications","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/notifications.html","searchKeys":["notifications","abstract val notifications: Collection<Notification>","io.gitlab.arturbosch.detekt.api.Detektion.notifications"]},{"name":"abstract val outputChannel: Appendable","description":"io.gitlab.arturbosch.detekt.api.SetupContext.outputChannel","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-setup-context/output-channel.html","searchKeys":["outputChannel","abstract val outputChannel: Appendable","io.gitlab.arturbosch.detekt.api.SetupContext.outputChannel"]},{"name":"abstract val parent: Config?","description":"io.gitlab.arturbosch.detekt.api.Config.parent","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/parent.html","searchKeys":["parent","abstract val parent: Config?","io.gitlab.arturbosch.detekt.api.Config.parent"]},{"name":"abstract val parentPath: String?","description":"io.gitlab.arturbosch.detekt.api.Config.parentPath","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/parent-path.html","searchKeys":["parentPath","abstract val parentPath: String?","io.gitlab.arturbosch.detekt.api.Config.parentPath"]},{"name":"abstract val properties: Map<String, Any?>","description":"io.gitlab.arturbosch.detekt.api.PropertiesAware.properties","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-properties-aware/properties.html","searchKeys":["properties","abstract val properties: Map<String, Any?>","io.gitlab.arturbosch.detekt.api.PropertiesAware.properties"]},{"name":"abstract val references: List<Entity>","description":"io.gitlab.arturbosch.detekt.api.Finding.references","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/references.html","searchKeys":["references","abstract val references: List<Entity>","io.gitlab.arturbosch.detekt.api.Finding.references"]},{"name":"abstract val ruleSetId: RuleSet.Id","description":"io.gitlab.arturbosch.detekt.api.RuleSetProvider.ruleSetId","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set-provider/rule-set-id.html","searchKeys":["ruleSetId","abstract val ruleSetId: RuleSet.Id","io.gitlab.arturbosch.detekt.api.RuleSetProvider.ruleSetId"]},{"name":"abstract val suppressReasons: List<String>","description":"io.gitlab.arturbosch.detekt.api.Finding.suppressReasons","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/suppress-reasons.html","searchKeys":["suppressReasons","abstract val suppressReasons: List<String>","io.gitlab.arturbosch.detekt.api.Finding.suppressReasons"]},{"name":"annotation class ActiveByDefault(val since: String)","description":"io.gitlab.arturbosch.detekt.api.ActiveByDefault","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-active-by-default/index.html","searchKeys":["ActiveByDefault","annotation class ActiveByDefault(val since: String)","io.gitlab.arturbosch.detekt.api.ActiveByDefault"]},{"name":"annotation class Alias(val values: String)","description":"io.gitlab.arturbosch.detekt.api.Alias","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-alias/index.html","searchKeys":["Alias","annotation class Alias(val values: String)","io.gitlab.arturbosch.detekt.api.Alias"]},{"name":"annotation class AutoCorrectable(val since: String)","description":"io.gitlab.arturbosch.detekt.api.internal.AutoCorrectable","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-auto-correctable/index.html","searchKeys":["AutoCorrectable","annotation class AutoCorrectable(val since: String)","io.gitlab.arturbosch.detekt.api.internal.AutoCorrectable"]},{"name":"annotation class Configuration(val description: String)","description":"io.gitlab.arturbosch.detekt.api.Configuration","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-configuration/index.html","searchKeys":["Configuration","annotation class Configuration(val description: String)","io.gitlab.arturbosch.detekt.api.Configuration"]},{"name":"annotation class RequiresFullAnalysis","description":"io.gitlab.arturbosch.detekt.api.RequiresFullAnalysis","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-requires-full-analysis/index.html","searchKeys":["RequiresFullAnalysis","annotation class RequiresFullAnalysis","io.gitlab.arturbosch.detekt.api.RequiresFullAnalysis"]},{"name":"class CompilerResources(val languageVersionSettings: LanguageVersionSettings, val dataFlowValueFactory: DataFlowValueFactory)","description":"io.gitlab.arturbosch.detekt.api.CompilerResources","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-compiler-resources/index.html","searchKeys":["CompilerResources","class CompilerResources(val languageVersionSettings: LanguageVersionSettings, val dataFlowValueFactory: DataFlowValueFactory)","io.gitlab.arturbosch.detekt.api.CompilerResources"]},{"name":"class Entity(val signature: String, val location: Issue.Location)","description":"io.gitlab.arturbosch.detekt.api.Issue.Entity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-entity/index.html","searchKeys":["Entity","class Entity(val signature: String, val location: Issue.Location)","io.gitlab.arturbosch.detekt.api.Issue.Entity"]},{"name":"class Entity(val signature: String, val location: Location, val ktElement: KtElement)","description":"io.gitlab.arturbosch.detekt.api.Entity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/index.html","searchKeys":["Entity","class Entity(val signature: String, val location: Location, val ktElement: KtElement)","io.gitlab.arturbosch.detekt.api.Entity"]},{"name":"class Id(val value: String)","description":"io.gitlab.arturbosch.detekt.api.RuleSet.Id","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/-id/index.html","searchKeys":["Id","class Id(val value: String)","io.gitlab.arturbosch.detekt.api.RuleSet.Id"]},{"name":"class InvalidConfigurationError(throwable: Throwable? = null) : RuntimeException","description":"io.gitlab.arturbosch.detekt.api.Config.InvalidConfigurationError","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-invalid-configuration-error/index.html","searchKeys":["InvalidConfigurationError","class InvalidConfigurationError(throwable: Throwable? = null) : RuntimeException","io.gitlab.arturbosch.detekt.api.Config.InvalidConfigurationError"]},{"name":"class Issue(val ruleInstance: RuleInstance, val entity: Issue.Entity, val references: List<Issue.Entity>, val message: String, val severity: Severity, val suppressReasons: List<String>)","description":"io.gitlab.arturbosch.detekt.api.Issue","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/index.html","searchKeys":["Issue","class Issue(val ruleInstance: RuleInstance, val entity: Issue.Entity, val references: List<Issue.Entity>, val message: String, val severity: Severity, val suppressReasons: List<String>)","io.gitlab.arturbosch.detekt.api.Issue"]},{"name":"class Location(val source: SourceLocation, val endSource: SourceLocation, val text: TextLocation, val path: Path)","description":"io.gitlab.arturbosch.detekt.api.Location","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/index.html","searchKeys":["Location","class Location(val source: SourceLocation, val endSource: SourceLocation, val text: TextLocation, val path: Path)","io.gitlab.arturbosch.detekt.api.Location"]},{"name":"class Location(val source: SourceLocation, val endSource: SourceLocation, val text: TextLocation, val path: Path) : Comparable<Issue.Location> ","description":"io.gitlab.arturbosch.detekt.api.Issue.Location","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-location/index.html","searchKeys":["Location","class Location(val source: SourceLocation, val endSource: SourceLocation, val text: TextLocation, val path: Path) : Comparable<Issue.Location> ","io.gitlab.arturbosch.detekt.api.Issue.Location"]},{"name":"class Name(val value: String)","description":"io.gitlab.arturbosch.detekt.api.Rule.Name","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/-name/index.html","searchKeys":["Name","class Name(val value: String)","io.gitlab.arturbosch.detekt.api.Rule.Name"]},{"name":"class RuleInstance(val id: String, val name: Rule.Name, val ruleSetId: RuleSet.Id, val description: String)","description":"io.gitlab.arturbosch.detekt.api.RuleInstance","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-instance/index.html","searchKeys":["RuleInstance","class RuleInstance(val id: String, val name: Rule.Name, val ruleSetId: RuleSet.Id, val description: String)","io.gitlab.arturbosch.detekt.api.RuleInstance"]},{"name":"class RuleSet(val id: RuleSet.Id, val rules: Map<Rule.Name, (Config) -> Rule>)","description":"io.gitlab.arturbosch.detekt.api.RuleSet","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/index.html","searchKeys":["RuleSet","class RuleSet(val id: RuleSet.Id, val rules: Map<Rule.Name, (Config) -> Rule>)","io.gitlab.arturbosch.detekt.api.RuleSet"]},{"name":"class SourceLocation(val line: Int, val column: Int) : Comparable<SourceLocation> ","description":"io.gitlab.arturbosch.detekt.api.SourceLocation","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-source-location/index.html","searchKeys":["SourceLocation","class SourceLocation(val line: Int, val column: Int) : Comparable<SourceLocation> ","io.gitlab.arturbosch.detekt.api.SourceLocation"]},{"name":"class TextLocation(val start: Int, val end: Int)","description":"io.gitlab.arturbosch.detekt.api.TextLocation","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-text-location/index.html","searchKeys":["TextLocation","class TextLocation(val start: Int, val end: Int)","io.gitlab.arturbosch.detekt.api.TextLocation"]},{"name":"class ValueWithReason(val value: String, val reason: String? = null)","description":"io.gitlab.arturbosch.detekt.api.ValueWithReason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-value-with-reason/index.html","searchKeys":["ValueWithReason","class ValueWithReason(val value: String, val reason: String? = null)","io.gitlab.arturbosch.detekt.api.ValueWithReason"]},{"name":"class ValuesWithReason : Iterable<ValueWithReason> ","description":"io.gitlab.arturbosch.detekt.api.ValuesWithReason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-values-with-reason/index.html","searchKeys":["ValuesWithReason","class ValuesWithReason : Iterable<ValueWithReason> ","io.gitlab.arturbosch.detekt.api.ValuesWithReason"]},{"name":"const val ACTIVE_KEY: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.ACTIVE_KEY","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-a-c-t-i-v-e_-k-e-y.html","searchKeys":["ACTIVE_KEY","const val ACTIVE_KEY: String","io.gitlab.arturbosch.detekt.api.Config.Companion.ACTIVE_KEY"]},{"name":"const val ALIASES_KEY: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.ALIASES_KEY","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-a-l-i-a-s-e-s_-k-e-y.html","searchKeys":["ALIASES_KEY","const val ALIASES_KEY: String","io.gitlab.arturbosch.detekt.api.Config.Companion.ALIASES_KEY"]},{"name":"const val AUTO_CORRECT_KEY: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.AUTO_CORRECT_KEY","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-a-u-t-o_-c-o-r-r-e-c-t_-k-e-y.html","searchKeys":["AUTO_CORRECT_KEY","const val AUTO_CORRECT_KEY: String","io.gitlab.arturbosch.detekt.api.Config.Companion.AUTO_CORRECT_KEY"]},{"name":"const val CONFIG_SEPARATOR: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.CONFIG_SEPARATOR","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-c-o-n-f-i-g_-s-e-p-a-r-a-t-o-r.html","searchKeys":["CONFIG_SEPARATOR","const val CONFIG_SEPARATOR: String","io.gitlab.arturbosch.detekt.api.Config.Companion.CONFIG_SEPARATOR"]},{"name":"const val EXCLUDES_KEY: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.EXCLUDES_KEY","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-e-x-c-l-u-d-e-s_-k-e-y.html","searchKeys":["EXCLUDES_KEY","const val EXCLUDES_KEY: String","io.gitlab.arturbosch.detekt.api.Config.Companion.EXCLUDES_KEY"]},{"name":"const val INCLUDES_KEY: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.INCLUDES_KEY","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-i-n-c-l-u-d-e-s_-k-e-y.html","searchKeys":["INCLUDES_KEY","const val INCLUDES_KEY: String","io.gitlab.arturbosch.detekt.api.Config.Companion.INCLUDES_KEY"]},{"name":"const val SEVERITY_KEY: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.SEVERITY_KEY","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-s-e-v-e-r-i-t-y_-k-e-y.html","searchKeys":["SEVERITY_KEY","const val SEVERITY_KEY: String","io.gitlab.arturbosch.detekt.api.Config.Companion.SEVERITY_KEY"]},{"name":"constructor()","description":"io.gitlab.arturbosch.detekt.api.DetektVisitor.DetektVisitor","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detekt-visitor/-detekt-visitor.html","searchKeys":["DetektVisitor","constructor()","io.gitlab.arturbosch.detekt.api.DetektVisitor.DetektVisitor"]},{"name":"constructor()","description":"io.gitlab.arturbosch.detekt.api.OutputReport.OutputReport","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-output-report/-output-report.html","searchKeys":["OutputReport","constructor()","io.gitlab.arturbosch.detekt.api.OutputReport.OutputReport"]},{"name":"constructor(config: Config, description: String)","description":"io.gitlab.arturbosch.detekt.api.Rule.Rule","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/-rule.html","searchKeys":["Rule","constructor(config: Config, description: String)","io.gitlab.arturbosch.detekt.api.Rule.Rule"]},{"name":"constructor(entity: Entity, message: String, references: List<Entity> = emptyList(), suppressReasons: List<String> = emptyList())","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.CodeSmell","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/-code-smell.html","searchKeys":["CodeSmell","constructor(entity: Entity, message: String, references: List<Entity> = emptyList(), suppressReasons: List<String> = emptyList())","io.gitlab.arturbosch.detekt.api.CodeSmell.CodeSmell"]},{"name":"constructor(id: RuleSet.Id, rules: Map<Rule.Name, (Config) -> Rule>)","description":"io.gitlab.arturbosch.detekt.api.RuleSet.RuleSet","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/-rule-set.html","searchKeys":["RuleSet","constructor(id: RuleSet.Id, rules: Map<Rule.Name, (Config) -> Rule>)","io.gitlab.arturbosch.detekt.api.RuleSet.RuleSet"]},{"name":"constructor(id: String, name: Rule.Name, ruleSetId: RuleSet.Id, description: String)","description":"io.gitlab.arturbosch.detekt.api.RuleInstance.RuleInstance","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-instance/-rule-instance.html","searchKeys":["RuleInstance","constructor(id: String, name: Rule.Name, ruleSetId: RuleSet.Id, description: String)","io.gitlab.arturbosch.detekt.api.RuleInstance.RuleInstance"]},{"name":"constructor(languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory)","description":"io.gitlab.arturbosch.detekt.api.CompilerResources.CompilerResources","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-compiler-resources/-compiler-resources.html","searchKeys":["CompilerResources","constructor(languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory)","io.gitlab.arturbosch.detekt.api.CompilerResources.CompilerResources"]},{"name":"constructor(line: Int, column: Int)","description":"io.gitlab.arturbosch.detekt.api.SourceLocation.SourceLocation","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-source-location/-source-location.html","searchKeys":["SourceLocation","constructor(line: Int, column: Int)","io.gitlab.arturbosch.detekt.api.SourceLocation.SourceLocation"]},{"name":"constructor(ruleInstance: RuleInstance, entity: Issue.Entity, references: List<Issue.Entity>, message: String, severity: Severity, suppressReasons: List<String>)","description":"io.gitlab.arturbosch.detekt.api.Issue.Issue","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-issue.html","searchKeys":["Issue","constructor(ruleInstance: RuleInstance, entity: Issue.Entity, references: List<Issue.Entity>, message: String, severity: Severity, suppressReasons: List<String>)","io.gitlab.arturbosch.detekt.api.Issue.Issue"]},{"name":"constructor(signature: String, location: Issue.Location)","description":"io.gitlab.arturbosch.detekt.api.Issue.Entity.Entity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-entity/-entity.html","searchKeys":["Entity","constructor(signature: String, location: Issue.Location)","io.gitlab.arturbosch.detekt.api.Issue.Entity.Entity"]},{"name":"constructor(signature: String, location: Location, ktElement: KtElement)","description":"io.gitlab.arturbosch.detekt.api.Entity.Entity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-entity.html","searchKeys":["Entity","constructor(signature: String, location: Location, ktElement: KtElement)","io.gitlab.arturbosch.detekt.api.Entity.Entity"]},{"name":"constructor(source: SourceLocation, endSource: SourceLocation, text: TextLocation, path: Path)","description":"io.gitlab.arturbosch.detekt.api.Issue.Location.Location","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-location/-location.html","searchKeys":["Location","constructor(source: SourceLocation, endSource: SourceLocation, text: TextLocation, path: Path)","io.gitlab.arturbosch.detekt.api.Issue.Location.Location"]},{"name":"constructor(source: SourceLocation, endSource: SourceLocation, text: TextLocation, path: Path)","description":"io.gitlab.arturbosch.detekt.api.Location.Location","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/-location.html","searchKeys":["Location","constructor(source: SourceLocation, endSource: SourceLocation, text: TextLocation, path: Path)","io.gitlab.arturbosch.detekt.api.Location.Location"]},{"name":"constructor(start: Int, end: Int)","description":"io.gitlab.arturbosch.detekt.api.TextLocation.TextLocation","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-text-location/-text-location.html","searchKeys":["TextLocation","constructor(start: Int, end: Int)","io.gitlab.arturbosch.detekt.api.TextLocation.TextLocation"]},{"name":"constructor(throwable: Throwable? = null)","description":"io.gitlab.arturbosch.detekt.api.Config.InvalidConfigurationError.InvalidConfigurationError","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-invalid-configuration-error/-invalid-configuration-error.html","searchKeys":["InvalidConfigurationError","constructor(throwable: Throwable? = null)","io.gitlab.arturbosch.detekt.api.Config.InvalidConfigurationError.InvalidConfigurationError"]},{"name":"constructor(type: String, value: Int, priority: Int = -1, isDouble: Boolean = false, conversionFactor: Int = DEFAULT_FLOAT_CONVERSION_FACTOR)","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.ProjectMetric","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/-project-metric.html","searchKeys":["ProjectMetric","constructor(type: String, value: Int, priority: Int = -1, isDouble: Boolean = false, conversionFactor: Int = DEFAULT_FLOAT_CONVERSION_FACTOR)","io.gitlab.arturbosch.detekt.api.ProjectMetric.ProjectMetric"]},{"name":"constructor(value: String)","description":"io.gitlab.arturbosch.detekt.api.Rule.Name.Name","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/-name/-name.html","searchKeys":["Name","constructor(value: String)","io.gitlab.arturbosch.detekt.api.Rule.Name.Name"]},{"name":"constructor(value: String)","description":"io.gitlab.arturbosch.detekt.api.RuleSet.Id.Id","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/-id/-id.html","searchKeys":["Id","constructor(value: String)","io.gitlab.arturbosch.detekt.api.RuleSet.Id.Id"]},{"name":"constructor(value: String, reason: String? = null)","description":"io.gitlab.arturbosch.detekt.api.ValueWithReason.ValueWithReason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-value-with-reason/-value-with-reason.html","searchKeys":["ValueWithReason","constructor(value: String, reason: String? = null)","io.gitlab.arturbosch.detekt.api.ValueWithReason.ValueWithReason"]},{"name":"enum Level : Enum<Notification.Level> ","description":"io.gitlab.arturbosch.detekt.api.Notification.Level","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/index.html","searchKeys":["Level","enum Level : Enum<Notification.Level> ","io.gitlab.arturbosch.detekt.api.Notification.Level"]},{"name":"enum Severity : Enum<Severity> ","description":"io.gitlab.arturbosch.detekt.api.Severity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/index.html","searchKeys":["Severity","enum Severity : Enum<Severity> ","io.gitlab.arturbosch.detekt.api.Severity"]},{"name":"fun <T : Any, U : Any> config(defaultValue: T, transformer: (T) -> U): ReadOnlyProperty<Rule, U>","description":"io.gitlab.arturbosch.detekt.api.config","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config.html","searchKeys":["config","fun <T : Any, U : Any> config(defaultValue: T, transformer: (T) -> U): ReadOnlyProperty<Rule, U>","io.gitlab.arturbosch.detekt.api.config"]},{"name":"fun <T : Any, U : Any> configWithAndroidVariants(defaultValue: T, defaultAndroidValue: T, transformer: (T) -> U): ReadOnlyProperty<Rule, U>","description":"io.gitlab.arturbosch.detekt.api.configWithAndroidVariants","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config-with-android-variants.html","searchKeys":["configWithAndroidVariants","fun <T : Any, U : Any> configWithAndroidVariants(defaultValue: T, defaultAndroidValue: T, transformer: (T) -> U): ReadOnlyProperty<Rule, U>","io.gitlab.arturbosch.detekt.api.configWithAndroidVariants"]},{"name":"fun <T : Any, U : Any> configWithFallback(fallbackProperty: KProperty0<U>, defaultValue: T, transformer: (T) -> U): ReadOnlyProperty<Rule, U>","description":"io.gitlab.arturbosch.detekt.api.configWithFallback","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config-with-fallback.html","searchKeys":["configWithFallback","fun <T : Any, U : Any> configWithFallback(fallbackProperty: KProperty0<U>, defaultValue: T, transformer: (T) -> U): ReadOnlyProperty<Rule, U>","io.gitlab.arturbosch.detekt.api.configWithFallback"]},{"name":"fun <T : Any> config(defaultValue: T): ReadOnlyProperty<Rule, T>","description":"io.gitlab.arturbosch.detekt.api.config","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config.html","searchKeys":["config","fun <T : Any> config(defaultValue: T): ReadOnlyProperty<Rule, T>","io.gitlab.arturbosch.detekt.api.config"]},{"name":"fun <T : Any> configWithAndroidVariants(defaultValue: T, defaultAndroidValue: T): ReadOnlyProperty<Rule, T>","description":"io.gitlab.arturbosch.detekt.api.configWithAndroidVariants","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config-with-android-variants.html","searchKeys":["configWithAndroidVariants","fun <T : Any> configWithAndroidVariants(defaultValue: T, defaultAndroidValue: T): ReadOnlyProperty<Rule, T>","io.gitlab.arturbosch.detekt.api.configWithAndroidVariants"]},{"name":"fun <T : Any> configWithFallback(fallbackProperty: KProperty0<T>, defaultValue: T): ReadOnlyProperty<Rule, T>","description":"io.gitlab.arturbosch.detekt.api.configWithFallback","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config-with-fallback.html","searchKeys":["configWithFallback","fun <T : Any> configWithFallback(fallbackProperty: KProperty0<T>, defaultValue: T): ReadOnlyProperty<Rule, T>","io.gitlab.arturbosch.detekt.api.configWithFallback"]},{"name":"fun String.simplePatternToRegex(): Regex","description":"io.gitlab.arturbosch.detekt.api.simplePatternToRegex","location":"detekt-api/io.gitlab.arturbosch.detekt.api/simple-pattern-to-regex.html","searchKeys":["simplePatternToRegex","fun String.simplePatternToRegex(): Regex","io.gitlab.arturbosch.detekt.api.simplePatternToRegex"]},{"name":"fun atName(element: KtNamedDeclaration): Entity","description":"io.gitlab.arturbosch.detekt.api.Entity.Companion.atName","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-companion/at-name.html","searchKeys":["atName","fun atName(element: KtNamedDeclaration): Entity","io.gitlab.arturbosch.detekt.api.Entity.Companion.atName"]},{"name":"fun atPackageOrFirstDecl(file: KtFile): Entity","description":"io.gitlab.arturbosch.detekt.api.Entity.Companion.atPackageOrFirstDecl","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-companion/at-package-or-first-decl.html","searchKeys":["atPackageOrFirstDecl","fun atPackageOrFirstDecl(file: KtFile): Entity","io.gitlab.arturbosch.detekt.api.Entity.Companion.atPackageOrFirstDecl"]},{"name":"fun from(element: PsiElement, location: Location): Entity","description":"io.gitlab.arturbosch.detekt.api.Entity.Companion.from","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-companion/from.html","searchKeys":["from","fun from(element: PsiElement, location: Location): Entity","io.gitlab.arturbosch.detekt.api.Entity.Companion.from"]},{"name":"fun from(element: PsiElement, offset: Int = 0): Entity","description":"io.gitlab.arturbosch.detekt.api.Entity.Companion.from","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-companion/from.html","searchKeys":["from","fun from(element: PsiElement, offset: Int = 0): Entity","io.gitlab.arturbosch.detekt.api.Entity.Companion.from"]},{"name":"fun from(element: PsiElement, offset: Int = 0): Location","description":"io.gitlab.arturbosch.detekt.api.Location.Companion.from","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/-companion/from.html","searchKeys":["from","fun from(element: PsiElement, offset: Int = 0): Location","io.gitlab.arturbosch.detekt.api.Location.Companion.from"]},{"name":"fun report(finding: Finding)","description":"io.gitlab.arturbosch.detekt.api.Rule.report","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/report.html","searchKeys":["report","fun report(finding: Finding)","io.gitlab.arturbosch.detekt.api.Rule.report"]},{"name":"fun valueOf(value: String): Notification.Level","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.valueOf","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Notification.Level","io.gitlab.arturbosch.detekt.api.Notification.Level.valueOf"]},{"name":"fun valueOf(value: String): Severity","description":"io.gitlab.arturbosch.detekt.api.Severity.valueOf","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Severity","io.gitlab.arturbosch.detekt.api.Severity.valueOf"]},{"name":"fun values(): Array<Notification.Level>","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.values","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/values.html","searchKeys":["values","fun values(): Array<Notification.Level>","io.gitlab.arturbosch.detekt.api.Notification.Level.values"]},{"name":"fun values(): Array<Severity>","description":"io.gitlab.arturbosch.detekt.api.Severity.values","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/values.html","searchKeys":["values","fun values(): Array<Severity>","io.gitlab.arturbosch.detekt.api.Severity.values"]},{"name":"fun valuesWithReason(values: List<ValueWithReason>): ValuesWithReason","description":"io.gitlab.arturbosch.detekt.api.valuesWithReason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/values-with-reason.html","searchKeys":["valuesWithReason","fun valuesWithReason(values: List<ValueWithReason>): ValuesWithReason","io.gitlab.arturbosch.detekt.api.valuesWithReason"]},{"name":"fun valuesWithReason(vararg values: Pair<String, String?>): ValuesWithReason","description":"io.gitlab.arturbosch.detekt.api.valuesWithReason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/values-with-reason.html","searchKeys":["valuesWithReason","fun valuesWithReason(vararg values: Pair<String, String?>): ValuesWithReason","io.gitlab.arturbosch.detekt.api.valuesWithReason"]},{"name":"fun visitFile(root: KtFile, bindingContext: BindingContext = BindingContext.EMPTY, compilerResources: CompilerResources): List<Finding>","description":"io.gitlab.arturbosch.detekt.api.Rule.visitFile","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/visit-file.html","searchKeys":["visitFile","fun visitFile(root: KtFile, bindingContext: BindingContext = BindingContext.EMPTY, compilerResources: CompilerResources): List<Finding>","io.gitlab.arturbosch.detekt.api.Rule.visitFile"]},{"name":"fun whichDetekt(): String","description":"io.gitlab.arturbosch.detekt.api.internal.whichDetekt","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/which-detekt.html","searchKeys":["whichDetekt","fun whichDetekt(): String","io.gitlab.arturbosch.detekt.api.internal.whichDetekt"]},{"name":"fun whichJava(): String","description":"io.gitlab.arturbosch.detekt.api.internal.whichJava","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/which-java.html","searchKeys":["whichJava","fun whichJava(): String","io.gitlab.arturbosch.detekt.api.internal.whichJava"]},{"name":"fun whichKotlin(): String","description":"io.gitlab.arturbosch.detekt.api.internal.whichKotlin","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/which-kotlin.html","searchKeys":["whichKotlin","fun whichKotlin(): String","io.gitlab.arturbosch.detekt.api.internal.whichKotlin"]},{"name":"fun whichOS(): String","description":"io.gitlab.arturbosch.detekt.api.internal.whichOS","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/which-o-s.html","searchKeys":["whichOS","fun whichOS(): String","io.gitlab.arturbosch.detekt.api.internal.whichOS"]},{"name":"fun write(filePath: Path, detektion: Detektion)","description":"io.gitlab.arturbosch.detekt.api.OutputReport.write","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-output-report/write.html","searchKeys":["write","fun write(filePath: Path, detektion: Detektion)","io.gitlab.arturbosch.detekt.api.OutputReport.write"]},{"name":"inline fun <T : Any> PropertiesAware.getOrNull(key: String): T?","description":"io.gitlab.arturbosch.detekt.api.getOrNull","location":"detekt-api/io.gitlab.arturbosch.detekt.api/get-or-null.html","searchKeys":["getOrNull","inline fun <T : Any> PropertiesAware.getOrNull(key: String): T?","io.gitlab.arturbosch.detekt.api.getOrNull"]},{"name":"interface BuiltInOutputReport","description":"io.gitlab.arturbosch.detekt.api.internal.BuiltInOutputReport","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-built-in-output-report/index.html","searchKeys":["BuiltInOutputReport","interface BuiltInOutputReport","io.gitlab.arturbosch.detekt.api.internal.BuiltInOutputReport"]},{"name":"interface Config","description":"io.gitlab.arturbosch.detekt.api.Config","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/index.html","searchKeys":["Config","interface Config","io.gitlab.arturbosch.detekt.api.Config"]},{"name":"interface ConfigValidator : Extension","description":"io.gitlab.arturbosch.detekt.api.ConfigValidator","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-validator/index.html","searchKeys":["ConfigValidator","interface ConfigValidator : Extension","io.gitlab.arturbosch.detekt.api.ConfigValidator"]},{"name":"interface ConsoleReport : Extension","description":"io.gitlab.arturbosch.detekt.api.ConsoleReport","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-console-report/index.html","searchKeys":["ConsoleReport","interface ConsoleReport : Extension","io.gitlab.arturbosch.detekt.api.ConsoleReport"]},{"name":"interface DefaultRuleSetProvider : RuleSetProvider","description":"io.gitlab.arturbosch.detekt.api.internal.DefaultRuleSetProvider","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-default-rule-set-provider/index.html","searchKeys":["DefaultRuleSetProvider","interface DefaultRuleSetProvider : RuleSetProvider","io.gitlab.arturbosch.detekt.api.internal.DefaultRuleSetProvider"]},{"name":"interface Detektion : UserDataHolder","description":"io.gitlab.arturbosch.detekt.api.Detektion","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/index.html","searchKeys":["Detektion","interface Detektion : UserDataHolder","io.gitlab.arturbosch.detekt.api.Detektion"]},{"name":"interface Extension","description":"io.gitlab.arturbosch.detekt.api.Extension","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-extension/index.html","searchKeys":["Extension","interface Extension","io.gitlab.arturbosch.detekt.api.Extension"]},{"name":"interface FileProcessListener : Extension","description":"io.gitlab.arturbosch.detekt.api.FileProcessListener","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-file-process-listener/index.html","searchKeys":["FileProcessListener","interface FileProcessListener : Extension","io.gitlab.arturbosch.detekt.api.FileProcessListener"]},{"name":"interface Finding","description":"io.gitlab.arturbosch.detekt.api.Finding","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/index.html","searchKeys":["Finding","interface Finding","io.gitlab.arturbosch.detekt.api.Finding"]},{"name":"interface Notification","description":"io.gitlab.arturbosch.detekt.api.Notification","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/index.html","searchKeys":["Notification","interface Notification","io.gitlab.arturbosch.detekt.api.Notification"]},{"name":"interface PropertiesAware","description":"io.gitlab.arturbosch.detekt.api.PropertiesAware","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-properties-aware/index.html","searchKeys":["PropertiesAware","interface PropertiesAware","io.gitlab.arturbosch.detekt.api.PropertiesAware"]},{"name":"interface ReportingExtension : Extension","description":"io.gitlab.arturbosch.detekt.api.ReportingExtension","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-reporting-extension/index.html","searchKeys":["ReportingExtension","interface ReportingExtension : Extension","io.gitlab.arturbosch.detekt.api.ReportingExtension"]},{"name":"interface RuleSetProvider","description":"io.gitlab.arturbosch.detekt.api.RuleSetProvider","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set-provider/index.html","searchKeys":["RuleSetProvider","interface RuleSetProvider","io.gitlab.arturbosch.detekt.api.RuleSetProvider"]},{"name":"interface SetupContext : PropertiesAware","description":"io.gitlab.arturbosch.detekt.api.SetupContext","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-setup-context/index.html","searchKeys":["SetupContext","interface SetupContext : PropertiesAware","io.gitlab.arturbosch.detekt.api.SetupContext"]},{"name":"object Companion","description":"io.gitlab.arturbosch.detekt.api.Config.Companion","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/index.html","searchKeys":["Companion","object Companion","io.gitlab.arturbosch.detekt.api.Config.Companion"]},{"name":"object Companion","description":"io.gitlab.arturbosch.detekt.api.Entity.Companion","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-companion/index.html","searchKeys":["Companion","object Companion","io.gitlab.arturbosch.detekt.api.Entity.Companion"]},{"name":"object Companion","description":"io.gitlab.arturbosch.detekt.api.Location.Companion","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/-companion/index.html","searchKeys":["Companion","object Companion","io.gitlab.arturbosch.detekt.api.Location.Companion"]},{"name":"object Companion","description":"io.gitlab.arturbosch.detekt.api.RuleSet.Companion","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/-companion/index.html","searchKeys":["Companion","object Companion","io.gitlab.arturbosch.detekt.api.RuleSet.Companion"]},{"name":"open class CodeSmell(val entity: Entity, val message: String, val references: List<Entity> = emptyList(), val suppressReasons: List<String> = emptyList()) : Finding","description":"io.gitlab.arturbosch.detekt.api.CodeSmell","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/index.html","searchKeys":["CodeSmell","open class CodeSmell(val entity: Entity, val message: String, val references: List<Entity> = emptyList(), val suppressReasons: List<String> = emptyList()) : Finding","io.gitlab.arturbosch.detekt.api.CodeSmell"]},{"name":"open class DetektVisitor : KtTreeVisitorVoid","description":"io.gitlab.arturbosch.detekt.api.DetektVisitor","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detekt-visitor/index.html","searchKeys":["DetektVisitor","open class DetektVisitor : KtTreeVisitorVoid","io.gitlab.arturbosch.detekt.api.DetektVisitor"]},{"name":"open class ProjectMetric(val type: String, val value: Int, val priority: Int = -1, val isDouble: Boolean = false, val conversionFactor: Int = DEFAULT_FLOAT_CONVERSION_FACTOR)","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/index.html","searchKeys":["ProjectMetric","open class ProjectMetric(val type: String, val value: Int, val priority: Int = -1, val isDouble: Boolean = false, val conversionFactor: Int = DEFAULT_FLOAT_CONVERSION_FACTOR)","io.gitlab.arturbosch.detekt.api.ProjectMetric"]},{"name":"open class Rule(val config: Config, val description: String) : DetektVisitor","description":"io.gitlab.arturbosch.detekt.api.Rule","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/index.html","searchKeys":["Rule","open class Rule(val config: Config, val description: String) : DetektVisitor","io.gitlab.arturbosch.detekt.api.Rule"]},{"name":"open fun <T : Any> valueOrDefault(key: String, default: T): T","description":"io.gitlab.arturbosch.detekt.api.Config.valueOrDefault","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/value-or-default.html","searchKeys":["valueOrDefault","open fun <T : Any> valueOrDefault(key: String, default: T): T","io.gitlab.arturbosch.detekt.api.Config.valueOrDefault"]},{"name":"open fun init(context: SetupContext)","description":"io.gitlab.arturbosch.detekt.api.Extension.init","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-extension/init.html","searchKeys":["init","open fun init(context: SetupContext)","io.gitlab.arturbosch.detekt.api.Extension.init"]},{"name":"open fun onFinalResult(result: Detektion)","description":"io.gitlab.arturbosch.detekt.api.ReportingExtension.onFinalResult","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-reporting-extension/on-final-result.html","searchKeys":["onFinalResult","open fun onFinalResult(result: Detektion)","io.gitlab.arturbosch.detekt.api.ReportingExtension.onFinalResult"]},{"name":"open fun onFinish(files: List<KtFile>, result: Detektion)","description":"io.gitlab.arturbosch.detekt.api.FileProcessListener.onFinish","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-file-process-listener/on-finish.html","searchKeys":["onFinish","open fun onFinish(files: List<KtFile>, result: Detektion)","io.gitlab.arturbosch.detekt.api.FileProcessListener.onFinish"]},{"name":"open fun onProcess(file: KtFile)","description":"io.gitlab.arturbosch.detekt.api.FileProcessListener.onProcess","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-file-process-listener/on-process.html","searchKeys":["onProcess","open fun onProcess(file: KtFile)","io.gitlab.arturbosch.detekt.api.FileProcessListener.onProcess"]},{"name":"open fun onProcessComplete(file: KtFile, issues: List<Issue>)","description":"io.gitlab.arturbosch.detekt.api.FileProcessListener.onProcessComplete","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-file-process-listener/on-process-complete.html","searchKeys":["onProcessComplete","open fun onProcessComplete(file: KtFile, issues: List<Issue>)","io.gitlab.arturbosch.detekt.api.FileProcessListener.onProcessComplete"]},{"name":"open fun onRawResult(result: Detektion)","description":"io.gitlab.arturbosch.detekt.api.ReportingExtension.onRawResult","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-reporting-extension/on-raw-result.html","searchKeys":["onRawResult","open fun onRawResult(result: Detektion)","io.gitlab.arturbosch.detekt.api.ReportingExtension.onRawResult"]},{"name":"open fun onStart(files: List<KtFile>)","description":"io.gitlab.arturbosch.detekt.api.FileProcessListener.onStart","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-file-process-listener/on-start.html","searchKeys":["onStart","open fun onStart(files: List<KtFile>)","io.gitlab.arturbosch.detekt.api.FileProcessListener.onStart"]},{"name":"open fun transformIssues(issues: List<Issue>): List<Issue>","description":"io.gitlab.arturbosch.detekt.api.ReportingExtension.transformIssues","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-reporting-extension/transform-issues.html","searchKeys":["transformIssues","open fun transformIssues(issues: List<Issue>): List<Issue>","io.gitlab.arturbosch.detekt.api.ReportingExtension.transformIssues"]},{"name":"open fun visit(root: KtFile)","description":"io.gitlab.arturbosch.detekt.api.Rule.visit","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/visit.html","searchKeys":["visit","open fun visit(root: KtFile)","io.gitlab.arturbosch.detekt.api.Rule.visit"]},{"name":"open operator override fun compareTo(other: Issue.Location): Int","description":"io.gitlab.arturbosch.detekt.api.Issue.Location.compareTo","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-location/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Issue.Location): Int","io.gitlab.arturbosch.detekt.api.Issue.Location.compareTo"]},{"name":"open operator override fun compareTo(other: SourceLocation): Int","description":"io.gitlab.arturbosch.detekt.api.SourceLocation.compareTo","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-source-location/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: SourceLocation): Int","io.gitlab.arturbosch.detekt.api.SourceLocation.compareTo"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.CodeSmell.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.Entity.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.Entity.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.Location.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.Location.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.ProjectMetric.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.Rule.Name.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/-name/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.Rule.Name.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.RuleSet.Id.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/-id/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.RuleSet.Id.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.SourceLocation.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-source-location/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.SourceLocation.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.TextLocation.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-text-location/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.TextLocation.toString"]},{"name":"open val isError: Boolean","description":"io.gitlab.arturbosch.detekt.api.Notification.isError","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/is-error.html","searchKeys":["isError","open val isError: Boolean","io.gitlab.arturbosch.detekt.api.Notification.isError"]},{"name":"open val priority: Int","description":"io.gitlab.arturbosch.detekt.api.Extension.priority","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-extension/priority.html","searchKeys":["priority","open val priority: Int","io.gitlab.arturbosch.detekt.api.Extension.priority"]},{"name":"open val ruleName: Rule.Name","description":"io.gitlab.arturbosch.detekt.api.Rule.ruleName","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/rule-name.html","searchKeys":["ruleName","open val ruleName: Rule.Name","io.gitlab.arturbosch.detekt.api.Rule.ruleName"]},{"name":"operator fun invoke(id: RuleSet.Id, rules: List<(Config) -> Rule>): RuleSet","description":"io.gitlab.arturbosch.detekt.api.RuleSet.Companion.invoke","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(id: RuleSet.Id, rules: List<(Config) -> Rule>): RuleSet","io.gitlab.arturbosch.detekt.api.RuleSet.Companion.invoke"]},{"name":"override val entity: Entity","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.entity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/entity.html","searchKeys":["entity","override val entity: Entity","io.gitlab.arturbosch.detekt.api.CodeSmell.entity"]},{"name":"override val message: String","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.message","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/message.html","searchKeys":["message","override val message: String","io.gitlab.arturbosch.detekt.api.CodeSmell.message"]},{"name":"override val references: List<Entity>","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.references","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/references.html","searchKeys":["references","override val references: List<Entity>","io.gitlab.arturbosch.detekt.api.CodeSmell.references"]},{"name":"override val suppressReasons: List<String>","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.suppressReasons","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/suppress-reasons.html","searchKeys":["suppressReasons","override val suppressReasons: List<String>","io.gitlab.arturbosch.detekt.api.CodeSmell.suppressReasons"]},{"name":"val Issue.suppressed: Boolean","description":"io.gitlab.arturbosch.detekt.api.suppressed","location":"detekt-api/io.gitlab.arturbosch.detekt.api/suppressed.html","searchKeys":["suppressed","val Issue.suppressed: Boolean","io.gitlab.arturbosch.detekt.api.suppressed"]},{"name":"val autoCorrect: Boolean","description":"io.gitlab.arturbosch.detekt.api.Rule.autoCorrect","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/auto-correct.html","searchKeys":["autoCorrect","val autoCorrect: Boolean","io.gitlab.arturbosch.detekt.api.Rule.autoCorrect"]},{"name":"val column: Int","description":"io.gitlab.arturbosch.detekt.api.SourceLocation.column","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-source-location/column.html","searchKeys":["column","val column: Int","io.gitlab.arturbosch.detekt.api.SourceLocation.column"]},{"name":"val config: Config","description":"io.gitlab.arturbosch.detekt.api.Rule.config","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/config.html","searchKeys":["config","val config: Config","io.gitlab.arturbosch.detekt.api.Rule.config"]},{"name":"val conversionFactor: Int","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.conversionFactor","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/conversion-factor.html","searchKeys":["conversionFactor","val conversionFactor: Int","io.gitlab.arturbosch.detekt.api.ProjectMetric.conversionFactor"]},{"name":"val dataFlowValueFactory: DataFlowValueFactory","description":"io.gitlab.arturbosch.detekt.api.CompilerResources.dataFlowValueFactory","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-compiler-resources/data-flow-value-factory.html","searchKeys":["dataFlowValueFactory","val dataFlowValueFactory: DataFlowValueFactory","io.gitlab.arturbosch.detekt.api.CompilerResources.dataFlowValueFactory"]},{"name":"val description: String","description":"io.gitlab.arturbosch.detekt.api.Configuration.description","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-configuration/description.html","searchKeys":["description","val description: String","io.gitlab.arturbosch.detekt.api.Configuration.description"]},{"name":"val description: String","description":"io.gitlab.arturbosch.detekt.api.Rule.description","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/description.html","searchKeys":["description","val description: String","io.gitlab.arturbosch.detekt.api.Rule.description"]},{"name":"val description: String","description":"io.gitlab.arturbosch.detekt.api.RuleInstance.description","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-instance/description.html","searchKeys":["description","val description: String","io.gitlab.arturbosch.detekt.api.RuleInstance.description"]},{"name":"val empty: Config","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.empty","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/empty.html","searchKeys":["empty","val empty: Config","io.gitlab.arturbosch.detekt.api.Config.Companion.empty"]},{"name":"val end: Int","description":"io.gitlab.arturbosch.detekt.api.TextLocation.end","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-text-location/end.html","searchKeys":["end","val end: Int","io.gitlab.arturbosch.detekt.api.TextLocation.end"]},{"name":"val endSource: SourceLocation","description":"io.gitlab.arturbosch.detekt.api.Issue.Location.endSource","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-location/end-source.html","searchKeys":["endSource","val endSource: SourceLocation","io.gitlab.arturbosch.detekt.api.Issue.Location.endSource"]},{"name":"val endSource: SourceLocation","description":"io.gitlab.arturbosch.detekt.api.Location.endSource","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/end-source.html","searchKeys":["endSource","val endSource: SourceLocation","io.gitlab.arturbosch.detekt.api.Location.endSource"]},{"name":"val entity: Issue.Entity","description":"io.gitlab.arturbosch.detekt.api.Issue.entity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/entity.html","searchKeys":["entity","val entity: Issue.Entity","io.gitlab.arturbosch.detekt.api.Issue.entity"]},{"name":"val entries: EnumEntries<Notification.Level>","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.entries","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/entries.html","searchKeys":["entries","val entries: EnumEntries<Notification.Level>","io.gitlab.arturbosch.detekt.api.Notification.Level.entries"]},{"name":"val entries: EnumEntries<Severity>","description":"io.gitlab.arturbosch.detekt.api.Severity.entries","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/entries.html","searchKeys":["entries","val entries: EnumEntries<Severity>","io.gitlab.arturbosch.detekt.api.Severity.entries"]},{"name":"val id: RuleSet.Id","description":"io.gitlab.arturbosch.detekt.api.RuleSet.id","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/id.html","searchKeys":["id","val id: RuleSet.Id","io.gitlab.arturbosch.detekt.api.RuleSet.id"]},{"name":"val id: String","description":"io.gitlab.arturbosch.detekt.api.RuleInstance.id","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-instance/id.html","searchKeys":["id","val id: String","io.gitlab.arturbosch.detekt.api.RuleInstance.id"]},{"name":"val isDouble: Boolean = false","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.isDouble","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/is-double.html","searchKeys":["isDouble","val isDouble: Boolean = false","io.gitlab.arturbosch.detekt.api.ProjectMetric.isDouble"]},{"name":"val ktElement: KtElement","description":"io.gitlab.arturbosch.detekt.api.Entity.ktElement","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/kt-element.html","searchKeys":["ktElement","val ktElement: KtElement","io.gitlab.arturbosch.detekt.api.Entity.ktElement"]},{"name":"val languageVersionSettings: LanguageVersionSettings","description":"io.gitlab.arturbosch.detekt.api.CompilerResources.languageVersionSettings","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-compiler-resources/language-version-settings.html","searchKeys":["languageVersionSettings","val languageVersionSettings: LanguageVersionSettings","io.gitlab.arturbosch.detekt.api.CompilerResources.languageVersionSettings"]},{"name":"val line: Int","description":"io.gitlab.arturbosch.detekt.api.SourceLocation.line","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-source-location/line.html","searchKeys":["line","val line: Int","io.gitlab.arturbosch.detekt.api.SourceLocation.line"]},{"name":"val location: Issue.Location","description":"io.gitlab.arturbosch.detekt.api.Issue.Entity.location","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-entity/location.html","searchKeys":["location","val location: Issue.Location","io.gitlab.arturbosch.detekt.api.Issue.Entity.location"]},{"name":"val location: Issue.Location","description":"io.gitlab.arturbosch.detekt.api.Issue.location","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/location.html","searchKeys":["location","val location: Issue.Location","io.gitlab.arturbosch.detekt.api.Issue.location"]},{"name":"val location: Location","description":"io.gitlab.arturbosch.detekt.api.Entity.location","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/location.html","searchKeys":["location","val location: Location","io.gitlab.arturbosch.detekt.api.Entity.location"]},{"name":"val message: String","description":"io.gitlab.arturbosch.detekt.api.Issue.message","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/message.html","searchKeys":["message","val message: String","io.gitlab.arturbosch.detekt.api.Issue.message"]},{"name":"val name: Rule.Name","description":"io.gitlab.arturbosch.detekt.api.RuleInstance.name","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-instance/name.html","searchKeys":["name","val name: Rule.Name","io.gitlab.arturbosch.detekt.api.RuleInstance.name"]},{"name":"val path: Path","description":"io.gitlab.arturbosch.detekt.api.Issue.Location.path","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-location/path.html","searchKeys":["path","val path: Path","io.gitlab.arturbosch.detekt.api.Issue.Location.path"]},{"name":"val path: Path","description":"io.gitlab.arturbosch.detekt.api.Location.path","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/path.html","searchKeys":["path","val path: Path","io.gitlab.arturbosch.detekt.api.Location.path"]},{"name":"val priority: Int","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.priority","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/priority.html","searchKeys":["priority","val priority: Int","io.gitlab.arturbosch.detekt.api.ProjectMetric.priority"]},{"name":"val reason: String? = null","description":"io.gitlab.arturbosch.detekt.api.ValueWithReason.reason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-value-with-reason/reason.html","searchKeys":["reason","val reason: String? = null","io.gitlab.arturbosch.detekt.api.ValueWithReason.reason"]},{"name":"val references: List<Issue.Entity>","description":"io.gitlab.arturbosch.detekt.api.Issue.references","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/references.html","searchKeys":["references","val references: List<Issue.Entity>","io.gitlab.arturbosch.detekt.api.Issue.references"]},{"name":"val ruleInstance: RuleInstance","description":"io.gitlab.arturbosch.detekt.api.Issue.ruleInstance","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/rule-instance.html","searchKeys":["ruleInstance","val ruleInstance: RuleInstance","io.gitlab.arturbosch.detekt.api.Issue.ruleInstance"]},{"name":"val ruleSetId: RuleSet.Id","description":"io.gitlab.arturbosch.detekt.api.RuleInstance.ruleSetId","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-instance/rule-set-id.html","searchKeys":["ruleSetId","val ruleSetId: RuleSet.Id","io.gitlab.arturbosch.detekt.api.RuleInstance.ruleSetId"]},{"name":"val rules: Map<Rule.Name, (Config) -> Rule>","description":"io.gitlab.arturbosch.detekt.api.RuleSet.rules","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/rules.html","searchKeys":["rules","val rules: Map<Rule.Name, (Config) -> Rule>","io.gitlab.arturbosch.detekt.api.RuleSet.rules"]},{"name":"val severity: Severity","description":"io.gitlab.arturbosch.detekt.api.Issue.severity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/severity.html","searchKeys":["severity","val severity: Severity","io.gitlab.arturbosch.detekt.api.Issue.severity"]},{"name":"val signature: String","description":"io.gitlab.arturbosch.detekt.api.Entity.signature","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/signature.html","searchKeys":["signature","val signature: String","io.gitlab.arturbosch.detekt.api.Entity.signature"]},{"name":"val signature: String","description":"io.gitlab.arturbosch.detekt.api.Issue.Entity.signature","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-entity/signature.html","searchKeys":["signature","val signature: String","io.gitlab.arturbosch.detekt.api.Issue.Entity.signature"]},{"name":"val since: String","description":"io.gitlab.arturbosch.detekt.api.ActiveByDefault.since","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-active-by-default/since.html","searchKeys":["since","val since: String","io.gitlab.arturbosch.detekt.api.ActiveByDefault.since"]},{"name":"val since: String","description":"io.gitlab.arturbosch.detekt.api.internal.AutoCorrectable.since","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-auto-correctable/since.html","searchKeys":["since","val since: String","io.gitlab.arturbosch.detekt.api.internal.AutoCorrectable.since"]},{"name":"val source: SourceLocation","description":"io.gitlab.arturbosch.detekt.api.Issue.Location.source","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-location/source.html","searchKeys":["source","val source: SourceLocation","io.gitlab.arturbosch.detekt.api.Issue.Location.source"]},{"name":"val source: SourceLocation","description":"io.gitlab.arturbosch.detekt.api.Location.source","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/source.html","searchKeys":["source","val source: SourceLocation","io.gitlab.arturbosch.detekt.api.Location.source"]},{"name":"val start: Int","description":"io.gitlab.arturbosch.detekt.api.TextLocation.start","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-text-location/start.html","searchKeys":["start","val start: Int","io.gitlab.arturbosch.detekt.api.TextLocation.start"]},{"name":"val suppressReasons: List<String>","description":"io.gitlab.arturbosch.detekt.api.Issue.suppressReasons","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/suppress-reasons.html","searchKeys":["suppressReasons","val suppressReasons: List<String>","io.gitlab.arturbosch.detekt.api.Issue.suppressReasons"]},{"name":"val text: TextLocation","description":"io.gitlab.arturbosch.detekt.api.Issue.Location.text","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-location/text.html","searchKeys":["text","val text: TextLocation","io.gitlab.arturbosch.detekt.api.Issue.Location.text"]},{"name":"val text: TextLocation","description":"io.gitlab.arturbosch.detekt.api.Location.text","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/text.html","searchKeys":["text","val text: TextLocation","io.gitlab.arturbosch.detekt.api.Location.text"]},{"name":"val type: String","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.type","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/type.html","searchKeys":["type","val type: String","io.gitlab.arturbosch.detekt.api.ProjectMetric.type"]},{"name":"val value: Int","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.value","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/value.html","searchKeys":["value","val value: Int","io.gitlab.arturbosch.detekt.api.ProjectMetric.value"]},{"name":"val value: String","description":"io.gitlab.arturbosch.detekt.api.Rule.Name.value","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/-name/value.html","searchKeys":["value","val value: String","io.gitlab.arturbosch.detekt.api.Rule.Name.value"]},{"name":"val value: String","description":"io.gitlab.arturbosch.detekt.api.RuleSet.Id.value","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/-id/value.html","searchKeys":["value","val value: String","io.gitlab.arturbosch.detekt.api.RuleSet.Id.value"]},{"name":"val value: String","description":"io.gitlab.arturbosch.detekt.api.ValueWithReason.value","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-value-with-reason/value.html","searchKeys":["value","val value: String","io.gitlab.arturbosch.detekt.api.ValueWithReason.value"]},{"name":"val values: Array<out String>","description":"io.gitlab.arturbosch.detekt.api.Alias.values","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-alias/values.html","searchKeys":["values","val values: Array<out String>","io.gitlab.arturbosch.detekt.api.Alias.values"]},{"name":"var KtFile.modifiedText: String?","description":"io.gitlab.arturbosch.detekt.api.modifiedText","location":"detekt-api/io.gitlab.arturbosch.detekt.api/modified-text.html","searchKeys":["modifiedText","var KtFile.modifiedText: String?","io.gitlab.arturbosch.detekt.api.modifiedText"]},{"name":"var bindingContext: BindingContext","description":"io.gitlab.arturbosch.detekt.api.Rule.bindingContext","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/binding-context.html","searchKeys":["bindingContext","var bindingContext: BindingContext","io.gitlab.arturbosch.detekt.api.Rule.bindingContext"]},{"name":"annotation class KotlinCoreEnvironmentTest(val additionalJavaSourcePaths: Array<String> = [])","description":"io.gitlab.arturbosch.detekt.rules.KotlinCoreEnvironmentTest","location":"detekt-test-utils/io.gitlab.arturbosch.detekt.rules/-kotlin-core-environment-test/index.html","searchKeys":["KotlinCoreEnvironmentTest","annotation class KotlinCoreEnvironmentTest(val additionalJavaSourcePaths: Array<String> = [])","io.gitlab.arturbosch.detekt.rules.KotlinCoreEnvironmentTest"]},{"name":"class FakeKtElement(psiFile: PsiFile = FakePsiFile(\"\")) : KtElement","description":"io.github.detekt.test.utils.internal.FakeKtElement","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/index.html","searchKeys":["FakeKtElement","class FakeKtElement(psiFile: PsiFile = FakePsiFile(\"\")) : KtElement","io.github.detekt.test.utils.internal.FakeKtElement"]},{"name":"class FakePsiFile(text: String = \"\", name: String = \"\") : PsiFile","description":"io.github.detekt.test.utils.internal.FakePsiFile","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/index.html","searchKeys":["FakePsiFile","class FakePsiFile(text: String = \"\", name: String = \"\") : PsiFile","io.github.detekt.test.utils.internal.FakePsiFile"]},{"name":"class KotlinCoreEnvironmentWrapper(environment: KotlinCoreEnvironment?, disposable: Disposable)","description":"io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-core-environment-wrapper/index.html","searchKeys":["KotlinCoreEnvironmentWrapper","class KotlinCoreEnvironmentWrapper(environment: KotlinCoreEnvironment?, disposable: Disposable)","io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper"]},{"name":"class NullPrintStream : PrintStream","description":"io.github.detekt.test.utils.NullPrintStream","location":"detekt-test-utils/io.github.detekt.test.utils/-null-print-stream/index.html","searchKeys":["NullPrintStream","class NullPrintStream : PrintStream","io.github.detekt.test.utils.NullPrintStream"]},{"name":"class StringPrintStream : PrintStream","description":"io.github.detekt.test.utils.StringPrintStream","location":"detekt-test-utils/io.github.detekt.test.utils/-string-print-stream/index.html","searchKeys":["StringPrintStream","class StringPrintStream : PrintStream","io.github.detekt.test.utils.StringPrintStream"]},{"name":"constructor()","description":"io.github.detekt.test.utils.NullPrintStream.NullPrintStream","location":"detekt-test-utils/io.github.detekt.test.utils/-null-print-stream/-null-print-stream.html","searchKeys":["NullPrintStream","constructor()","io.github.detekt.test.utils.NullPrintStream.NullPrintStream"]},{"name":"constructor()","description":"io.github.detekt.test.utils.StringPrintStream.StringPrintStream","location":"detekt-test-utils/io.github.detekt.test.utils/-string-print-stream/-string-print-stream.html","searchKeys":["StringPrintStream","constructor()","io.github.detekt.test.utils.StringPrintStream.StringPrintStream"]},{"name":"constructor(environment: KotlinCoreEnvironment?, disposable: Disposable)","description":"io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.KotlinCoreEnvironmentWrapper","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-core-environment-wrapper/-kotlin-core-environment-wrapper.html","searchKeys":["KotlinCoreEnvironmentWrapper","constructor(environment: KotlinCoreEnvironment?, disposable: Disposable)","io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.KotlinCoreEnvironmentWrapper"]},{"name":"constructor(psiFile: PsiFile = FakePsiFile(\"\"))","description":"io.github.detekt.test.utils.internal.FakeKtElement.FakeKtElement","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/-fake-kt-element.html","searchKeys":["FakeKtElement","constructor(psiFile: PsiFile = FakePsiFile(\"\"))","io.github.detekt.test.utils.internal.FakeKtElement.FakeKtElement"]},{"name":"constructor(text: String = \"\", name: String = \"\")","description":"io.github.detekt.test.utils.internal.FakePsiFile.FakePsiFile","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/-fake-psi-file.html","searchKeys":["FakePsiFile","constructor(text: String = \"\", name: String = \"\")","io.github.detekt.test.utils.internal.FakePsiFile.FakePsiFile"]},{"name":"fun compile(code: String)","description":"io.github.detekt.test.utils.KotlinScriptEngine.compile","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-script-engine/compile.html","searchKeys":["compile","fun compile(code: String)","io.github.detekt.test.utils.KotlinScriptEngine.compile"]},{"name":"fun compileContentForTest(content: String, filename: String): KtFile","description":"io.github.detekt.test.utils.compileContentForTest","location":"detekt-test-utils/io.github.detekt.test.utils/compile-content-for-test.html","searchKeys":["compileContentForTest","fun compileContentForTest(content: String, filename: String): KtFile","io.github.detekt.test.utils.compileContentForTest"]},{"name":"fun compileContentForTest(content: String, path: Path = Path(\"/\").absolute().resolve(\"Test.kt\")): KtFile","description":"io.github.detekt.test.utils.compileContentForTest","location":"detekt-test-utils/io.github.detekt.test.utils/compile-content-for-test.html","searchKeys":["compileContentForTest","fun compileContentForTest(content: String, path: Path = Path(\"/\").absolute().resolve(\"Test.kt\")): KtFile","io.github.detekt.test.utils.compileContentForTest"]},{"name":"fun compileForTest(path: Path): KtFile","description":"io.github.detekt.test.utils.compileForTest","location":"detekt-test-utils/io.github.detekt.test.utils/compile-for-test.html","searchKeys":["compileForTest","fun compileForTest(path: Path): KtFile","io.github.detekt.test.utils.compileForTest"]},{"name":"fun createEnvironment(additionalRootPaths: List<File> = emptyList(), additionalJavaSourceRootPaths: List<File> = emptyList()): KotlinCoreEnvironmentWrapper","description":"io.github.detekt.test.utils.createEnvironment","location":"detekt-test-utils/io.github.detekt.test.utils/create-environment.html","searchKeys":["createEnvironment","fun createEnvironment(additionalRootPaths: List<File> = emptyList(), additionalJavaSourceRootPaths: List<File> = emptyList()): KotlinCoreEnvironmentWrapper","io.github.detekt.test.utils.createEnvironment"]},{"name":"fun createTempDirectoryForTest(prefix: String): Path","description":"io.github.detekt.test.utils.createTempDirectoryForTest","location":"detekt-test-utils/io.github.detekt.test.utils/create-temp-directory-for-test.html","searchKeys":["createTempDirectoryForTest","fun createTempDirectoryForTest(prefix: String): Path","io.github.detekt.test.utils.createTempDirectoryForTest"]},{"name":"fun createTempFileForTest(prefix: String, suffix: String): Path","description":"io.github.detekt.test.utils.createTempFileForTest","location":"detekt-test-utils/io.github.detekt.test.utils/create-temp-file-for-test.html","searchKeys":["createTempFileForTest","fun createTempFileForTest(prefix: String, suffix: String): Path","io.github.detekt.test.utils.createTempFileForTest"]},{"name":"fun dispose()","description":"io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.dispose","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-core-environment-wrapper/dispose.html","searchKeys":["dispose","fun dispose()","io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.dispose"]},{"name":"fun readResourceContent(name: String): String","description":"io.github.detekt.test.utils.readResourceContent","location":"detekt-test-utils/io.github.detekt.test.utils/read-resource-content.html","searchKeys":["readResourceContent","fun readResourceContent(name: String): String","io.github.detekt.test.utils.readResourceContent"]},{"name":"fun resource(name: String): URI","description":"io.github.detekt.test.utils.resource","location":"detekt-test-utils/io.github.detekt.test.utils/resource.html","searchKeys":["resource","fun resource(name: String): URI","io.github.detekt.test.utils.resource"]},{"name":"fun resourceAsPath(name: String): Path","description":"io.github.detekt.test.utils.resourceAsPath","location":"detekt-test-utils/io.github.detekt.test.utils/resource-as-path.html","searchKeys":["resourceAsPath","fun resourceAsPath(name: String): Path","io.github.detekt.test.utils.resourceAsPath"]},{"name":"fun resourceUrl(name: String): URL","description":"io.github.detekt.test.utils.resourceUrl","location":"detekt-test-utils/io.github.detekt.test.utils/resource-url.html","searchKeys":["resourceUrl","fun resourceUrl(name: String): URL","io.github.detekt.test.utils.resourceUrl"]},{"name":"object KotlinScriptEngine","description":"io.github.detekt.test.utils.KotlinScriptEngine","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-script-engine/index.html","searchKeys":["KotlinScriptEngine","object KotlinScriptEngine","io.github.detekt.test.utils.KotlinScriptEngine"]},{"name":"open override fun <D> acceptChildren(visitor: KtVisitor<Void, D>, data: D)","description":"io.github.detekt.test.utils.internal.FakeKtElement.acceptChildren","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/accept-children.html","searchKeys":["acceptChildren","open override fun <D> acceptChildren(visitor: KtVisitor<Void, D>, data: D)","io.github.detekt.test.utils.internal.FakeKtElement.acceptChildren"]},{"name":"open override fun <R, D> accept(visitor: KtVisitor<R, D>, data: D): R","description":"io.github.detekt.test.utils.internal.FakeKtElement.accept","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/accept.html","searchKeys":["accept","open override fun <R, D> accept(visitor: KtVisitor<R, D>, data: D): R","io.github.detekt.test.utils.internal.FakeKtElement.accept"]},{"name":"open override fun <T> getCopyableUserData(p0: Key<T>): T?","description":"io.github.detekt.test.utils.internal.FakeKtElement.getCopyableUserData","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-copyable-user-data.html","searchKeys":["getCopyableUserData","open override fun <T> getCopyableUserData(p0: Key<T>): T?","io.github.detekt.test.utils.internal.FakeKtElement.getCopyableUserData"]},{"name":"open override fun <T> getCopyableUserData(p0: Key<T>): T?","description":"io.github.detekt.test.utils.internal.FakePsiFile.getCopyableUserData","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-copyable-user-data.html","searchKeys":["getCopyableUserData","open override fun <T> getCopyableUserData(p0: Key<T>): T?","io.github.detekt.test.utils.internal.FakePsiFile.getCopyableUserData"]},{"name":"open override fun <T> getUserData(p0: Key<T>): T?","description":"io.github.detekt.test.utils.internal.FakeKtElement.getUserData","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-user-data.html","searchKeys":["getUserData","open override fun <T> getUserData(p0: Key<T>): T?","io.github.detekt.test.utils.internal.FakeKtElement.getUserData"]},{"name":"open override fun <T> getUserData(p0: Key<T>): T?","description":"io.github.detekt.test.utils.internal.FakePsiFile.getUserData","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-user-data.html","searchKeys":["getUserData","open override fun <T> getUserData(p0: Key<T>): T?","io.github.detekt.test.utils.internal.FakePsiFile.getUserData"]},{"name":"open override fun <T> putCopyableUserData(p0: Key<T>, p1: T?)","description":"io.github.detekt.test.utils.internal.FakeKtElement.putCopyableUserData","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/put-copyable-user-data.html","searchKeys":["putCopyableUserData","open override fun <T> putCopyableUserData(p0: Key<T>, p1: T?)","io.github.detekt.test.utils.internal.FakeKtElement.putCopyableUserData"]},{"name":"open override fun <T> putCopyableUserData(p0: Key<T>, p1: T?)","description":"io.github.detekt.test.utils.internal.FakePsiFile.putCopyableUserData","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/put-copyable-user-data.html","searchKeys":["putCopyableUserData","open override fun <T> putCopyableUserData(p0: Key<T>, p1: T?)","io.github.detekt.test.utils.internal.FakePsiFile.putCopyableUserData"]},{"name":"open override fun <T> putUserData(p0: Key<T>, p1: T?)","description":"io.github.detekt.test.utils.internal.FakeKtElement.putUserData","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/put-user-data.html","searchKeys":["putUserData","open override fun <T> putUserData(p0: Key<T>, p1: T?)","io.github.detekt.test.utils.internal.FakeKtElement.putUserData"]},{"name":"open override fun <T> putUserData(p0: Key<T>, p1: T?)","description":"io.github.detekt.test.utils.internal.FakePsiFile.putUserData","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/put-user-data.html","searchKeys":["putUserData","open override fun <T> putUserData(p0: Key<T>, p1: T?)","io.github.detekt.test.utils.internal.FakePsiFile.putUserData"]},{"name":"open override fun accept(p0: PsiElementVisitor)","description":"io.github.detekt.test.utils.internal.FakeKtElement.accept","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/accept.html","searchKeys":["accept","open override fun accept(p0: PsiElementVisitor)","io.github.detekt.test.utils.internal.FakeKtElement.accept"]},{"name":"open override fun accept(p0: PsiElementVisitor)","description":"io.github.detekt.test.utils.internal.FakePsiFile.accept","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/accept.html","searchKeys":["accept","open override fun accept(p0: PsiElementVisitor)","io.github.detekt.test.utils.internal.FakePsiFile.accept"]},{"name":"open override fun acceptChildren(p0: PsiElementVisitor)","description":"io.github.detekt.test.utils.internal.FakeKtElement.acceptChildren","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/accept-children.html","searchKeys":["acceptChildren","open override fun acceptChildren(p0: PsiElementVisitor)","io.github.detekt.test.utils.internal.FakeKtElement.acceptChildren"]},{"name":"open override fun acceptChildren(p0: PsiElementVisitor)","description":"io.github.detekt.test.utils.internal.FakePsiFile.acceptChildren","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/accept-children.html","searchKeys":["acceptChildren","open override fun acceptChildren(p0: PsiElementVisitor)","io.github.detekt.test.utils.internal.FakePsiFile.acceptChildren"]},{"name":"open override fun add(p0: PsiElement): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.add","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/add.html","searchKeys":["add","open override fun add(p0: PsiElement): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.add"]},{"name":"open override fun add(p0: PsiElement): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.add","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/add.html","searchKeys":["add","open override fun add(p0: PsiElement): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.add"]},{"name":"open override fun addAfter(p0: PsiElement, p1: PsiElement?): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.addAfter","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/add-after.html","searchKeys":["addAfter","open override fun addAfter(p0: PsiElement, p1: PsiElement?): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.addAfter"]},{"name":"open override fun addAfter(p0: PsiElement, p1: PsiElement?): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.addAfter","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/add-after.html","searchKeys":["addAfter","open override fun addAfter(p0: PsiElement, p1: PsiElement?): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.addAfter"]},{"name":"open override fun addBefore(p0: PsiElement, p1: PsiElement?): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.addBefore","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/add-before.html","searchKeys":["addBefore","open override fun addBefore(p0: PsiElement, p1: PsiElement?): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.addBefore"]},{"name":"open override fun addBefore(p0: PsiElement, p1: PsiElement?): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.addBefore","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/add-before.html","searchKeys":["addBefore","open override fun addBefore(p0: PsiElement, p1: PsiElement?): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.addBefore"]},{"name":"open override fun addRange(p0: PsiElement?, p1: PsiElement?): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.addRange","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/add-range.html","searchKeys":["addRange","open override fun addRange(p0: PsiElement?, p1: PsiElement?): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.addRange"]},{"name":"open override fun addRange(p0: PsiElement?, p1: PsiElement?): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.addRange","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/add-range.html","searchKeys":["addRange","open override fun addRange(p0: PsiElement?, p1: PsiElement?): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.addRange"]},{"name":"open override fun addRangeAfter(p0: PsiElement?, p1: PsiElement?, p2: PsiElement?): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.addRangeAfter","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/add-range-after.html","searchKeys":["addRangeAfter","open override fun addRangeAfter(p0: PsiElement?, p1: PsiElement?, p2: PsiElement?): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.addRangeAfter"]},{"name":"open override fun addRangeAfter(p0: PsiElement?, p1: PsiElement?, p2: PsiElement?): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.addRangeAfter","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/add-range-after.html","searchKeys":["addRangeAfter","open override fun addRangeAfter(p0: PsiElement?, p1: PsiElement?, p2: PsiElement?): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.addRangeAfter"]},{"name":"open override fun addRangeBefore(p0: PsiElement, p1: PsiElement, p2: PsiElement?): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.addRangeBefore","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/add-range-before.html","searchKeys":["addRangeBefore","open override fun addRangeBefore(p0: PsiElement, p1: PsiElement, p2: PsiElement?): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.addRangeBefore"]},{"name":"open override fun addRangeBefore(p0: PsiElement, p1: PsiElement, p2: PsiElement?): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.addRangeBefore","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/add-range-before.html","searchKeys":["addRangeBefore","open override fun addRangeBefore(p0: PsiElement, p1: PsiElement, p2: PsiElement?): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.addRangeBefore"]},{"name":"open override fun canNavigate(): Boolean","description":"io.github.detekt.test.utils.internal.FakeKtElement.canNavigate","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/can-navigate.html","searchKeys":["canNavigate","open override fun canNavigate(): Boolean","io.github.detekt.test.utils.internal.FakeKtElement.canNavigate"]},{"name":"open override fun canNavigate(): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.canNavigate","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/can-navigate.html","searchKeys":["canNavigate","open override fun canNavigate(): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.canNavigate"]},{"name":"open override fun canNavigateToSource(): Boolean","description":"io.github.detekt.test.utils.internal.FakeKtElement.canNavigateToSource","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/can-navigate-to-source.html","searchKeys":["canNavigateToSource","open override fun canNavigateToSource(): Boolean","io.github.detekt.test.utils.internal.FakeKtElement.canNavigateToSource"]},{"name":"open override fun canNavigateToSource(): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.canNavigateToSource","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/can-navigate-to-source.html","searchKeys":["canNavigateToSource","open override fun canNavigateToSource(): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.canNavigateToSource"]},{"name":"open override fun checkAdd(p0: PsiElement)","description":"io.github.detekt.test.utils.internal.FakeKtElement.checkAdd","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/check-add.html","searchKeys":["checkAdd","open override fun checkAdd(p0: PsiElement)","io.github.detekt.test.utils.internal.FakeKtElement.checkAdd"]},{"name":"open override fun checkAdd(p0: PsiElement)","description":"io.github.detekt.test.utils.internal.FakePsiFile.checkAdd","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/check-add.html","searchKeys":["checkAdd","open override fun checkAdd(p0: PsiElement)","io.github.detekt.test.utils.internal.FakePsiFile.checkAdd"]},{"name":"open override fun checkDelete()","description":"io.github.detekt.test.utils.internal.FakeKtElement.checkDelete","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/check-delete.html","searchKeys":["checkDelete","open override fun checkDelete()","io.github.detekt.test.utils.internal.FakeKtElement.checkDelete"]},{"name":"open override fun checkDelete()","description":"io.github.detekt.test.utils.internal.FakePsiFile.checkDelete","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/check-delete.html","searchKeys":["checkDelete","open override fun checkDelete()","io.github.detekt.test.utils.internal.FakePsiFile.checkDelete"]},{"name":"open override fun checkSetName(p0: String?)","description":"io.github.detekt.test.utils.internal.FakePsiFile.checkSetName","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/check-set-name.html","searchKeys":["checkSetName","open override fun checkSetName(p0: String?)","io.github.detekt.test.utils.internal.FakePsiFile.checkSetName"]},{"name":"open override fun copy(): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.copy","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/copy.html","searchKeys":["copy","open override fun copy(): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.copy"]},{"name":"open override fun copy(): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.copy","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/copy.html","searchKeys":["copy","open override fun copy(): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.copy"]},{"name":"open override fun delete()","description":"io.github.detekt.test.utils.internal.FakeKtElement.delete","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/delete.html","searchKeys":["delete","open override fun delete()","io.github.detekt.test.utils.internal.FakeKtElement.delete"]},{"name":"open override fun delete()","description":"io.github.detekt.test.utils.internal.FakePsiFile.delete","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/delete.html","searchKeys":["delete","open override fun delete()","io.github.detekt.test.utils.internal.FakePsiFile.delete"]},{"name":"open override fun deleteChildRange(p0: PsiElement?, p1: PsiElement?)","description":"io.github.detekt.test.utils.internal.FakeKtElement.deleteChildRange","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/delete-child-range.html","searchKeys":["deleteChildRange","open override fun deleteChildRange(p0: PsiElement?, p1: PsiElement?)","io.github.detekt.test.utils.internal.FakeKtElement.deleteChildRange"]},{"name":"open override fun deleteChildRange(p0: PsiElement?, p1: PsiElement?)","description":"io.github.detekt.test.utils.internal.FakePsiFile.deleteChildRange","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/delete-child-range.html","searchKeys":["deleteChildRange","open override fun deleteChildRange(p0: PsiElement?, p1: PsiElement?)","io.github.detekt.test.utils.internal.FakePsiFile.deleteChildRange"]},{"name":"open override fun findElementAt(p0: Int): PsiElement?","description":"io.github.detekt.test.utils.internal.FakeKtElement.findElementAt","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/find-element-at.html","searchKeys":["findElementAt","open override fun findElementAt(p0: Int): PsiElement?","io.github.detekt.test.utils.internal.FakeKtElement.findElementAt"]},{"name":"open override fun findElementAt(p0: Int): PsiElement?","description":"io.github.detekt.test.utils.internal.FakePsiFile.findElementAt","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/find-element-at.html","searchKeys":["findElementAt","open override fun findElementAt(p0: Int): PsiElement?","io.github.detekt.test.utils.internal.FakePsiFile.findElementAt"]},{"name":"open override fun findReferenceAt(p0: Int): PsiReference?","description":"io.github.detekt.test.utils.internal.FakeKtElement.findReferenceAt","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/find-reference-at.html","searchKeys":["findReferenceAt","open override fun findReferenceAt(p0: Int): PsiReference?","io.github.detekt.test.utils.internal.FakeKtElement.findReferenceAt"]},{"name":"open override fun findReferenceAt(p0: Int): PsiReference?","description":"io.github.detekt.test.utils.internal.FakePsiFile.findReferenceAt","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/find-reference-at.html","searchKeys":["findReferenceAt","open override fun findReferenceAt(p0: Int): PsiReference?","io.github.detekt.test.utils.internal.FakePsiFile.findReferenceAt"]},{"name":"open override fun getChildren(): Array<PsiElement>","description":"io.github.detekt.test.utils.internal.FakeKtElement.getChildren","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-children.html","searchKeys":["getChildren","open override fun getChildren(): Array<PsiElement>","io.github.detekt.test.utils.internal.FakeKtElement.getChildren"]},{"name":"open override fun getChildren(): Array<PsiElement>","description":"io.github.detekt.test.utils.internal.FakePsiFile.getChildren","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-children.html","searchKeys":["getChildren","open override fun getChildren(): Array<PsiElement>","io.github.detekt.test.utils.internal.FakePsiFile.getChildren"]},{"name":"open override fun getContainingDirectory(): PsiDirectory","description":"io.github.detekt.test.utils.internal.FakePsiFile.getContainingDirectory","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-containing-directory.html","searchKeys":["getContainingDirectory","open override fun getContainingDirectory(): PsiDirectory","io.github.detekt.test.utils.internal.FakePsiFile.getContainingDirectory"]},{"name":"open override fun getContainingFile(): PsiFile","description":"io.github.detekt.test.utils.internal.FakeKtElement.getContainingFile","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-containing-file.html","searchKeys":["getContainingFile","open override fun getContainingFile(): PsiFile","io.github.detekt.test.utils.internal.FakeKtElement.getContainingFile"]},{"name":"open override fun getContainingFile(): PsiFile","description":"io.github.detekt.test.utils.internal.FakePsiFile.getContainingFile","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-containing-file.html","searchKeys":["getContainingFile","open override fun getContainingFile(): PsiFile","io.github.detekt.test.utils.internal.FakePsiFile.getContainingFile"]},{"name":"open override fun getContainingKtFile(): KtFile","description":"io.github.detekt.test.utils.internal.FakeKtElement.getContainingKtFile","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-containing-kt-file.html","searchKeys":["getContainingKtFile","open override fun getContainingKtFile(): KtFile","io.github.detekt.test.utils.internal.FakeKtElement.getContainingKtFile"]},{"name":"open override fun getContext(): PsiElement?","description":"io.github.detekt.test.utils.internal.FakeKtElement.getContext","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-context.html","searchKeys":["getContext","open override fun getContext(): PsiElement?","io.github.detekt.test.utils.internal.FakeKtElement.getContext"]},{"name":"open override fun getContext(): PsiElement?","description":"io.github.detekt.test.utils.internal.FakePsiFile.getContext","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-context.html","searchKeys":["getContext","open override fun getContext(): PsiElement?","io.github.detekt.test.utils.internal.FakePsiFile.getContext"]},{"name":"open override fun getFileType(): FileType","description":"io.github.detekt.test.utils.internal.FakePsiFile.getFileType","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-file-type.html","searchKeys":["getFileType","open override fun getFileType(): FileType","io.github.detekt.test.utils.internal.FakePsiFile.getFileType"]},{"name":"open override fun getFirstChild(): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.getFirstChild","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-first-child.html","searchKeys":["getFirstChild","open override fun getFirstChild(): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.getFirstChild"]},{"name":"open override fun getFirstChild(): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.getFirstChild","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-first-child.html","searchKeys":["getFirstChild","open override fun getFirstChild(): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.getFirstChild"]},{"name":"open override fun getIcon(p0: Int): Icon","description":"io.github.detekt.test.utils.internal.FakeKtElement.getIcon","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-icon.html","searchKeys":["getIcon","open override fun getIcon(p0: Int): Icon","io.github.detekt.test.utils.internal.FakeKtElement.getIcon"]},{"name":"open override fun getIcon(p0: Int): Icon","description":"io.github.detekt.test.utils.internal.FakePsiFile.getIcon","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-icon.html","searchKeys":["getIcon","open override fun getIcon(p0: Int): Icon","io.github.detekt.test.utils.internal.FakePsiFile.getIcon"]},{"name":"open override fun getLanguage(): Language","description":"io.github.detekt.test.utils.internal.FakeKtElement.getLanguage","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-language.html","searchKeys":["getLanguage","open override fun getLanguage(): Language","io.github.detekt.test.utils.internal.FakeKtElement.getLanguage"]},{"name":"open override fun getLanguage(): Language","description":"io.github.detekt.test.utils.internal.FakePsiFile.getLanguage","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-language.html","searchKeys":["getLanguage","open override fun getLanguage(): Language","io.github.detekt.test.utils.internal.FakePsiFile.getLanguage"]},{"name":"open override fun getLastChild(): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.getLastChild","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-last-child.html","searchKeys":["getLastChild","open override fun getLastChild(): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.getLastChild"]},{"name":"open override fun getLastChild(): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.getLastChild","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-last-child.html","searchKeys":["getLastChild","open override fun getLastChild(): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.getLastChild"]},{"name":"open override fun getManager(): PsiManager","description":"io.github.detekt.test.utils.internal.FakeKtElement.getManager","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-manager.html","searchKeys":["getManager","open override fun getManager(): PsiManager","io.github.detekt.test.utils.internal.FakeKtElement.getManager"]},{"name":"open override fun getManager(): PsiManager","description":"io.github.detekt.test.utils.internal.FakePsiFile.getManager","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-manager.html","searchKeys":["getManager","open override fun getManager(): PsiManager","io.github.detekt.test.utils.internal.FakePsiFile.getManager"]},{"name":"open override fun getModificationStamp(): Long","description":"io.github.detekt.test.utils.internal.FakePsiFile.getModificationStamp","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-modification-stamp.html","searchKeys":["getModificationStamp","open override fun getModificationStamp(): Long","io.github.detekt.test.utils.internal.FakePsiFile.getModificationStamp"]},{"name":"open override fun getName(): String","description":"io.github.detekt.test.utils.internal.FakePsiFile.getName","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-name.html","searchKeys":["getName","open override fun getName(): String","io.github.detekt.test.utils.internal.FakePsiFile.getName"]},{"name":"open override fun getName(): String?","description":"io.github.detekt.test.utils.internal.FakeKtElement.getName","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-name.html","searchKeys":["getName","open override fun getName(): String?","io.github.detekt.test.utils.internal.FakeKtElement.getName"]},{"name":"open override fun getNavigationElement(): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.getNavigationElement","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-navigation-element.html","searchKeys":["getNavigationElement","open override fun getNavigationElement(): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.getNavigationElement"]},{"name":"open override fun getNavigationElement(): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.getNavigationElement","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-navigation-element.html","searchKeys":["getNavigationElement","open override fun getNavigationElement(): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.getNavigationElement"]},{"name":"open override fun getNextSibling(): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.getNextSibling","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-next-sibling.html","searchKeys":["getNextSibling","open override fun getNextSibling(): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.getNextSibling"]},{"name":"open override fun getNextSibling(): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.getNextSibling","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-next-sibling.html","searchKeys":["getNextSibling","open override fun getNextSibling(): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.getNextSibling"]},{"name":"open override fun getNode(): ASTNode","description":"io.github.detekt.test.utils.internal.FakeKtElement.getNode","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-node.html","searchKeys":["getNode","open override fun getNode(): ASTNode","io.github.detekt.test.utils.internal.FakeKtElement.getNode"]},{"name":"open override fun getNode(): FileASTNode","description":"io.github.detekt.test.utils.internal.FakePsiFile.getNode","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-node.html","searchKeys":["getNode","open override fun getNode(): FileASTNode","io.github.detekt.test.utils.internal.FakePsiFile.getNode"]},{"name":"open override fun getOriginalElement(): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.getOriginalElement","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-original-element.html","searchKeys":["getOriginalElement","open override fun getOriginalElement(): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.getOriginalElement"]},{"name":"open override fun getOriginalElement(): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.getOriginalElement","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-original-element.html","searchKeys":["getOriginalElement","open override fun getOriginalElement(): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.getOriginalElement"]},{"name":"open override fun getOriginalFile(): PsiFile","description":"io.github.detekt.test.utils.internal.FakePsiFile.getOriginalFile","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-original-file.html","searchKeys":["getOriginalFile","open override fun getOriginalFile(): PsiFile","io.github.detekt.test.utils.internal.FakePsiFile.getOriginalFile"]},{"name":"open override fun getParent(): PsiDirectory?","description":"io.github.detekt.test.utils.internal.FakePsiFile.getParent","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-parent.html","searchKeys":["getParent","open override fun getParent(): PsiDirectory?","io.github.detekt.test.utils.internal.FakePsiFile.getParent"]},{"name":"open override fun getParent(): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.getParent","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-parent.html","searchKeys":["getParent","open override fun getParent(): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.getParent"]},{"name":"open override fun getPresentation(): ItemPresentation?","description":"io.github.detekt.test.utils.internal.FakeKtElement.getPresentation","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-presentation.html","searchKeys":["getPresentation","open override fun getPresentation(): ItemPresentation?","io.github.detekt.test.utils.internal.FakeKtElement.getPresentation"]},{"name":"open override fun getPresentation(): ItemPresentation?","description":"io.github.detekt.test.utils.internal.FakePsiFile.getPresentation","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-presentation.html","searchKeys":["getPresentation","open override fun getPresentation(): ItemPresentation?","io.github.detekt.test.utils.internal.FakePsiFile.getPresentation"]},{"name":"open override fun getPrevSibling(): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.getPrevSibling","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-prev-sibling.html","searchKeys":["getPrevSibling","open override fun getPrevSibling(): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.getPrevSibling"]},{"name":"open override fun getPrevSibling(): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.getPrevSibling","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-prev-sibling.html","searchKeys":["getPrevSibling","open override fun getPrevSibling(): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.getPrevSibling"]},{"name":"open override fun getProject(): Project","description":"io.github.detekt.test.utils.internal.FakeKtElement.getProject","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-project.html","searchKeys":["getProject","open override fun getProject(): Project","io.github.detekt.test.utils.internal.FakeKtElement.getProject"]},{"name":"open override fun getProject(): Project","description":"io.github.detekt.test.utils.internal.FakePsiFile.getProject","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-project.html","searchKeys":["getProject","open override fun getProject(): Project","io.github.detekt.test.utils.internal.FakePsiFile.getProject"]},{"name":"open override fun getPsiOrParent(): KtElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.getPsiOrParent","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-psi-or-parent.html","searchKeys":["getPsiOrParent","open override fun getPsiOrParent(): KtElement","io.github.detekt.test.utils.internal.FakeKtElement.getPsiOrParent"]},{"name":"open override fun getPsiRoots(): Array<PsiFile>","description":"io.github.detekt.test.utils.internal.FakePsiFile.getPsiRoots","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-psi-roots.html","searchKeys":["getPsiRoots","open override fun getPsiRoots(): Array<PsiFile>","io.github.detekt.test.utils.internal.FakePsiFile.getPsiRoots"]},{"name":"open override fun getReference(): PsiReference?","description":"io.github.detekt.test.utils.internal.FakeKtElement.getReference","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-reference.html","searchKeys":["getReference","open override fun getReference(): PsiReference?","io.github.detekt.test.utils.internal.FakeKtElement.getReference"]},{"name":"open override fun getReference(): PsiReference?","description":"io.github.detekt.test.utils.internal.FakePsiFile.getReference","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-reference.html","searchKeys":["getReference","open override fun getReference(): PsiReference?","io.github.detekt.test.utils.internal.FakePsiFile.getReference"]},{"name":"open override fun getReferences(): Array<PsiReference>","description":"io.github.detekt.test.utils.internal.FakeKtElement.getReferences","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-references.html","searchKeys":["getReferences","open override fun getReferences(): Array<PsiReference>","io.github.detekt.test.utils.internal.FakeKtElement.getReferences"]},{"name":"open override fun getReferences(): Array<PsiReference>","description":"io.github.detekt.test.utils.internal.FakePsiFile.getReferences","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-references.html","searchKeys":["getReferences","open override fun getReferences(): Array<PsiReference>","io.github.detekt.test.utils.internal.FakePsiFile.getReferences"]},{"name":"open override fun getResolveScope(): GlobalSearchScope","description":"io.github.detekt.test.utils.internal.FakeKtElement.getResolveScope","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-resolve-scope.html","searchKeys":["getResolveScope","open override fun getResolveScope(): GlobalSearchScope","io.github.detekt.test.utils.internal.FakeKtElement.getResolveScope"]},{"name":"open override fun getResolveScope(): GlobalSearchScope","description":"io.github.detekt.test.utils.internal.FakePsiFile.getResolveScope","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-resolve-scope.html","searchKeys":["getResolveScope","open override fun getResolveScope(): GlobalSearchScope","io.github.detekt.test.utils.internal.FakePsiFile.getResolveScope"]},{"name":"open override fun getStartOffsetInParent(): Int","description":"io.github.detekt.test.utils.internal.FakeKtElement.getStartOffsetInParent","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-start-offset-in-parent.html","searchKeys":["getStartOffsetInParent","open override fun getStartOffsetInParent(): Int","io.github.detekt.test.utils.internal.FakeKtElement.getStartOffsetInParent"]},{"name":"open override fun getStartOffsetInParent(): Int","description":"io.github.detekt.test.utils.internal.FakePsiFile.getStartOffsetInParent","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-start-offset-in-parent.html","searchKeys":["getStartOffsetInParent","open override fun getStartOffsetInParent(): Int","io.github.detekt.test.utils.internal.FakePsiFile.getStartOffsetInParent"]},{"name":"open override fun getText(): String","description":"io.github.detekt.test.utils.internal.FakeKtElement.getText","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-text.html","searchKeys":["getText","open override fun getText(): String","io.github.detekt.test.utils.internal.FakeKtElement.getText"]},{"name":"open override fun getText(): String","description":"io.github.detekt.test.utils.internal.FakePsiFile.getText","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-text.html","searchKeys":["getText","open override fun getText(): String","io.github.detekt.test.utils.internal.FakePsiFile.getText"]},{"name":"open override fun getTextLength(): Int","description":"io.github.detekt.test.utils.internal.FakeKtElement.getTextLength","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-text-length.html","searchKeys":["getTextLength","open override fun getTextLength(): Int","io.github.detekt.test.utils.internal.FakeKtElement.getTextLength"]},{"name":"open override fun getTextLength(): Int","description":"io.github.detekt.test.utils.internal.FakePsiFile.getTextLength","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-text-length.html","searchKeys":["getTextLength","open override fun getTextLength(): Int","io.github.detekt.test.utils.internal.FakePsiFile.getTextLength"]},{"name":"open override fun getTextOffset(): Int","description":"io.github.detekt.test.utils.internal.FakeKtElement.getTextOffset","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-text-offset.html","searchKeys":["getTextOffset","open override fun getTextOffset(): Int","io.github.detekt.test.utils.internal.FakeKtElement.getTextOffset"]},{"name":"open override fun getTextOffset(): Int","description":"io.github.detekt.test.utils.internal.FakePsiFile.getTextOffset","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-text-offset.html","searchKeys":["getTextOffset","open override fun getTextOffset(): Int","io.github.detekt.test.utils.internal.FakePsiFile.getTextOffset"]},{"name":"open override fun getTextRange(): TextRange","description":"io.github.detekt.test.utils.internal.FakeKtElement.getTextRange","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-text-range.html","searchKeys":["getTextRange","open override fun getTextRange(): TextRange","io.github.detekt.test.utils.internal.FakeKtElement.getTextRange"]},{"name":"open override fun getTextRange(): TextRange","description":"io.github.detekt.test.utils.internal.FakePsiFile.getTextRange","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-text-range.html","searchKeys":["getTextRange","open override fun getTextRange(): TextRange","io.github.detekt.test.utils.internal.FakePsiFile.getTextRange"]},{"name":"open override fun getUseScope(): SearchScope","description":"io.github.detekt.test.utils.internal.FakeKtElement.getUseScope","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/get-use-scope.html","searchKeys":["getUseScope","open override fun getUseScope(): SearchScope","io.github.detekt.test.utils.internal.FakeKtElement.getUseScope"]},{"name":"open override fun getUseScope(): SearchScope","description":"io.github.detekt.test.utils.internal.FakePsiFile.getUseScope","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-use-scope.html","searchKeys":["getUseScope","open override fun getUseScope(): SearchScope","io.github.detekt.test.utils.internal.FakePsiFile.getUseScope"]},{"name":"open override fun getViewProvider(): FileViewProvider","description":"io.github.detekt.test.utils.internal.FakePsiFile.getViewProvider","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-view-provider.html","searchKeys":["getViewProvider","open override fun getViewProvider(): FileViewProvider","io.github.detekt.test.utils.internal.FakePsiFile.getViewProvider"]},{"name":"open override fun getVirtualFile(): VirtualFile","description":"io.github.detekt.test.utils.internal.FakePsiFile.getVirtualFile","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/get-virtual-file.html","searchKeys":["getVirtualFile","open override fun getVirtualFile(): VirtualFile","io.github.detekt.test.utils.internal.FakePsiFile.getVirtualFile"]},{"name":"open override fun isDirectory(): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.isDirectory","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/is-directory.html","searchKeys":["isDirectory","open override fun isDirectory(): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.isDirectory"]},{"name":"open override fun isEquivalentTo(p0: PsiElement?): Boolean","description":"io.github.detekt.test.utils.internal.FakeKtElement.isEquivalentTo","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/is-equivalent-to.html","searchKeys":["isEquivalentTo","open override fun isEquivalentTo(p0: PsiElement?): Boolean","io.github.detekt.test.utils.internal.FakeKtElement.isEquivalentTo"]},{"name":"open override fun isEquivalentTo(p0: PsiElement?): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.isEquivalentTo","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/is-equivalent-to.html","searchKeys":["isEquivalentTo","open override fun isEquivalentTo(p0: PsiElement?): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.isEquivalentTo"]},{"name":"open override fun isPhysical(): Boolean","description":"io.github.detekt.test.utils.internal.FakeKtElement.isPhysical","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/is-physical.html","searchKeys":["isPhysical","open override fun isPhysical(): Boolean","io.github.detekt.test.utils.internal.FakeKtElement.isPhysical"]},{"name":"open override fun isPhysical(): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.isPhysical","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/is-physical.html","searchKeys":["isPhysical","open override fun isPhysical(): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.isPhysical"]},{"name":"open override fun isValid(): Boolean","description":"io.github.detekt.test.utils.internal.FakeKtElement.isValid","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/is-valid.html","searchKeys":["isValid","open override fun isValid(): Boolean","io.github.detekt.test.utils.internal.FakeKtElement.isValid"]},{"name":"open override fun isValid(): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.isValid","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/is-valid.html","searchKeys":["isValid","open override fun isValid(): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.isValid"]},{"name":"open override fun isWritable(): Boolean","description":"io.github.detekt.test.utils.internal.FakeKtElement.isWritable","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/is-writable.html","searchKeys":["isWritable","open override fun isWritable(): Boolean","io.github.detekt.test.utils.internal.FakeKtElement.isWritable"]},{"name":"open override fun isWritable(): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.isWritable","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/is-writable.html","searchKeys":["isWritable","open override fun isWritable(): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.isWritable"]},{"name":"open override fun navigate(p0: Boolean)","description":"io.github.detekt.test.utils.internal.FakeKtElement.navigate","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/navigate.html","searchKeys":["navigate","open override fun navigate(p0: Boolean)","io.github.detekt.test.utils.internal.FakeKtElement.navigate"]},{"name":"open override fun navigate(p0: Boolean)","description":"io.github.detekt.test.utils.internal.FakePsiFile.navigate","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/navigate.html","searchKeys":["navigate","open override fun navigate(p0: Boolean)","io.github.detekt.test.utils.internal.FakePsiFile.navigate"]},{"name":"open override fun processChildren(p0: PsiElementProcessor<in PsiFileSystemItem>): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.processChildren","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/process-children.html","searchKeys":["processChildren","open override fun processChildren(p0: PsiElementProcessor<in PsiFileSystemItem>): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.processChildren"]},{"name":"open override fun processDeclarations(p0: PsiScopeProcessor, p1: ResolveState, p2: PsiElement?, p3: PsiElement): Boolean","description":"io.github.detekt.test.utils.internal.FakeKtElement.processDeclarations","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/process-declarations.html","searchKeys":["processDeclarations","open override fun processDeclarations(p0: PsiScopeProcessor, p1: ResolveState, p2: PsiElement?, p3: PsiElement): Boolean","io.github.detekt.test.utils.internal.FakeKtElement.processDeclarations"]},{"name":"open override fun processDeclarations(p0: PsiScopeProcessor, p1: ResolveState, p2: PsiElement?, p3: PsiElement): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.processDeclarations","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/process-declarations.html","searchKeys":["processDeclarations","open override fun processDeclarations(p0: PsiScopeProcessor, p1: ResolveState, p2: PsiElement?, p3: PsiElement): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.processDeclarations"]},{"name":"open override fun replace(p0: PsiElement): PsiElement","description":"io.github.detekt.test.utils.internal.FakeKtElement.replace","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/replace.html","searchKeys":["replace","open override fun replace(p0: PsiElement): PsiElement","io.github.detekt.test.utils.internal.FakeKtElement.replace"]},{"name":"open override fun replace(p0: PsiElement): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.replace","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/replace.html","searchKeys":["replace","open override fun replace(p0: PsiElement): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.replace"]},{"name":"open override fun setName(p0: String): PsiElement","description":"io.github.detekt.test.utils.internal.FakePsiFile.setName","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/set-name.html","searchKeys":["setName","open override fun setName(p0: String): PsiElement","io.github.detekt.test.utils.internal.FakePsiFile.setName"]},{"name":"open override fun subtreeChanged()","description":"io.github.detekt.test.utils.internal.FakePsiFile.subtreeChanged","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/subtree-changed.html","searchKeys":["subtreeChanged","open override fun subtreeChanged()","io.github.detekt.test.utils.internal.FakePsiFile.subtreeChanged"]},{"name":"open override fun textContains(p0: Char): Boolean","description":"io.github.detekt.test.utils.internal.FakeKtElement.textContains","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/text-contains.html","searchKeys":["textContains","open override fun textContains(p0: Char): Boolean","io.github.detekt.test.utils.internal.FakeKtElement.textContains"]},{"name":"open override fun textContains(p0: Char): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.textContains","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/text-contains.html","searchKeys":["textContains","open override fun textContains(p0: Char): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.textContains"]},{"name":"open override fun textMatches(p0: CharSequence): Boolean","description":"io.github.detekt.test.utils.internal.FakeKtElement.textMatches","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/text-matches.html","searchKeys":["textMatches","open override fun textMatches(p0: CharSequence): Boolean","io.github.detekt.test.utils.internal.FakeKtElement.textMatches"]},{"name":"open override fun textMatches(p0: CharSequence): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.textMatches","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/text-matches.html","searchKeys":["textMatches","open override fun textMatches(p0: CharSequence): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.textMatches"]},{"name":"open override fun textMatches(p0: PsiElement): Boolean","description":"io.github.detekt.test.utils.internal.FakeKtElement.textMatches","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/text-matches.html","searchKeys":["textMatches","open override fun textMatches(p0: PsiElement): Boolean","io.github.detekt.test.utils.internal.FakeKtElement.textMatches"]},{"name":"open override fun textMatches(p0: PsiElement): Boolean","description":"io.github.detekt.test.utils.internal.FakePsiFile.textMatches","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/text-matches.html","searchKeys":["textMatches","open override fun textMatches(p0: PsiElement): Boolean","io.github.detekt.test.utils.internal.FakePsiFile.textMatches"]},{"name":"open override fun textToCharArray(): CharArray","description":"io.github.detekt.test.utils.internal.FakeKtElement.textToCharArray","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/text-to-char-array.html","searchKeys":["textToCharArray","open override fun textToCharArray(): CharArray","io.github.detekt.test.utils.internal.FakeKtElement.textToCharArray"]},{"name":"open override fun textToCharArray(): CharArray","description":"io.github.detekt.test.utils.internal.FakePsiFile.textToCharArray","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-psi-file/text-to-char-array.html","searchKeys":["textToCharArray","open override fun textToCharArray(): CharArray","io.github.detekt.test.utils.internal.FakePsiFile.textToCharArray"]},{"name":"open override fun toString(): String","description":"io.github.detekt.test.utils.StringPrintStream.toString","location":"detekt-test-utils/io.github.detekt.test.utils/-string-print-stream/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.detekt.test.utils.StringPrintStream.toString"]},{"name":"open override fun toString(): String","description":"io.github.detekt.test.utils.internal.FakeKtElement.toString","location":"detekt-test-utils/io.github.detekt.test.utils.internal/-fake-kt-element/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.detekt.test.utils.internal.FakeKtElement.toString"]},{"name":"val additionalJavaSourcePaths: Array<String>","description":"io.gitlab.arturbosch.detekt.rules.KotlinCoreEnvironmentTest.additionalJavaSourcePaths","location":"detekt-test-utils/io.gitlab.arturbosch.detekt.rules/-kotlin-core-environment-test/additional-java-source-paths.html","searchKeys":["additionalJavaSourcePaths","val additionalJavaSourcePaths: Array<String>","io.gitlab.arturbosch.detekt.rules.KotlinCoreEnvironmentTest.additionalJavaSourcePaths"]},{"name":"val env: KotlinCoreEnvironment","description":"io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.env","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-core-environment-wrapper/env.html","searchKeys":["env","val env: KotlinCoreEnvironment","io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.env"]},{"name":"abstract fun match(callableDescriptor: CallableDescriptor): Boolean","description":"io.github.detekt.psi.FunctionMatcher.match","location":"detekt-psi-utils/io.github.detekt.psi/-function-matcher/match.html","searchKeys":["match","abstract fun match(callableDescriptor: CallableDescriptor): Boolean","io.github.detekt.psi.FunctionMatcher.match"]},{"name":"abstract fun match(function: KtNamedFunction, bindingContext: BindingContext): Boolean","description":"io.github.detekt.psi.FunctionMatcher.match","location":"detekt-psi-utils/io.github.detekt.psi/-function-matcher/match.html","searchKeys":["match","abstract fun match(function: KtNamedFunction, bindingContext: BindingContext): Boolean","io.github.detekt.psi.FunctionMatcher.match"]},{"name":"class AnnotationExcluder(root: KtFile, excludes: List<Regex>, context: BindingContext)","description":"io.github.detekt.psi.AnnotationExcluder","location":"detekt-psi-utils/io.github.detekt.psi/-annotation-excluder/index.html","searchKeys":["AnnotationExcluder","class AnnotationExcluder(root: KtFile, excludes: List<Regex>, context: BindingContext)","io.github.detekt.psi.AnnotationExcluder"]},{"name":"class FullQualifiedNameGuesser","description":"io.github.detekt.psi.internal.FullQualifiedNameGuesser","location":"detekt-psi-utils/io.github.detekt.psi.internal/-full-qualified-name-guesser/index.html","searchKeys":["FullQualifiedNameGuesser","class FullQualifiedNameGuesser","io.github.detekt.psi.internal.FullQualifiedNameGuesser"]},{"name":"constructor(root: KtFile)","description":"io.github.detekt.psi.internal.FullQualifiedNameGuesser.FullQualifiedNameGuesser","location":"detekt-psi-utils/io.github.detekt.psi.internal/-full-qualified-name-guesser/-full-qualified-name-guesser.html","searchKeys":["FullQualifiedNameGuesser","constructor(root: KtFile)","io.github.detekt.psi.internal.FullQualifiedNameGuesser.FullQualifiedNameGuesser"]},{"name":"constructor(root: KtFile, excludes: List<Regex>, context: BindingContext)","description":"io.github.detekt.psi.AnnotationExcluder.AnnotationExcluder","location":"detekt-psi-utils/io.github.detekt.psi/-annotation-excluder/-annotation-excluder.html","searchKeys":["AnnotationExcluder","constructor(root: KtFile, excludes: List<Regex>, context: BindingContext)","io.github.detekt.psi.AnnotationExcluder.AnnotationExcluder"]},{"name":"fun KotlinType.fqNameOrNull(): FqName?","description":"io.gitlab.arturbosch.detekt.rules.fqNameOrNull","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/fq-name-or-null.html","searchKeys":["fqNameOrNull","fun KotlinType.fqNameOrNull(): FqName?","io.gitlab.arturbosch.detekt.rules.fqNameOrNull"]},{"name":"fun KtAnnotated.hasAnnotation(vararg annotationNames: String): Boolean","description":"io.gitlab.arturbosch.detekt.rules.hasAnnotation","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/has-annotation.html","searchKeys":["hasAnnotation","fun KtAnnotated.hasAnnotation(vararg annotationNames: String): Boolean","io.gitlab.arturbosch.detekt.rules.hasAnnotation"]},{"name":"fun KtBinaryExpression.isNonNullCheck(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isNonNullCheck","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-non-null-check.html","searchKeys":["isNonNullCheck","fun KtBinaryExpression.isNonNullCheck(): Boolean","io.gitlab.arturbosch.detekt.rules.isNonNullCheck"]},{"name":"fun KtBinaryExpression.isNullCheck(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isNullCheck","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-null-check.html","searchKeys":["isNullCheck","fun KtBinaryExpression.isNullCheck(): Boolean","io.gitlab.arturbosch.detekt.rules.isNullCheck"]},{"name":"fun KtCallExpression.isCalling(fqName: FqName, bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isCalling","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-calling.html","searchKeys":["isCalling","fun KtCallExpression.isCalling(fqName: FqName, bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.isCalling"]},{"name":"fun KtCallExpression.isCalling(fqNames: List<FqName>, bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isCalling","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-calling.html","searchKeys":["isCalling","fun KtCallExpression.isCalling(fqNames: List<FqName>, bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.isCalling"]},{"name":"fun KtCallExpression.isCallingWithNonNullCheckArgument(fqName: FqName, bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isCallingWithNonNullCheckArgument","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-calling-with-non-null-check-argument.html","searchKeys":["isCallingWithNonNullCheckArgument","fun KtCallExpression.isCallingWithNonNullCheckArgument(fqName: FqName, bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.isCallingWithNonNullCheckArgument"]},{"name":"fun KtCallExpression.receiverIsUsed(context: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.receiverIsUsed","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/receiver-is-used.html","searchKeys":["receiverIsUsed","fun KtCallExpression.receiverIsUsed(context: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.receiverIsUsed"]},{"name":"fun KtCatchClause.isAllowedExceptionName(regex: Regex): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isAllowedExceptionName","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-allowed-exception-name.html","searchKeys":["isAllowedExceptionName","fun KtCatchClause.isAllowedExceptionName(regex: Regex): Boolean","io.gitlab.arturbosch.detekt.rules.isAllowedExceptionName"]},{"name":"fun KtClass.companionObject(): KtObjectDeclaration?","description":"io.gitlab.arturbosch.detekt.rules.companionObject","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/companion-object.html","searchKeys":["companionObject","fun KtClass.companionObject(): KtObjectDeclaration?","io.gitlab.arturbosch.detekt.rules.companionObject"]},{"name":"fun KtExpression.getDataFlowAwareTypes(bindingContext: BindingContext, languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory, originalType: KotlinType? = bindingContext.getType(this)): Set<KotlinType>","description":"io.gitlab.arturbosch.detekt.rules.getDataFlowAwareTypes","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/get-data-flow-aware-types.html","searchKeys":["getDataFlowAwareTypes","fun KtExpression.getDataFlowAwareTypes(bindingContext: BindingContext, languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory, originalType: KotlinType? = bindingContext.getType(this)): Set<KotlinType>","io.gitlab.arturbosch.detekt.rules.getDataFlowAwareTypes"]},{"name":"fun KtExpression.isNullable(bindingContext: BindingContext, languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory, shouldConsiderPlatformTypeAsNullable: Boolean): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isNullable","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-nullable.html","searchKeys":["isNullable","fun KtExpression.isNullable(bindingContext: BindingContext, languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory, shouldConsiderPlatformTypeAsNullable: Boolean): Boolean","io.gitlab.arturbosch.detekt.rules.isNullable"]},{"name":"fun KtFile.absolutePath(): Path","description":"io.github.detekt.psi.absolutePath","location":"detekt-psi-utils/io.github.detekt.psi/absolute-path.html","searchKeys":["absolutePath","fun KtFile.absolutePath(): Path","io.github.detekt.psi.absolutePath"]},{"name":"fun KtFunction.hasCorrectEqualsParameter(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.hasCorrectEqualsParameter","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/has-correct-equals-parameter.html","searchKeys":["hasCorrectEqualsParameter","fun KtFunction.hasCorrectEqualsParameter(): Boolean","io.gitlab.arturbosch.detekt.rules.hasCorrectEqualsParameter"]},{"name":"fun KtFunction.isEqualsFunction(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isEqualsFunction","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-equals-function.html","searchKeys":["isEqualsFunction","fun KtFunction.isEqualsFunction(): Boolean","io.gitlab.arturbosch.detekt.rules.isEqualsFunction"]},{"name":"fun KtFunction.isHashCodeFunction(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isHashCodeFunction","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-hash-code-function.html","searchKeys":["isHashCodeFunction","fun KtFunction.isHashCodeFunction(): Boolean","io.gitlab.arturbosch.detekt.rules.isHashCodeFunction"]},{"name":"fun KtLambdaExpression.firstParameter(bindingContext: BindingContext): ValueParameterDescriptor?","description":"io.gitlab.arturbosch.detekt.rules.firstParameter","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/first-parameter.html","searchKeys":["firstParameter","fun KtLambdaExpression.firstParameter(bindingContext: BindingContext): ValueParameterDescriptor?","io.gitlab.arturbosch.detekt.rules.firstParameter"]},{"name":"fun KtLambdaExpression.hasImplicitParameterReference(implicitParameter: ValueParameterDescriptor, bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.hasImplicitParameterReference","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/has-implicit-parameter-reference.html","searchKeys":["hasImplicitParameterReference","fun KtLambdaExpression.hasImplicitParameterReference(implicitParameter: ValueParameterDescriptor, bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.hasImplicitParameterReference"]},{"name":"fun KtLambdaExpression.implicitParameter(bindingContext: BindingContext): ValueParameterDescriptor?","description":"io.gitlab.arturbosch.detekt.rules.implicitParameter","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/implicit-parameter.html","searchKeys":["implicitParameter","fun KtLambdaExpression.implicitParameter(bindingContext: BindingContext): ValueParameterDescriptor?","io.gitlab.arturbosch.detekt.rules.implicitParameter"]},{"name":"fun KtModifierListOwner.isAbstract(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isAbstract","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-abstract.html","searchKeys":["isAbstract","fun KtModifierListOwner.isAbstract(): Boolean","io.gitlab.arturbosch.detekt.rules.isAbstract"]},{"name":"fun KtModifierListOwner.isActual(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isActual","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-actual.html","searchKeys":["isActual","fun KtModifierListOwner.isActual(): Boolean","io.gitlab.arturbosch.detekt.rules.isActual"]},{"name":"fun KtModifierListOwner.isConstant(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isConstant","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-constant.html","searchKeys":["isConstant","fun KtModifierListOwner.isConstant(): Boolean","io.gitlab.arturbosch.detekt.rules.isConstant"]},{"name":"fun KtModifierListOwner.isExpect(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isExpect","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-expect.html","searchKeys":["isExpect","fun KtModifierListOwner.isExpect(): Boolean","io.gitlab.arturbosch.detekt.rules.isExpect"]},{"name":"fun KtModifierListOwner.isExternal(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isExternal","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-external.html","searchKeys":["isExternal","fun KtModifierListOwner.isExternal(): Boolean","io.gitlab.arturbosch.detekt.rules.isExternal"]},{"name":"fun KtModifierListOwner.isInline(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isInline","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-inline.html","searchKeys":["isInline","fun KtModifierListOwner.isInline(): Boolean","io.gitlab.arturbosch.detekt.rules.isInline"]},{"name":"fun KtModifierListOwner.isInternal(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isInternal","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-internal.html","searchKeys":["isInternal","fun KtModifierListOwner.isInternal(): Boolean","io.gitlab.arturbosch.detekt.rules.isInternal"]},{"name":"fun KtModifierListOwner.isLateinit(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isLateinit","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-lateinit.html","searchKeys":["isLateinit","fun KtModifierListOwner.isLateinit(): Boolean","io.gitlab.arturbosch.detekt.rules.isLateinit"]},{"name":"fun KtModifierListOwner.isOpen(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isOpen","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-open.html","searchKeys":["isOpen","fun KtModifierListOwner.isOpen(): Boolean","io.gitlab.arturbosch.detekt.rules.isOpen"]},{"name":"fun KtModifierListOwner.isOperator(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isOperator","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-operator.html","searchKeys":["isOperator","fun KtModifierListOwner.isOperator(): Boolean","io.gitlab.arturbosch.detekt.rules.isOperator"]},{"name":"fun KtModifierListOwner.isOverride(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isOverride","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-override.html","searchKeys":["isOverride","fun KtModifierListOwner.isOverride(): Boolean","io.gitlab.arturbosch.detekt.rules.isOverride"]},{"name":"fun KtModifierListOwner.isProtected(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isProtected","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-protected.html","searchKeys":["isProtected","fun KtModifierListOwner.isProtected(): Boolean","io.gitlab.arturbosch.detekt.rules.isProtected"]},{"name":"fun KtModifierListOwner.isPublicNotOverridden(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isPublicNotOverridden","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-public-not-overridden.html","searchKeys":["isPublicNotOverridden","fun KtModifierListOwner.isPublicNotOverridden(): Boolean","io.gitlab.arturbosch.detekt.rules.isPublicNotOverridden"]},{"name":"fun KtModifierListOwner.isPublicNotOverridden(considerProtectedAsPublic: Boolean): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isPublicNotOverridden","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-public-not-overridden.html","searchKeys":["isPublicNotOverridden","fun KtModifierListOwner.isPublicNotOverridden(considerProtectedAsPublic: Boolean): Boolean","io.gitlab.arturbosch.detekt.rules.isPublicNotOverridden"]},{"name":"fun KtNamedFunction.hasImplicitUnitReturnType(bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.hasImplicitUnitReturnType","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/has-implicit-unit-return-type.html","searchKeys":["hasImplicitUnitReturnType","fun KtNamedFunction.hasImplicitUnitReturnType(bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.hasImplicitUnitReturnType"]},{"name":"fun KtNamedFunction.isJvmFinalizeFunction(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isJvmFinalizeFunction","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-jvm-finalize-function.html","searchKeys":["isJvmFinalizeFunction","fun KtNamedFunction.isJvmFinalizeFunction(): Boolean","io.gitlab.arturbosch.detekt.rules.isJvmFinalizeFunction"]},{"name":"fun KtNamedFunction.isMainFunction(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isMainFunction","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-main-function.html","searchKeys":["isMainFunction","fun KtNamedFunction.isMainFunction(): Boolean","io.gitlab.arturbosch.detekt.rules.isMainFunction"]},{"name":"fun KtThrowExpression.isEnclosedByConditionalStatement(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isEnclosedByConditionalStatement","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-enclosed-by-conditional-statement.html","searchKeys":["isEnclosedByConditionalStatement","fun KtThrowExpression.isEnclosedByConditionalStatement(): Boolean","io.gitlab.arturbosch.detekt.rules.isEnclosedByConditionalStatement"]},{"name":"fun KtThrowExpression.isIllegalArgumentException(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isIllegalArgumentException","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-illegal-argument-exception.html","searchKeys":["isIllegalArgumentException","fun KtThrowExpression.isIllegalArgumentException(): Boolean","io.gitlab.arturbosch.detekt.rules.isIllegalArgumentException"]},{"name":"fun KtThrowExpression.isIllegalStateException(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isIllegalStateException","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-illegal-state-exception.html","searchKeys":["isIllegalStateException","fun KtThrowExpression.isIllegalStateException(): Boolean","io.gitlab.arturbosch.detekt.rules.isIllegalStateException"]},{"name":"fun KtValueArgument.isString(bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isString","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-string.html","searchKeys":["isString","fun KtValueArgument.isString(bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.isString"]},{"name":"fun List<KtValueArgument>.isEmptyOrSingleStringArgument(bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isEmptyOrSingleStringArgument","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-empty-or-single-string-argument.html","searchKeys":["isEmptyOrSingleStringArgument","fun List<KtValueArgument>.isEmptyOrSingleStringArgument(bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.isEmptyOrSingleStringArgument"]},{"name":"fun PsiElement.isPartOfString(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isPartOfString","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-part-of-string.html","searchKeys":["isPartOfString","fun PsiElement.isPartOfString(): Boolean","io.gitlab.arturbosch.detekt.rules.isPartOfString"]},{"name":"fun PsiFile.absolutePath(): Path","description":"io.github.detekt.psi.absolutePath","location":"detekt-psi-utils/io.github.detekt.psi/absolute-path.html","searchKeys":["absolutePath","fun PsiFile.absolutePath(): Path","io.github.detekt.psi.absolutePath"]},{"name":"fun String.lastArgumentMatchesKotlinReferenceUrlSyntax(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesKotlinReferenceUrlSyntax","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/last-argument-matches-kotlin-reference-url-syntax.html","searchKeys":["lastArgumentMatchesKotlinReferenceUrlSyntax","fun String.lastArgumentMatchesKotlinReferenceUrlSyntax(): Boolean","io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesKotlinReferenceUrlSyntax"]},{"name":"fun String.lastArgumentMatchesMarkdownUrlSyntax(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesMarkdownUrlSyntax","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/last-argument-matches-markdown-url-syntax.html","searchKeys":["lastArgumentMatchesMarkdownUrlSyntax","fun String.lastArgumentMatchesMarkdownUrlSyntax(): Boolean","io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesMarkdownUrlSyntax"]},{"name":"fun String.lastArgumentMatchesUrl(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesUrl","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/last-argument-matches-url.html","searchKeys":["lastArgumentMatchesUrl","fun String.lastArgumentMatchesUrl(): Boolean","io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesUrl"]},{"name":"fun fromFunctionSignature(methodSignature: String): FunctionMatcher","description":"io.github.detekt.psi.FunctionMatcher.Companion.fromFunctionSignature","location":"detekt-psi-utils/io.github.detekt.psi/-function-matcher/-companion/from-function-signature.html","searchKeys":["fromFunctionSignature","fun fromFunctionSignature(methodSignature: String): FunctionMatcher","io.github.detekt.psi.FunctionMatcher.Companion.fromFunctionSignature"]},{"name":"fun getFullQualifiedName(name: String): Set<String>","description":"io.github.detekt.psi.internal.FullQualifiedNameGuesser.getFullQualifiedName","location":"detekt-psi-utils/io.github.detekt.psi.internal/-full-qualified-name-guesser/get-full-qualified-name.html","searchKeys":["getFullQualifiedName","fun getFullQualifiedName(name: String): Set<String>","io.github.detekt.psi.internal.FullQualifiedNameGuesser.getFullQualifiedName"]},{"name":"fun shouldExclude(annotations: List<KtAnnotationEntry>): Boolean","description":"io.github.detekt.psi.AnnotationExcluder.shouldExclude","location":"detekt-psi-utils/io.github.detekt.psi/-annotation-excluder/should-exclude.html","searchKeys":["shouldExclude","fun shouldExclude(annotations: List<KtAnnotationEntry>): Boolean","io.github.detekt.psi.AnnotationExcluder.shouldExclude"]},{"name":"inline fun <T : Exception> KtThrowExpression.isExceptionOfType(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isExceptionOfType","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-exception-of-type.html","searchKeys":["isExceptionOfType","inline fun <T : Exception> KtThrowExpression.isExceptionOfType(): Boolean","io.gitlab.arturbosch.detekt.rules.isExceptionOfType"]},{"name":"inline fun <T : PsiElement> PsiElement.isPartOf(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isPartOf","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-part-of.html","searchKeys":["isPartOf","inline fun <T : PsiElement> PsiElement.isPartOf(): Boolean","io.gitlab.arturbosch.detekt.rules.isPartOf"]},{"name":"object Companion","description":"io.github.detekt.psi.FunctionMatcher.Companion","location":"detekt-psi-utils/io.github.detekt.psi/-function-matcher/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.psi.FunctionMatcher.Companion"]},{"name":"sealed class FunctionMatcher","description":"io.github.detekt.psi.FunctionMatcher","location":"detekt-psi-utils/io.github.detekt.psi/-function-matcher/index.html","searchKeys":["FunctionMatcher","sealed class FunctionMatcher","io.github.detekt.psi.FunctionMatcher"]},{"name":"val KtThrowExpression.arguments: List<KtValueArgument>","description":"io.gitlab.arturbosch.detekt.rules.arguments","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/arguments.html","searchKeys":["arguments","val KtThrowExpression.arguments: List<KtValueArgument>","io.gitlab.arturbosch.detekt.rules.arguments"]},{"name":"abstract fun build(): T","description":"io.github.detekt.tooling.dsl.Builder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-builder/build.html","searchKeys":["build","abstract fun build(): T","io.github.detekt.tooling.dsl.Builder.build"]},{"name":"abstract fun contains(id: FindingId): Boolean","description":"io.github.detekt.tooling.api.Baseline.contains","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline/contains.html","searchKeys":["contains","abstract fun contains(id: FindingId): Boolean","io.github.detekt.tooling.api.Baseline.contains"]},{"name":"abstract fun copy(targetLocation: Path)","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider.copy","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/copy.html","searchKeys":["copy","abstract fun copy(targetLocation: Path)","io.github.detekt.tooling.api.DefaultConfigurationProvider.copy"]},{"name":"abstract fun current(): String","description":"io.github.detekt.tooling.api.VersionProvider.current","location":"detekt-tooling/io.github.detekt.tooling.api/-version-provider/current.html","searchKeys":["current","abstract fun current(): String","io.github.detekt.tooling.api.VersionProvider.current"]},{"name":"abstract fun get(): Config","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider.get","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/get.html","searchKeys":["get","abstract fun get(): Config","io.github.detekt.tooling.api.DefaultConfigurationProvider.get"]},{"name":"abstract fun get(processingSpec: ProcessingSpec): Detekt","description":"io.github.detekt.tooling.api.DetektProvider.get","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-provider/get.html","searchKeys":["get","abstract fun get(processingSpec: ProcessingSpec): Detekt","io.github.detekt.tooling.api.DetektProvider.get"]},{"name":"abstract fun init(extensionsSpec: ExtensionsSpec)","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider.init","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/init.html","searchKeys":["init","abstract fun init(extensionsSpec: ExtensionsSpec)","io.github.detekt.tooling.api.DefaultConfigurationProvider.init"]},{"name":"abstract fun of(manuallySuppressedIssues: FindingsIdList, currentIssues: FindingsIdList): Baseline","description":"io.github.detekt.tooling.api.BaselineProvider.of","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/of.html","searchKeys":["of","abstract fun of(manuallySuppressedIssues: FindingsIdList, currentIssues: FindingsIdList): Baseline","io.github.detekt.tooling.api.BaselineProvider.of"]},{"name":"abstract fun read(sourcePath: Path): Baseline","description":"io.github.detekt.tooling.api.BaselineProvider.read","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/read.html","searchKeys":["read","abstract fun read(sourcePath: Path): Baseline","io.github.detekt.tooling.api.BaselineProvider.read"]},{"name":"abstract fun run(): AnalysisResult","description":"io.github.detekt.tooling.api.Detekt.run","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt/run.html","searchKeys":["run","abstract fun run(): AnalysisResult","io.github.detekt.tooling.api.Detekt.run"]},{"name":"abstract fun run(args: Array<String>): AnalysisResult","description":"io.github.detekt.tooling.api.DetektCli.run","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-cli/run.html","searchKeys":["run","abstract fun run(args: Array<String>): AnalysisResult","io.github.detekt.tooling.api.DetektCli.run"]},{"name":"abstract fun run(args: Array<String>, outputChannel: Appendable, errorChannel: Appendable): AnalysisResult","description":"io.github.detekt.tooling.api.DetektCli.run","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-cli/run.html","searchKeys":["run","abstract fun run(args: Array<String>, outputChannel: Appendable, errorChannel: Appendable): AnalysisResult","io.github.detekt.tooling.api.DetektCli.run"]},{"name":"abstract fun run(files: Collection<KtFile>, bindingContext: BindingContext): AnalysisResult","description":"io.github.detekt.tooling.api.Detekt.run","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt/run.html","searchKeys":["run","abstract fun run(files: Collection<KtFile>, bindingContext: BindingContext): AnalysisResult","io.github.detekt.tooling.api.Detekt.run"]},{"name":"abstract fun write(targetPath: Path, baseline: Baseline)","description":"io.github.detekt.tooling.api.BaselineProvider.write","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/write.html","searchKeys":["write","abstract fun write(targetPath: Path, baseline: Baseline)","io.github.detekt.tooling.api.BaselineProvider.write"]},{"name":"abstract val activateAllRules: Boolean","description":"io.github.detekt.tooling.api.spec.RulesSpec.activateAllRules","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/activate-all-rules.html","searchKeys":["activateAllRules","abstract val activateAllRules: Boolean","io.github.detekt.tooling.api.spec.RulesSpec.activateAllRules"]},{"name":"abstract val analysisMode: AnalysisMode","description":"io.github.detekt.tooling.api.spec.ProjectSpec.analysisMode","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-project-spec/analysis-mode.html","searchKeys":["analysisMode","abstract val analysisMode: AnalysisMode","io.github.detekt.tooling.api.spec.ProjectSpec.analysisMode"]},{"name":"abstract val apiVersion: String?","description":"io.github.detekt.tooling.api.spec.CompilerSpec.apiVersion","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/api-version.html","searchKeys":["apiVersion","abstract val apiVersion: String?","io.github.detekt.tooling.api.spec.CompilerSpec.apiVersion"]},{"name":"abstract val autoCorrect: Boolean","description":"io.github.detekt.tooling.api.spec.RulesSpec.autoCorrect","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/auto-correct.html","searchKeys":["autoCorrect","abstract val autoCorrect: Boolean","io.github.detekt.tooling.api.spec.RulesSpec.autoCorrect"]},{"name":"abstract val basePath: Path","description":"io.github.detekt.tooling.api.spec.ProjectSpec.basePath","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-project-spec/base-path.html","searchKeys":["basePath","abstract val basePath: Path","io.github.detekt.tooling.api.spec.ProjectSpec.basePath"]},{"name":"abstract val baselineSpec: BaselineSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.baselineSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/baseline-spec.html","searchKeys":["baselineSpec","abstract val baselineSpec: BaselineSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.baselineSpec"]},{"name":"abstract val classpath: String?","description":"io.github.detekt.tooling.api.spec.CompilerSpec.classpath","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/classpath.html","searchKeys":["classpath","abstract val classpath: String?","io.github.detekt.tooling.api.spec.CompilerSpec.classpath"]},{"name":"abstract val compilerSpec: CompilerSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.compilerSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/compiler-spec.html","searchKeys":["compilerSpec","abstract val compilerSpec: CompilerSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.compilerSpec"]},{"name":"abstract val configPaths: Collection<Path>","description":"io.github.detekt.tooling.api.spec.ConfigSpec.configPaths","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-config-spec/config-paths.html","searchKeys":["configPaths","abstract val configPaths: Collection<Path>","io.github.detekt.tooling.api.spec.ConfigSpec.configPaths"]},{"name":"abstract val configSpec: ConfigSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.configSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/config-spec.html","searchKeys":["configSpec","abstract val configSpec: ConfigSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.configSpec"]},{"name":"abstract val container: Detektion?","description":"io.github.detekt.tooling.api.AnalysisResult.container","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-result/container.html","searchKeys":["container","abstract val container: Detektion?","io.github.detekt.tooling.api.AnalysisResult.container"]},{"name":"abstract val currentIssues: FindingsIdList","description":"io.github.detekt.tooling.api.Baseline.currentIssues","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline/current-issues.html","searchKeys":["currentIssues","abstract val currentIssues: FindingsIdList","io.github.detekt.tooling.api.Baseline.currentIssues"]},{"name":"abstract val debug: Boolean","description":"io.github.detekt.tooling.api.spec.LoggingSpec.debug","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-logging-spec/debug.html","searchKeys":["debug","abstract val debug: Boolean","io.github.detekt.tooling.api.spec.LoggingSpec.debug"]},{"name":"abstract val disabledExtensions: Set<ExtensionId>","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec.disabledExtensions","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/disabled-extensions.html","searchKeys":["disabledExtensions","abstract val disabledExtensions: Set<ExtensionId>","io.github.detekt.tooling.api.spec.ExtensionsSpec.disabledExtensions"]},{"name":"abstract val error: DetektError?","description":"io.github.detekt.tooling.api.AnalysisResult.error","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-result/error.html","searchKeys":["error","abstract val error: DetektError?","io.github.detekt.tooling.api.AnalysisResult.error"]},{"name":"abstract val errorChannel: Appendable","description":"io.github.detekt.tooling.api.spec.LoggingSpec.errorChannel","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-logging-spec/error-channel.html","searchKeys":["errorChannel","abstract val errorChannel: Appendable","io.github.detekt.tooling.api.spec.LoggingSpec.errorChannel"]},{"name":"abstract val executionSpec: ExecutionSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.executionSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/execution-spec.html","searchKeys":["executionSpec","abstract val executionSpec: ExecutionSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.executionSpec"]},{"name":"abstract val executorService: ExecutorService?","description":"io.github.detekt.tooling.api.spec.ExecutionSpec.executorService","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-execution-spec/executor-service.html","searchKeys":["executorService","abstract val executorService: ExecutorService?","io.github.detekt.tooling.api.spec.ExecutionSpec.executorService"]},{"name":"abstract val extensionsSpec: ExtensionsSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.extensionsSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/extensions-spec.html","searchKeys":["extensionsSpec","abstract val extensionsSpec: ExtensionsSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.extensionsSpec"]},{"name":"abstract val failurePolicy: RulesSpec.FailurePolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.failurePolicy","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/failure-policy.html","searchKeys":["failurePolicy","abstract val failurePolicy: RulesSpec.FailurePolicy","io.github.detekt.tooling.api.spec.RulesSpec.failurePolicy"]},{"name":"abstract val freeCompilerArgs: List<String>","description":"io.github.detekt.tooling.api.spec.CompilerSpec.freeCompilerArgs","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/free-compiler-args.html","searchKeys":["freeCompilerArgs","abstract val freeCompilerArgs: List<String>","io.github.detekt.tooling.api.spec.CompilerSpec.freeCompilerArgs"]},{"name":"abstract val inputPaths: Collection<Path>","description":"io.github.detekt.tooling.api.spec.ProjectSpec.inputPaths","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-project-spec/input-paths.html","searchKeys":["inputPaths","abstract val inputPaths: Collection<Path>","io.github.detekt.tooling.api.spec.ProjectSpec.inputPaths"]},{"name":"abstract val jdkHome: Path?","description":"io.github.detekt.tooling.api.spec.CompilerSpec.jdkHome","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/jdk-home.html","searchKeys":["jdkHome","abstract val jdkHome: Path?","io.github.detekt.tooling.api.spec.CompilerSpec.jdkHome"]},{"name":"abstract val jvmTarget: String","description":"io.github.detekt.tooling.api.spec.CompilerSpec.jvmTarget","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/jvm-target.html","searchKeys":["jvmTarget","abstract val jvmTarget: String","io.github.detekt.tooling.api.spec.CompilerSpec.jvmTarget"]},{"name":"abstract val languageVersion: String?","description":"io.github.detekt.tooling.api.spec.CompilerSpec.languageVersion","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/language-version.html","searchKeys":["languageVersion","abstract val languageVersion: String?","io.github.detekt.tooling.api.spec.CompilerSpec.languageVersion"]},{"name":"abstract val loader: ClassLoader?","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins.loader","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/-plugins/loader.html","searchKeys":["loader","abstract val loader: ClassLoader?","io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins.loader"]},{"name":"abstract val loggingSpec: LoggingSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.loggingSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/logging-spec.html","searchKeys":["loggingSpec","abstract val loggingSpec: LoggingSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.loggingSpec"]},{"name":"abstract val manuallySuppressedIssues: FindingsIdList","description":"io.github.detekt.tooling.api.Baseline.manuallySuppressedIssues","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline/manually-suppressed-issues.html","searchKeys":["manuallySuppressedIssues","abstract val manuallySuppressedIssues: FindingsIdList","io.github.detekt.tooling.api.Baseline.manuallySuppressedIssues"]},{"name":"abstract val outputChannel: Appendable","description":"io.github.detekt.tooling.api.spec.LoggingSpec.outputChannel","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-logging-spec/output-channel.html","searchKeys":["outputChannel","abstract val outputChannel: Appendable","io.github.detekt.tooling.api.spec.LoggingSpec.outputChannel"]},{"name":"abstract val parallelAnalysis: Boolean","description":"io.github.detekt.tooling.api.spec.ExecutionSpec.parallelAnalysis","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-execution-spec/parallel-analysis.html","searchKeys":["parallelAnalysis","abstract val parallelAnalysis: Boolean","io.github.detekt.tooling.api.spec.ExecutionSpec.parallelAnalysis"]},{"name":"abstract val parallelParsing: Boolean","description":"io.github.detekt.tooling.api.spec.ExecutionSpec.parallelParsing","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-execution-spec/parallel-parsing.html","searchKeys":["parallelParsing","abstract val parallelParsing: Boolean","io.github.detekt.tooling.api.spec.ExecutionSpec.parallelParsing"]},{"name":"abstract val path: Path","description":"io.github.detekt.tooling.api.spec.ReportsSpec.Report.path","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-reports-spec/-report/path.html","searchKeys":["path","abstract val path: Path","io.github.detekt.tooling.api.spec.ReportsSpec.Report.path"]},{"name":"abstract val path: Path?","description":"io.github.detekt.tooling.api.spec.BaselineSpec.path","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-baseline-spec/path.html","searchKeys":["path","abstract val path: Path?","io.github.detekt.tooling.api.spec.BaselineSpec.path"]},{"name":"abstract val paths: Collection<Path>?","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins.paths","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/-plugins/paths.html","searchKeys":["paths","abstract val paths: Collection<Path>?","io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins.paths"]},{"name":"abstract val plugins: ExtensionsSpec.Plugins?","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec.plugins","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/plugins.html","searchKeys":["plugins","abstract val plugins: ExtensionsSpec.Plugins?","io.github.detekt.tooling.api.spec.ExtensionsSpec.plugins"]},{"name":"abstract val projectSpec: ProjectSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.projectSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/project-spec.html","searchKeys":["projectSpec","abstract val projectSpec: ProjectSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.projectSpec"]},{"name":"abstract val reports: Collection<ReportsSpec.Report>","description":"io.github.detekt.tooling.api.spec.ReportsSpec.reports","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-reports-spec/reports.html","searchKeys":["reports","abstract val reports: Collection<ReportsSpec.Report>","io.github.detekt.tooling.api.spec.ReportsSpec.reports"]},{"name":"abstract val reportsSpec: ReportsSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.reportsSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/reports-spec.html","searchKeys":["reportsSpec","abstract val reportsSpec: ReportsSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.reportsSpec"]},{"name":"abstract val resources: Collection<URL>","description":"io.github.detekt.tooling.api.spec.ConfigSpec.resources","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-config-spec/resources.html","searchKeys":["resources","abstract val resources: Collection<URL>","io.github.detekt.tooling.api.spec.ConfigSpec.resources"]},{"name":"abstract val rulesSpec: RulesSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.rulesSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/rules-spec.html","searchKeys":["rulesSpec","abstract val rulesSpec: RulesSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.rulesSpec"]},{"name":"abstract val runPolicy: RulesSpec.RunPolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.runPolicy","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/run-policy.html","searchKeys":["runPolicy","abstract val runPolicy: RulesSpec.RunPolicy","io.github.detekt.tooling.api.spec.RulesSpec.runPolicy"]},{"name":"abstract val shouldCreateDuringAnalysis: Boolean","description":"io.github.detekt.tooling.api.spec.BaselineSpec.shouldCreateDuringAnalysis","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-baseline-spec/should-create-during-analysis.html","searchKeys":["shouldCreateDuringAnalysis","abstract val shouldCreateDuringAnalysis: Boolean","io.github.detekt.tooling.api.spec.BaselineSpec.shouldCreateDuringAnalysis"]},{"name":"abstract val shouldValidateBeforeAnalysis: Boolean?","description":"io.github.detekt.tooling.api.spec.ConfigSpec.shouldValidateBeforeAnalysis","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-config-spec/should-validate-before-analysis.html","searchKeys":["shouldValidateBeforeAnalysis","abstract val shouldValidateBeforeAnalysis: Boolean?","io.github.detekt.tooling.api.spec.ConfigSpec.shouldValidateBeforeAnalysis"]},{"name":"abstract val type: String","description":"io.github.detekt.tooling.api.spec.ReportsSpec.Report.type","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-reports-spec/-report/type.html","searchKeys":["type","abstract val type: String","io.github.detekt.tooling.api.spec.ReportsSpec.Report.type"]},{"name":"abstract val useDefaultConfig: Boolean","description":"io.github.detekt.tooling.api.spec.ConfigSpec.useDefaultConfig","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-config-spec/use-default-config.html","searchKeys":["useDefaultConfig","abstract val useDefaultConfig: Boolean","io.github.detekt.tooling.api.spec.ConfigSpec.useDefaultConfig"]},{"name":"annotation class NotApiButProbablyUsedByUsers","description":"io.github.detekt.tooling.internal.NotApiButProbablyUsedByUsers","location":"detekt-tooling/io.github.detekt.tooling.internal/-not-api-but-probably-used-by-users/index.html","searchKeys":["NotApiButProbablyUsedByUsers","annotation class NotApiButProbablyUsedByUsers","io.github.detekt.tooling.internal.NotApiButProbablyUsedByUsers"]},{"name":"annotation class ProcessingModelDsl","description":"io.github.detekt.tooling.dsl.ProcessingModelDsl","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-model-dsl/index.html","searchKeys":["ProcessingModelDsl","annotation class ProcessingModelDsl","io.github.detekt.tooling.dsl.ProcessingModelDsl"]},{"name":"class BaselineSpecBuilder : Builder<BaselineSpec> ","description":"io.github.detekt.tooling.dsl.BaselineSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-baseline-spec-builder/index.html","searchKeys":["BaselineSpecBuilder","class BaselineSpecBuilder : Builder<BaselineSpec> ","io.github.detekt.tooling.dsl.BaselineSpecBuilder"]},{"name":"class CompilerSpecBuilder : Builder<CompilerSpec> ","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/index.html","searchKeys":["CompilerSpecBuilder","class CompilerSpecBuilder : Builder<CompilerSpec> ","io.github.detekt.tooling.dsl.CompilerSpecBuilder"]},{"name":"class ConfigSpecBuilder : Builder<ConfigSpec> ","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/index.html","searchKeys":["ConfigSpecBuilder","class ConfigSpecBuilder : Builder<ConfigSpec> ","io.github.detekt.tooling.dsl.ConfigSpecBuilder"]},{"name":"class DefaultAnalysisResult(val container: Detektion?, val error: DetektError? = null) : AnalysisResult","description":"io.github.detekt.tooling.internal.DefaultAnalysisResult","location":"detekt-tooling/io.github.detekt.tooling.internal/-default-analysis-result/index.html","searchKeys":["DefaultAnalysisResult","class DefaultAnalysisResult(val container: Detektion?, val error: DetektError? = null) : AnalysisResult","io.github.detekt.tooling.internal.DefaultAnalysisResult"]},{"name":"class ExecutionSpecBuilder : Builder<ExecutionSpec> ","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/index.html","searchKeys":["ExecutionSpecBuilder","class ExecutionSpecBuilder : Builder<ExecutionSpec> ","io.github.detekt.tooling.dsl.ExecutionSpecBuilder"]},{"name":"class ExtensionsSpecBuilder : Builder<ExtensionsSpec> ","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/index.html","searchKeys":["ExtensionsSpecBuilder","class ExtensionsSpecBuilder : Builder<ExtensionsSpec> ","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder"]},{"name":"class InvalidConfig(message: String) : DetektError","description":"io.github.detekt.tooling.api.InvalidConfig","location":"detekt-tooling/io.github.detekt.tooling.api/-invalid-config/index.html","searchKeys":["InvalidConfig","class InvalidConfig(message: String) : DetektError","io.github.detekt.tooling.api.InvalidConfig"]},{"name":"class IssuesFound(message: String) : DetektError","description":"io.github.detekt.tooling.api.IssuesFound","location":"detekt-tooling/io.github.detekt.tooling.api/-issues-found/index.html","searchKeys":["IssuesFound","class IssuesFound(message: String) : DetektError","io.github.detekt.tooling.api.IssuesFound"]},{"name":"class LoggingSpecBuilder : Builder<LoggingSpec> ","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/index.html","searchKeys":["LoggingSpecBuilder","class LoggingSpecBuilder : Builder<LoggingSpec> ","io.github.detekt.tooling.dsl.LoggingSpecBuilder"]},{"name":"class ProcessingSpecBuilder : Builder<ProcessingSpec> ","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/index.html","searchKeys":["ProcessingSpecBuilder","class ProcessingSpecBuilder : Builder<ProcessingSpec> ","io.github.detekt.tooling.dsl.ProcessingSpecBuilder"]},{"name":"class ProjectSpecBuilder : Builder<ProjectSpec> ","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/index.html","searchKeys":["ProjectSpecBuilder","class ProjectSpecBuilder : Builder<ProjectSpec> ","io.github.detekt.tooling.dsl.ProjectSpecBuilder"]},{"name":"class ReportsSpecBuilder : Builder<ReportsSpec> ","description":"io.github.detekt.tooling.dsl.ReportsSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-reports-spec-builder/index.html","searchKeys":["ReportsSpecBuilder","class ReportsSpecBuilder : Builder<ReportsSpec> ","io.github.detekt.tooling.dsl.ReportsSpecBuilder"]},{"name":"class RestrictToSingleRule(val ruleSetId: RuleSet.Id, val ruleId: String) : RulesSpec.RunPolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/-restrict-to-single-rule/index.html","searchKeys":["RestrictToSingleRule","class RestrictToSingleRule(val ruleSetId: RuleSet.Id, val ruleId: String) : RulesSpec.RunPolicy","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule"]},{"name":"class RulesSpecBuilder : Builder<RulesSpec> ","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/index.html","searchKeys":["RulesSpecBuilder","class RulesSpecBuilder : Builder<RulesSpec> ","io.github.detekt.tooling.dsl.RulesSpecBuilder"]},{"name":"class UnexpectedError(val cause: Throwable) : DetektError","description":"io.github.detekt.tooling.api.UnexpectedError","location":"detekt-tooling/io.github.detekt.tooling.api/-unexpected-error/index.html","searchKeys":["UnexpectedError","class UnexpectedError(val cause: Throwable) : DetektError","io.github.detekt.tooling.api.UnexpectedError"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.BaselineSpecBuilder.BaselineSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-baseline-spec-builder/-baseline-spec-builder.html","searchKeys":["BaselineSpecBuilder","constructor()","io.github.detekt.tooling.dsl.BaselineSpecBuilder.BaselineSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.CompilerSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/-compiler-spec-builder.html","searchKeys":["CompilerSpecBuilder","constructor()","io.github.detekt.tooling.dsl.CompilerSpecBuilder.CompilerSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.ConfigSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/-config-spec-builder.html","searchKeys":["ConfigSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ConfigSpecBuilder.ConfigSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder.ExecutionSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/-execution-spec-builder.html","searchKeys":["ExecutionSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ExecutionSpecBuilder.ExecutionSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.ExtensionsSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/-extensions-spec-builder.html","searchKeys":["ExtensionsSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.ExtensionsSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder.LoggingSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/-logging-spec-builder.html","searchKeys":["LoggingSpecBuilder","constructor()","io.github.detekt.tooling.dsl.LoggingSpecBuilder.LoggingSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.ProcessingSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/-processing-spec-builder.html","searchKeys":["ProcessingSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.ProcessingSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder.ProjectSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/-project-spec-builder.html","searchKeys":["ProjectSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ProjectSpecBuilder.ProjectSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ReportsSpecBuilder.ReportsSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-reports-spec-builder/-reports-spec-builder.html","searchKeys":["ReportsSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ReportsSpecBuilder.ReportsSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.RulesSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/-rules-spec-builder.html","searchKeys":["RulesSpecBuilder","constructor()","io.github.detekt.tooling.dsl.RulesSpecBuilder.RulesSpecBuilder"]},{"name":"constructor(cause: Throwable)","description":"io.github.detekt.tooling.api.UnexpectedError.UnexpectedError","location":"detekt-tooling/io.github.detekt.tooling.api/-unexpected-error/-unexpected-error.html","searchKeys":["UnexpectedError","constructor(cause: Throwable)","io.github.detekt.tooling.api.UnexpectedError.UnexpectedError"]},{"name":"constructor(container: Detektion?, error: DetektError? = null)","description":"io.github.detekt.tooling.internal.DefaultAnalysisResult.DefaultAnalysisResult","location":"detekt-tooling/io.github.detekt.tooling.internal/-default-analysis-result/-default-analysis-result.html","searchKeys":["DefaultAnalysisResult","constructor(container: Detektion?, error: DetektError? = null)","io.github.detekt.tooling.internal.DefaultAnalysisResult.DefaultAnalysisResult"]},{"name":"constructor(message: String)","description":"io.github.detekt.tooling.api.InvalidConfig.InvalidConfig","location":"detekt-tooling/io.github.detekt.tooling.api/-invalid-config/-invalid-config.html","searchKeys":["InvalidConfig","constructor(message: String)","io.github.detekt.tooling.api.InvalidConfig.InvalidConfig"]},{"name":"constructor(message: String)","description":"io.github.detekt.tooling.api.IssuesFound.IssuesFound","location":"detekt-tooling/io.github.detekt.tooling.api/-issues-found/-issues-found.html","searchKeys":["IssuesFound","constructor(message: String)","io.github.detekt.tooling.api.IssuesFound.IssuesFound"]},{"name":"constructor(minSeverity: Severity)","description":"io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy.FailOnSeverity.FailOnSeverity","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-failure-policy/-fail-on-severity/-fail-on-severity.html","searchKeys":["FailOnSeverity","constructor(minSeverity: Severity)","io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy.FailOnSeverity.FailOnSeverity"]},{"name":"constructor(ruleSetId: RuleSet.Id, ruleId: String)","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule.RestrictToSingleRule","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/-restrict-to-single-rule/-restrict-to-single-rule.html","searchKeys":["RestrictToSingleRule","constructor(ruleSetId: RuleSet.Id, ruleId: String)","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule.RestrictToSingleRule"]},{"name":"data class FailOnSeverity(val minSeverity: Severity) : RulesSpec.FailurePolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy.FailOnSeverity","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-failure-policy/-fail-on-severity/index.html","searchKeys":["FailOnSeverity","data class FailOnSeverity(val minSeverity: Severity) : RulesSpec.FailurePolicy","io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy.FailOnSeverity"]},{"name":"data object DisableDefaultRuleSets : RulesSpec.RunPolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.DisableDefaultRuleSets","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/-disable-default-rule-sets/index.html","searchKeys":["DisableDefaultRuleSets","data object DisableDefaultRuleSets : RulesSpec.RunPolicy","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.DisableDefaultRuleSets"]},{"name":"data object NeverFail : RulesSpec.FailurePolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy.NeverFail","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-failure-policy/-never-fail/index.html","searchKeys":["NeverFail","data object NeverFail : RulesSpec.FailurePolicy","io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy.NeverFail"]},{"name":"data object NoRestrictions : RulesSpec.RunPolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.NoRestrictions","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/-no-restrictions/index.html","searchKeys":["NoRestrictions","data object NoRestrictions : RulesSpec.RunPolicy","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.NoRestrictions"]},{"name":"enum AnalysisMode : Enum<AnalysisMode> ","description":"io.github.detekt.tooling.api.AnalysisMode","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-mode/index.html","searchKeys":["AnalysisMode","enum AnalysisMode : Enum<AnalysisMode> ","io.github.detekt.tooling.api.AnalysisMode"]},{"name":"full","description":"io.github.detekt.tooling.api.AnalysisMode.full","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-mode/full/index.html","searchKeys":["full","full","io.github.detekt.tooling.api.AnalysisMode.full"]},{"name":"fun baseline(init: BaselineSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.baseline","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/baseline.html","searchKeys":["baseline","fun baseline(init: BaselineSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.baseline"]},{"name":"fun compiler(init: CompilerSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.compiler","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/compiler.html","searchKeys":["compiler","fun compiler(init: CompilerSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.compiler"]},{"name":"fun config(init: ConfigSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.config","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/config.html","searchKeys":["config","fun config(init: ConfigSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.config"]},{"name":"fun disableExtension(id: ExtensionId)","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.disableExtension","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/disable-extension.html","searchKeys":["disableExtension","fun disableExtension(id: ExtensionId)","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.disableExtension"]},{"name":"fun execution(init: ExecutionSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.execution","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/execution.html","searchKeys":["execution","fun execution(init: ExecutionSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.execution"]},{"name":"fun extensions(init: ExtensionsSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.extensions","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/extensions.html","searchKeys":["extensions","fun extensions(init: ExtensionsSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.extensions"]},{"name":"fun fromClassloader(classLoader: () -> ClassLoader)","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.fromClassloader","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/from-classloader.html","searchKeys":["fromClassloader","fun fromClassloader(classLoader: () -> ClassLoader)","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.fromClassloader"]},{"name":"fun fromPaths(paths: () -> Collection<Path>)","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.fromPaths","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/from-paths.html","searchKeys":["fromPaths","fun fromPaths(paths: () -> Collection<Path>)","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.fromPaths"]},{"name":"fun load(classLoader: ClassLoader = BaselineProvider::class.java.classLoader): BaselineProvider","description":"io.github.detekt.tooling.api.BaselineProvider.Companion.load","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/-companion/load.html","searchKeys":["load","fun load(classLoader: ClassLoader = BaselineProvider::class.java.classLoader): BaselineProvider","io.github.detekt.tooling.api.BaselineProvider.Companion.load"]},{"name":"fun load(classLoader: ClassLoader = DetektCli::class.java.classLoader): DetektCli","description":"io.github.detekt.tooling.api.DetektCli.Companion.load","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-cli/-companion/load.html","searchKeys":["load","fun load(classLoader: ClassLoader = DetektCli::class.java.classLoader): DetektCli","io.github.detekt.tooling.api.DetektCli.Companion.load"]},{"name":"fun load(classLoader: ClassLoader = DetektProvider::class.java.classLoader): DetektProvider","description":"io.github.detekt.tooling.api.DetektProvider.Companion.load","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-provider/-companion/load.html","searchKeys":["load","fun load(classLoader: ClassLoader = DetektProvider::class.java.classLoader): DetektProvider","io.github.detekt.tooling.api.DetektProvider.Companion.load"]},{"name":"fun load(classLoader: ClassLoader = VersionProvider::class.java.classLoader): VersionProvider","description":"io.github.detekt.tooling.api.VersionProvider.Companion.load","location":"detekt-tooling/io.github.detekt.tooling.api/-version-provider/-companion/load.html","searchKeys":["load","fun load(classLoader: ClassLoader = VersionProvider::class.java.classLoader): VersionProvider","io.github.detekt.tooling.api.VersionProvider.Companion.load"]},{"name":"fun load(extensionsSpec: ExtensionsSpec, classLoader: ClassLoader = DefaultConfigurationProvider::class.java.classLoader): DefaultConfigurationProvider","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider.Companion.load","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/-companion/load.html","searchKeys":["load","fun load(extensionsSpec: ExtensionsSpec, classLoader: ClassLoader = DefaultConfigurationProvider::class.java.classLoader): DefaultConfigurationProvider","io.github.detekt.tooling.api.DefaultConfigurationProvider.Companion.load"]},{"name":"fun logging(init: LoggingSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.logging","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/logging.html","searchKeys":["logging","fun logging(init: LoggingSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.logging"]},{"name":"fun project(init: ProjectSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.project","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/project.html","searchKeys":["project","fun project(init: ProjectSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.project"]},{"name":"fun report(init: () -> Pair<String, Path>)","description":"io.github.detekt.tooling.dsl.ReportsSpecBuilder.report","location":"detekt-tooling/io.github.detekt.tooling.dsl/-reports-spec-builder/report.html","searchKeys":["report","fun report(init: () -> Pair<String, Path>)","io.github.detekt.tooling.dsl.ReportsSpecBuilder.report"]},{"name":"fun reports(init: ReportsSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.reports","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/reports.html","searchKeys":["reports","fun reports(init: ReportsSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.reports"]},{"name":"fun rules(init: RulesSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.rules","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/rules.html","searchKeys":["rules","fun rules(init: RulesSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.rules"]},{"name":"fun valueOf(value: String): AnalysisMode","description":"io.github.detekt.tooling.api.AnalysisMode.valueOf","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AnalysisMode","io.github.detekt.tooling.api.AnalysisMode.valueOf"]},{"name":"fun values(): Array<AnalysisMode>","description":"io.github.detekt.tooling.api.AnalysisMode.values","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-mode/values.html","searchKeys":["values","fun values(): Array<AnalysisMode>","io.github.detekt.tooling.api.AnalysisMode.values"]},{"name":"interface AnalysisResult","description":"io.github.detekt.tooling.api.AnalysisResult","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-result/index.html","searchKeys":["AnalysisResult","interface AnalysisResult","io.github.detekt.tooling.api.AnalysisResult"]},{"name":"interface Baseline","description":"io.github.detekt.tooling.api.Baseline","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline/index.html","searchKeys":["Baseline","interface Baseline","io.github.detekt.tooling.api.Baseline"]},{"name":"interface BaselineProvider","description":"io.github.detekt.tooling.api.BaselineProvider","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/index.html","searchKeys":["BaselineProvider","interface BaselineProvider","io.github.detekt.tooling.api.BaselineProvider"]},{"name":"interface BaselineSpec","description":"io.github.detekt.tooling.api.spec.BaselineSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-baseline-spec/index.html","searchKeys":["BaselineSpec","interface BaselineSpec","io.github.detekt.tooling.api.spec.BaselineSpec"]},{"name":"interface Builder<T>","description":"io.github.detekt.tooling.dsl.Builder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-builder/index.html","searchKeys":["Builder","interface Builder<T>","io.github.detekt.tooling.dsl.Builder"]},{"name":"interface CompilerSpec","description":"io.github.detekt.tooling.api.spec.CompilerSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/index.html","searchKeys":["CompilerSpec","interface CompilerSpec","io.github.detekt.tooling.api.spec.CompilerSpec"]},{"name":"interface ConfigSpec","description":"io.github.detekt.tooling.api.spec.ConfigSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-config-spec/index.html","searchKeys":["ConfigSpec","interface ConfigSpec","io.github.detekt.tooling.api.spec.ConfigSpec"]},{"name":"interface DefaultConfigurationProvider","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/index.html","searchKeys":["DefaultConfigurationProvider","interface DefaultConfigurationProvider","io.github.detekt.tooling.api.DefaultConfigurationProvider"]},{"name":"interface Detekt","description":"io.github.detekt.tooling.api.Detekt","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt/index.html","searchKeys":["Detekt","interface Detekt","io.github.detekt.tooling.api.Detekt"]},{"name":"interface DetektCli","description":"io.github.detekt.tooling.api.DetektCli","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-cli/index.html","searchKeys":["DetektCli","interface DetektCli","io.github.detekt.tooling.api.DetektCli"]},{"name":"interface DetektProvider","description":"io.github.detekt.tooling.api.DetektProvider","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-provider/index.html","searchKeys":["DetektProvider","interface DetektProvider","io.github.detekt.tooling.api.DetektProvider"]},{"name":"interface ExecutionSpec","description":"io.github.detekt.tooling.api.spec.ExecutionSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-execution-spec/index.html","searchKeys":["ExecutionSpec","interface ExecutionSpec","io.github.detekt.tooling.api.spec.ExecutionSpec"]},{"name":"interface ExtensionsSpec","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/index.html","searchKeys":["ExtensionsSpec","interface ExtensionsSpec","io.github.detekt.tooling.api.spec.ExtensionsSpec"]},{"name":"interface LoggingSpec","description":"io.github.detekt.tooling.api.spec.LoggingSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-logging-spec/index.html","searchKeys":["LoggingSpec","interface LoggingSpec","io.github.detekt.tooling.api.spec.LoggingSpec"]},{"name":"interface Plugins","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/-plugins/index.html","searchKeys":["Plugins","interface Plugins","io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins"]},{"name":"interface ProcessingSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/index.html","searchKeys":["ProcessingSpec","interface ProcessingSpec","io.github.detekt.tooling.api.spec.ProcessingSpec"]},{"name":"interface ProjectSpec","description":"io.github.detekt.tooling.api.spec.ProjectSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-project-spec/index.html","searchKeys":["ProjectSpec","interface ProjectSpec","io.github.detekt.tooling.api.spec.ProjectSpec"]},{"name":"interface Report","description":"io.github.detekt.tooling.api.spec.ReportsSpec.Report","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-reports-spec/-report/index.html","searchKeys":["Report","interface Report","io.github.detekt.tooling.api.spec.ReportsSpec.Report"]},{"name":"interface ReportsSpec","description":"io.github.detekt.tooling.api.spec.ReportsSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-reports-spec/index.html","searchKeys":["ReportsSpec","interface ReportsSpec","io.github.detekt.tooling.api.spec.ReportsSpec"]},{"name":"interface RulesSpec","description":"io.github.detekt.tooling.api.spec.RulesSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/index.html","searchKeys":["RulesSpec","interface RulesSpec","io.github.detekt.tooling.api.spec.RulesSpec"]},{"name":"interface VersionProvider","description":"io.github.detekt.tooling.api.VersionProvider","location":"detekt-tooling/io.github.detekt.tooling.api/-version-provider/index.html","searchKeys":["VersionProvider","interface VersionProvider","io.github.detekt.tooling.api.VersionProvider"]},{"name":"light","description":"io.github.detekt.tooling.api.AnalysisMode.light","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-mode/light/index.html","searchKeys":["light","light","io.github.detekt.tooling.api.AnalysisMode.light"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.BaselineProvider.Companion","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.BaselineProvider.Companion"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider.Companion","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.DefaultConfigurationProvider.Companion"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.DetektCli.Companion","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-cli/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.DetektCli.Companion"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.DetektProvider.Companion","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-provider/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.DetektProvider.Companion"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.VersionProvider.Companion","location":"detekt-tooling/io.github.detekt.tooling.api/-version-provider/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.VersionProvider.Companion"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.Companion","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.spec.ProcessingSpec.Companion"]},{"name":"object EmptyContainer : Detektion","description":"io.github.detekt.tooling.internal.EmptyContainer","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/index.html","searchKeys":["EmptyContainer","object EmptyContainer : Detektion","io.github.detekt.tooling.internal.EmptyContainer"]},{"name":"open override fun <V> getUserData(key: Key<V>): V?","description":"io.github.detekt.tooling.internal.EmptyContainer.getUserData","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/get-user-data.html","searchKeys":["getUserData","open override fun <V> getUserData(key: Key<V>): V?","io.github.detekt.tooling.internal.EmptyContainer.getUserData"]},{"name":"open override fun <V> putUserData(key: Key<V>, value: V?): Nothing","description":"io.github.detekt.tooling.internal.EmptyContainer.putUserData","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/put-user-data.html","searchKeys":["putUserData","open override fun <V> putUserData(key: Key<V>, value: V?): Nothing","io.github.detekt.tooling.internal.EmptyContainer.putUserData"]},{"name":"open override fun add(notification: Notification): Nothing","description":"io.github.detekt.tooling.internal.EmptyContainer.add","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/add.html","searchKeys":["add","open override fun add(notification: Notification): Nothing","io.github.detekt.tooling.internal.EmptyContainer.add"]},{"name":"open override fun add(projectMetric: ProjectMetric): Nothing","description":"io.github.detekt.tooling.internal.EmptyContainer.add","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/add.html","searchKeys":["add","open override fun add(projectMetric: ProjectMetric): Nothing","io.github.detekt.tooling.internal.EmptyContainer.add"]},{"name":"open override fun build(): BaselineSpec","description":"io.github.detekt.tooling.dsl.BaselineSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-baseline-spec-builder/build.html","searchKeys":["build","open override fun build(): BaselineSpec","io.github.detekt.tooling.dsl.BaselineSpecBuilder.build"]},{"name":"open override fun build(): CompilerSpec","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/build.html","searchKeys":["build","open override fun build(): CompilerSpec","io.github.detekt.tooling.dsl.CompilerSpecBuilder.build"]},{"name":"open override fun build(): ConfigSpec","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/build.html","searchKeys":["build","open override fun build(): ConfigSpec","io.github.detekt.tooling.dsl.ConfigSpecBuilder.build"]},{"name":"open override fun build(): ExecutionSpec","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/build.html","searchKeys":["build","open override fun build(): ExecutionSpec","io.github.detekt.tooling.dsl.ExecutionSpecBuilder.build"]},{"name":"open override fun build(): ExtensionsSpec","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/build.html","searchKeys":["build","open override fun build(): ExtensionsSpec","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.build"]},{"name":"open override fun build(): LoggingSpec","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/build.html","searchKeys":["build","open override fun build(): LoggingSpec","io.github.detekt.tooling.dsl.LoggingSpecBuilder.build"]},{"name":"open override fun build(): ProcessingSpec","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/build.html","searchKeys":["build","open override fun build(): ProcessingSpec","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.build"]},{"name":"open override fun build(): ProjectSpec","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/build.html","searchKeys":["build","open override fun build(): ProjectSpec","io.github.detekt.tooling.dsl.ProjectSpecBuilder.build"]},{"name":"open override fun build(): ReportsSpec","description":"io.github.detekt.tooling.dsl.ReportsSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-reports-spec-builder/build.html","searchKeys":["build","open override fun build(): ReportsSpec","io.github.detekt.tooling.dsl.ReportsSpecBuilder.build"]},{"name":"open override fun build(): RulesSpec","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/build.html","searchKeys":["build","open override fun build(): RulesSpec","io.github.detekt.tooling.dsl.RulesSpecBuilder.build"]},{"name":"open override val cause: Throwable","description":"io.github.detekt.tooling.api.UnexpectedError.cause","location":"detekt-tooling/io.github.detekt.tooling.api/-unexpected-error/cause.html","searchKeys":["cause","open override val cause: Throwable","io.github.detekt.tooling.api.UnexpectedError.cause"]},{"name":"open override val container: Detektion?","description":"io.github.detekt.tooling.internal.DefaultAnalysisResult.container","location":"detekt-tooling/io.github.detekt.tooling.internal/-default-analysis-result/container.html","searchKeys":["container","open override val container: Detektion?","io.github.detekt.tooling.internal.DefaultAnalysisResult.container"]},{"name":"open override val error: DetektError? = null","description":"io.github.detekt.tooling.internal.DefaultAnalysisResult.error","location":"detekt-tooling/io.github.detekt.tooling.internal/-default-analysis-result/error.html","searchKeys":["error","open override val error: DetektError? = null","io.github.detekt.tooling.internal.DefaultAnalysisResult.error"]},{"name":"open override val issues: List<Issue>","description":"io.github.detekt.tooling.internal.EmptyContainer.issues","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/issues.html","searchKeys":["issues","open override val issues: List<Issue>","io.github.detekt.tooling.internal.EmptyContainer.issues"]},{"name":"open override val metrics: Collection<ProjectMetric>","description":"io.github.detekt.tooling.internal.EmptyContainer.metrics","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/metrics.html","searchKeys":["metrics","open override val metrics: Collection<ProjectMetric>","io.github.detekt.tooling.internal.EmptyContainer.metrics"]},{"name":"open override val notifications: Collection<Notification>","description":"io.github.detekt.tooling.internal.EmptyContainer.notifications","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/notifications.html","searchKeys":["notifications","open override val notifications: Collection<Notification>","io.github.detekt.tooling.internal.EmptyContainer.notifications"]},{"name":"open val priority: Int","description":"io.github.detekt.tooling.api.DetektProvider.priority","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-provider/priority.html","searchKeys":["priority","open val priority: Int","io.github.detekt.tooling.api.DetektProvider.priority"]},{"name":"operator fun invoke(init: ProcessingSpecBuilder.() -> Unit): ProcessingSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.Companion.invoke","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(init: ProcessingSpecBuilder.() -> Unit): ProcessingSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.Companion.invoke"]},{"name":"sealed class DetektError : RuntimeException","description":"io.github.detekt.tooling.api.DetektError","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-error/index.html","searchKeys":["DetektError","sealed class DetektError : RuntimeException","io.github.detekt.tooling.api.DetektError"]},{"name":"sealed class FailurePolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-failure-policy/index.html","searchKeys":["FailurePolicy","sealed class FailurePolicy","io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy"]},{"name":"sealed class RunPolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/index.html","searchKeys":["RunPolicy","sealed class RunPolicy","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy"]},{"name":"typealias ExtensionId = String","description":"io.github.detekt.tooling.api.spec.ExtensionId","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extension-id/index.html","searchKeys":["ExtensionId","typealias ExtensionId = String","io.github.detekt.tooling.api.spec.ExtensionId"]},{"name":"typealias FindingId = String","description":"io.github.detekt.tooling.api.FindingId","location":"detekt-tooling/io.github.detekt.tooling.api/-finding-id/index.html","searchKeys":["FindingId","typealias FindingId = String","io.github.detekt.tooling.api.FindingId"]},{"name":"typealias FindingsIdList = Set<String>","description":"io.github.detekt.tooling.api.FindingsIdList","location":"detekt-tooling/io.github.detekt.tooling.api/-findings-id-list/index.html","searchKeys":["FindingsIdList","typealias FindingsIdList = Set<String>","io.github.detekt.tooling.api.FindingsIdList"]},{"name":"val entries: EnumEntries<AnalysisMode>","description":"io.github.detekt.tooling.api.AnalysisMode.entries","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<AnalysisMode>","io.github.detekt.tooling.api.AnalysisMode.entries"]},{"name":"val minSeverity: Severity","description":"io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy.FailOnSeverity.minSeverity","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-failure-policy/-fail-on-severity/min-severity.html","searchKeys":["minSeverity","val minSeverity: Severity","io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy.FailOnSeverity.minSeverity"]},{"name":"val ruleId: String","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule.ruleId","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/-restrict-to-single-rule/rule-id.html","searchKeys":["ruleId","val ruleId: String","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule.ruleId"]},{"name":"val ruleSetId: RuleSet.Id","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule.ruleSetId","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/-restrict-to-single-rule/rule-set-id.html","searchKeys":["ruleSetId","val ruleSetId: RuleSet.Id","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule.ruleSetId"]},{"name":"var activateAllRules: Boolean","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.activateAllRules","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/activate-all-rules.html","searchKeys":["activateAllRules","var activateAllRules: Boolean","io.github.detekt.tooling.dsl.RulesSpecBuilder.activateAllRules"]},{"name":"var analysisMode: AnalysisMode","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder.analysisMode","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/analysis-mode.html","searchKeys":["analysisMode","var analysisMode: AnalysisMode","io.github.detekt.tooling.dsl.ProjectSpecBuilder.analysisMode"]},{"name":"var apiVersion: String?","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.apiVersion","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/api-version.html","searchKeys":["apiVersion","var apiVersion: String?","io.github.detekt.tooling.dsl.CompilerSpecBuilder.apiVersion"]},{"name":"var autoCorrect: Boolean","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.autoCorrect","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/auto-correct.html","searchKeys":["autoCorrect","var autoCorrect: Boolean","io.github.detekt.tooling.dsl.RulesSpecBuilder.autoCorrect"]},{"name":"var basePath: Path","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder.basePath","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/base-path.html","searchKeys":["basePath","var basePath: Path","io.github.detekt.tooling.dsl.ProjectSpecBuilder.basePath"]},{"name":"var classpath: String?","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.classpath","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/classpath.html","searchKeys":["classpath","var classpath: String?","io.github.detekt.tooling.dsl.CompilerSpecBuilder.classpath"]},{"name":"var configPaths: Collection<Path>","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.configPaths","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/config-paths.html","searchKeys":["configPaths","var configPaths: Collection<Path>","io.github.detekt.tooling.dsl.ConfigSpecBuilder.configPaths"]},{"name":"var debug: Boolean","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder.debug","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/debug.html","searchKeys":["debug","var debug: Boolean","io.github.detekt.tooling.dsl.LoggingSpecBuilder.debug"]},{"name":"var errorChannel: Appendable","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder.errorChannel","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/error-channel.html","searchKeys":["errorChannel","var errorChannel: Appendable","io.github.detekt.tooling.dsl.LoggingSpecBuilder.errorChannel"]},{"name":"var executorService: ExecutorService?","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder.executorService","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/executor-service.html","searchKeys":["executorService","var executorService: ExecutorService?","io.github.detekt.tooling.dsl.ExecutionSpecBuilder.executorService"]},{"name":"var failurePolicy: RulesSpec.FailurePolicy","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.failurePolicy","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/failure-policy.html","searchKeys":["failurePolicy","var failurePolicy: RulesSpec.FailurePolicy","io.github.detekt.tooling.dsl.RulesSpecBuilder.failurePolicy"]},{"name":"var freeCompilerArgs: List<String>","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.freeCompilerArgs","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/free-compiler-args.html","searchKeys":["freeCompilerArgs","var freeCompilerArgs: List<String>","io.github.detekt.tooling.dsl.CompilerSpecBuilder.freeCompilerArgs"]},{"name":"var inputPaths: Collection<Path>","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder.inputPaths","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/input-paths.html","searchKeys":["inputPaths","var inputPaths: Collection<Path>","io.github.detekt.tooling.dsl.ProjectSpecBuilder.inputPaths"]},{"name":"var jdkHome: Path?","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.jdkHome","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/jdk-home.html","searchKeys":["jdkHome","var jdkHome: Path?","io.github.detekt.tooling.dsl.CompilerSpecBuilder.jdkHome"]},{"name":"var jvmTarget: String","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.jvmTarget","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/jvm-target.html","searchKeys":["jvmTarget","var jvmTarget: String","io.github.detekt.tooling.dsl.CompilerSpecBuilder.jvmTarget"]},{"name":"var languageVersion: String?","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.languageVersion","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/language-version.html","searchKeys":["languageVersion","var languageVersion: String?","io.github.detekt.tooling.dsl.CompilerSpecBuilder.languageVersion"]},{"name":"var outputChannel: Appendable","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder.outputChannel","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/output-channel.html","searchKeys":["outputChannel","var outputChannel: Appendable","io.github.detekt.tooling.dsl.LoggingSpecBuilder.outputChannel"]},{"name":"var parallelAnalysis: Boolean","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder.parallelAnalysis","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/parallel-analysis.html","searchKeys":["parallelAnalysis","var parallelAnalysis: Boolean","io.github.detekt.tooling.dsl.ExecutionSpecBuilder.parallelAnalysis"]},{"name":"var parallelParsing: Boolean","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder.parallelParsing","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/parallel-parsing.html","searchKeys":["parallelParsing","var parallelParsing: Boolean","io.github.detekt.tooling.dsl.ExecutionSpecBuilder.parallelParsing"]},{"name":"var path: Path?","description":"io.github.detekt.tooling.dsl.BaselineSpecBuilder.path","location":"detekt-tooling/io.github.detekt.tooling.dsl/-baseline-spec-builder/path.html","searchKeys":["path","var path: Path?","io.github.detekt.tooling.dsl.BaselineSpecBuilder.path"]},{"name":"var plugins: ExtensionsSpec.Plugins?","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.plugins","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/plugins.html","searchKeys":["plugins","var plugins: ExtensionsSpec.Plugins?","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.plugins"]},{"name":"var reports: MutableCollection<ReportsSpec.Report>","description":"io.github.detekt.tooling.dsl.ReportsSpecBuilder.reports","location":"detekt-tooling/io.github.detekt.tooling.dsl/-reports-spec-builder/reports.html","searchKeys":["reports","var reports: MutableCollection<ReportsSpec.Report>","io.github.detekt.tooling.dsl.ReportsSpecBuilder.reports"]},{"name":"var resources: Collection<URL>","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.resources","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/resources.html","searchKeys":["resources","var resources: Collection<URL>","io.github.detekt.tooling.dsl.ConfigSpecBuilder.resources"]},{"name":"var runPolicy: RulesSpec.RunPolicy","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.runPolicy","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/run-policy.html","searchKeys":["runPolicy","var runPolicy: RulesSpec.RunPolicy","io.github.detekt.tooling.dsl.RulesSpecBuilder.runPolicy"]},{"name":"var shouldCreateDuringAnalysis: Boolean","description":"io.github.detekt.tooling.dsl.BaselineSpecBuilder.shouldCreateDuringAnalysis","location":"detekt-tooling/io.github.detekt.tooling.dsl/-baseline-spec-builder/should-create-during-analysis.html","searchKeys":["shouldCreateDuringAnalysis","var shouldCreateDuringAnalysis: Boolean","io.github.detekt.tooling.dsl.BaselineSpecBuilder.shouldCreateDuringAnalysis"]},{"name":"var shouldValidateBeforeAnalysis: Boolean?","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.shouldValidateBeforeAnalysis","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/should-validate-before-analysis.html","searchKeys":["shouldValidateBeforeAnalysis","var shouldValidateBeforeAnalysis: Boolean?","io.github.detekt.tooling.dsl.ConfigSpecBuilder.shouldValidateBeforeAnalysis"]},{"name":"var useDefaultConfig: Boolean","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.useDefaultConfig","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/use-default-config.html","searchKeys":["useDefaultConfig","var useDefaultConfig: Boolean","io.github.detekt.tooling.dsl.ConfigSpecBuilder.useDefaultConfig"]}]